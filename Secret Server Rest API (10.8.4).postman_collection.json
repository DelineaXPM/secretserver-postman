{
	"info": {
		"_postman_id": "4691657a-1433-4e2e-9371-e56105b57c49",
		"name": "Secret Server Rest API (10.8.4)",
		"description": "REST API documentation for Secret Server. This document describes how to use the REST API. All requests require an authentication token; please see the <a href=\"../OAuth/\">authentication document</a> for more information. The <a href=\"swagger.json\">Swagger specification</a> for this API is also available.\n\nContact Support:\n Name: Support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Retrieve Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    if (pm.environment.get(\"SecretServerUrl\") === \"\")\r",
									"    {\r",
									"        console.log(\"You need to enter *SecertServerUrl* environment variable first.\");\r",
									"    }\r",
									"    if (pm.environment.get(\"UserName\") === \"\")\r",
									"    {\r",
									"        console.log(\"You need to enter *UserName* environment variable first.\");\r",
									"    }\r",
									"    if (pm.environment.get(\"UserPassword\") === \"\")\r",
									"    {\r",
									"        console.log(\"You need to enter *UserPassword* environment variable first.\");\r",
									"    }\r",
									"    else\r",
									"    {\r",
									"        const moment = require('moment');\r",
									"        var json = JSON.parse(responseBody);\r",
									"        postman.setEnvironmentVariable(\"bearToken\", json.access_token);\r",
									"        postman.setEnvironmentVariable(\"refreshToken\", json.refresh_token);\r",
									"    }\r",
									"}\r",
									"catch (e) {\r",
									"    console.log(e);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{UserName}}",
									"description": "Secret Server authentication username"
								},
								{
									"key": "password",
									"value": "{{UserPassword}}",
									"description": "Secret Server authentication password"
								},
								{
									"key": "grant_type",
									"value": "password",
									"description": "Authentication grant type (This can only be one of password)"
								}
							]
						},
						"url": {
							"raw": "{{SecretServerUrl}}/oauth2/token",
							"host": [
								"{{SecretServerUrl}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						},
						"description": "Retrieve an access token for use with other API requests"
					},
					"response": [
						{
							"name": "Successful retrieval of an access token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "<string>",
											"description": {
												"content": "Secret Server authentication username",
												"type": "text/plain"
											}
										},
										{
											"key": "password",
											"value": "<string>",
											"description": {
												"content": "Secret Server authentication password",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "Authentication grant type (This can only be one of password)",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An error occurred",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "<string>",
											"description": {
												"content": "Secret Server authentication username",
												"type": "text/plain"
											}
										},
										{
											"key": "password",
											"value": "<string>",
											"description": {
												"content": "Secret Server authentication password",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "Authentication grant type (This can only be one of password)",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Refresh Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const moment = require('moment');\r",
									"    var json = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"bearToken\", json.access_token);\r",
									"    postman.setEnvironmentVariable(\"refreshToken\", json.refresh_token);\r",
									"}\r",
									"catch (e) {\r",
									"    console.log(e);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{refreshToken}}",
									"description": "The refresh token"
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"description": "Authentication grant type (This can only be one of refresh)"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/oauth2/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth2",
								"refresh"
							]
						},
						"description": "Refresh an access token for use with other API requests"
					},
					"response": [
						{
							"name": "An error occurred",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "refresh_token",
											"value": "<string>",
											"description": {
												"content": "The refresh token",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "Authentication grant type (This can only be one of refresh)",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth2/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth2",
										"refresh"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successful retrieval of an access token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "refresh_token",
											"value": "<string>",
											"description": {
												"content": "The refresh token",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "<string>",
											"description": {
												"content": "Authentication grant type (This can only be one of refresh)",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth2/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth2",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Authenticate against Secret Server and acquire a token for other API requests"
		},
		{
			"name": "Activations",
			"item": [
				{
					"name": "Perform an online activation of Secret Server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"email\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activations"
							]
						},
						"description": "Perform an online activation of Secret Server"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Activation result object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"debugMessages\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"errorMessage\": \"<string>\",\n \"success\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Activate Licenses"
		},
		{
			"name": "ActiveDirectory",
			"item": [
				{
					"name": "Search Domains",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/active-directory/domains?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"active-directory",
								"domains"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Domains in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Domains"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Domain search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"distinguishedName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"friendlyName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"distinguishedName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"friendlyName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"discoverSpecificOUs\": \"<boolean>\",\n    \"domainName\": \"<string>\",\n    \"enableDiscovery\": \"<boolean>\",\n    \"enableLogin\": \"<boolean>\",\n    \"friendlyName\": \"<string>\",\n    \"requireDuoAuthentication\": \"<boolean>\",\n    \"requireEmailAuthentication\": \"<boolean>\",\n    \"requireFido2Authentication\": \"<boolean>\",\n    \"requireOATHAuthentication\": \"<boolean>\",\n    \"requireRadiusAuthentication\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"syncSecretId\": \"<integer>\",\n    \"useAES256\": \"<boolean>\",\n    \"useSecureLDAP\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/active-directory/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"active-directory",
								"domains"
							]
						},
						"description": "Create a new Domain"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"discoverSpecificOUs\": \"<boolean>\",\n    \"domainName\": \"<string>\",\n    \"enableDiscovery\": \"<boolean>\",\n    \"enableLogin\": \"<boolean>\",\n    \"friendlyName\": \"<string>\",\n    \"requireDuoAuthentication\": \"<boolean>\",\n    \"requireEmailAuthentication\": \"<boolean>\",\n    \"requireFido2Authentication\": \"<boolean>\",\n    \"requireOATHAuthentication\": \"<boolean>\",\n    \"requireRadiusAuthentication\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"syncSecretId\": \"<integer>\",\n    \"useAES256\": \"<boolean>\",\n    \"useSecureLDAP\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"discoverSpecificOUs\": \"<boolean>\",\n    \"domainName\": \"<string>\",\n    \"enableDiscovery\": \"<boolean>\",\n    \"enableLogin\": \"<boolean>\",\n    \"friendlyName\": \"<string>\",\n    \"requireDuoAuthentication\": \"<boolean>\",\n    \"requireEmailAuthentication\": \"<boolean>\",\n    \"requireFido2Authentication\": \"<boolean>\",\n    \"requireOATHAuthentication\": \"<boolean>\",\n    \"requireRadiusAuthentication\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"syncSecretId\": \"<integer>\",\n    \"useAES256\": \"<boolean>\",\n    \"useSecureLDAP\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Domain object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"discoverSpecificOUs\": \"<boolean>\",\n    \"domainName\": \"<string>\",\n    \"enableDiscovery\": \"<boolean>\",\n    \"enableLogin\": \"<boolean>\",\n    \"friendlyName\": \"<string>\",\n    \"requireDuoAuthentication\": \"<boolean>\",\n    \"requireEmailAuthentication\": \"<boolean>\",\n    \"requireFido2Authentication\": \"<boolean>\",\n    \"requireOATHAuthentication\": \"<boolean>\",\n    \"requireRadiusAuthentication\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"syncSecretId\": \"<integer>\",\n    \"useAES256\": \"<boolean>\",\n    \"useSecureLDAP\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"baseDN\": \"<string>\",\n \"concurrencyId\": \"<string>\",\n \"configurationId\": \"<integer>\",\n \"discoverSpecificOUs\": \"<boolean>\",\n \"distinguishedName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enableDiscovery\": \"<boolean>\",\n \"enableLogin\": \"<boolean>\",\n \"friendlyName\": \"<string>\",\n \"lastDiscoveryRunDate\": \"<dateTime>\",\n \"netBIOSName\": \"<string>\",\n \"requireDuoAuthentication\": \"<boolean>\",\n \"requireEmailAuthentication\": \"<boolean>\",\n \"requireFido2Authentication\": \"<boolean>\",\n \"requireOATHAuthentication\": \"<boolean>\",\n \"requireRadiusAuthentication\": \"<boolean>\",\n \"siteId\": \"<integer>\",\n \"syncSecretId\": \"<integer>\",\n \"useAES256\": \"<boolean>\",\n \"useSecureLDAP\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"discoverSpecificOUs\": \"<boolean>\",\n    \"domainName\": \"<string>\",\n    \"enableDiscovery\": \"<boolean>\",\n    \"enableLogin\": \"<boolean>\",\n    \"friendlyName\": \"<string>\",\n    \"requireDuoAuthentication\": \"<boolean>\",\n    \"requireEmailAuthentication\": \"<boolean>\",\n    \"requireFido2Authentication\": \"<boolean>\",\n    \"requireOATHAuthentication\": \"<boolean>\",\n    \"requireRadiusAuthentication\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"syncSecretId\": \"<integer>\",\n    \"useAES256\": \"<boolean>\",\n    \"useSecureLDAP\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Domain",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/active-directory/domains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"active-directory",
								"domains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Domain ID"
								}
							]
						},
						"description": "Get a single Domain by ID"
					},
					"response": [
						{
							"name": "Domain object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"baseDN\": \"<string>\",\n \"concurrencyId\": \"<string>\",\n \"configurationId\": \"<integer>\",\n \"discoverSpecificOUs\": \"<boolean>\",\n \"distinguishedName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enableDiscovery\": \"<boolean>\",\n \"enableLogin\": \"<boolean>\",\n \"friendlyName\": \"<string>\",\n \"lastDiscoveryRunDate\": \"<dateTime>\",\n \"netBIOSName\": \"<string>\",\n \"requireDuoAuthentication\": \"<boolean>\",\n \"requireEmailAuthentication\": \"<boolean>\",\n \"requireFido2Authentication\": \"<boolean>\",\n \"requireOATHAuthentication\": \"<boolean>\",\n \"requireRadiusAuthentication\": \"<boolean>\",\n \"siteId\": \"<integer>\",\n \"syncSecretId\": \"<integer>\",\n \"useAES256\": \"<boolean>\",\n \"useSecureLDAP\": \"<boolean>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/domains/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"domains",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Synchronize Active Directory Groups and Users",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/active-directory/synchronize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"active-directory",
								"synchronize"
							]
						},
						"description": "Synchronize Members from Active Directory Groups that have Sync enabled"
					},
					"response": [
						{
							"name": "Bool",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/synchronize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"synchronize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/synchronize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"synchronize"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/synchronize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"synchronize"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/active-directory/synchronize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"active-directory",
										"synchronize"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Active Directory"
		},
		{
			"name": "AppClients",
			"item": [
				{
					"name": "Create App Client",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"redirectUri\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/app-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-clients"
							]
						},
						"description": "Create a new app client"
					},
					"response": [
						{
							"name": "App client object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"id\": \"<integer>\",\n \"redirectUri\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get App Client",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app-clients/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-clients",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive app clients"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) App client ID"
								}
							]
						},
						"description": "Get a single app client by ID"
					},
					"response": [
						{
							"name": "App client object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"id\": \"<integer>\",\n \"redirectUri\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update App Client",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"redirectUri\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/app-clients/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-clients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) App client ID"
								}
							]
						},
						"description": "Update a single app client by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "App client object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"id\": \"<integer>\",\n \"redirectUri\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"redirectUri\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete App Client",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app-clients/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-clients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) App client ID"
								}
							]
						},
						"description": "Delete an app client by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get App Client Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app-clients/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-clients",
								"stub"
							]
						},
						"description": "Return the default values for a new app client"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "App client object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"id\": \"<integer>\",\n \"redirectUri\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-clients/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-clients",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain app clients"
		},
		{
			"name": "ApplicationAccounts",
			"item": [
				{
					"name": "Lookup Application Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/application-accounts/lookup?filter.includeAll=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"application-accounts",
								"lookup"
							],
							"query": [
								{
									"key": "filter.includeAll",
									"value": "<boolean>",
									"description": "IncludeAll"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page application accounts, returning only user id and display"
					},
					"response": [
						{
							"name": "User search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-accounts/lookup?filter.includeAll=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-accounts",
										"lookup"
									],
									"query": [
										{
											"key": "filter.includeAll",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-accounts/lookup?filter.includeAll=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-accounts",
										"lookup"
									],
									"query": [
										{
											"key": "filter.includeAll",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-accounts/lookup?filter.includeAll=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-accounts",
										"lookup"
									],
									"query": [
										{
											"key": "filter.includeAll",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-accounts/lookup?filter.includeAll=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-accounts",
										"lookup"
									],
									"query": [
										{
											"key": "filter.includeAll",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain users"
		},
		{
			"name": "ApplicationRequest",
			"item": [
				{
					"name": "Get Application Access Requests by Device Id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/application-access-request/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"application-access-request",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) deviceId"
								}
							]
						},
						"description": "Get Application Access Requests by Device Id."
					},
					"response": [
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"createdDate\": \"<dateTime>\",\n \"deviceId\": \"<integer>\",\n \"requestingApplicationUsername\": \"<string>\",\n \"status\": \"Denied\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Application Access Requests by Device Id.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"Approved\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/application-access-request/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"application-access-request",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) deviceId"
								}
							]
						},
						"description": "Get Application Access Requests by Device Id."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"Approved\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"Approved\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"Approved\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"Approved\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/application-access-request/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"createdDate\": \"<dateTime>\",\n \"deviceId\": \"<integer>\",\n \"requestingApplicationUsername\": \"<string>\",\n \"status\": \"Denied\"\n}"
						}
					]
				},
				{
					"name": "Get Application Access Request Audits by Device Id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/application-access-request-audits?filter.deviceId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"application-access-request-audits"
							],
							"query": [
								{
									"key": "filter.deviceId",
									"value": "<integer>",
									"description": "DeviceId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Get Application Access Request Audits by Device Id."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request-audits?filter.deviceId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request-audits"
									],
									"query": [
										{
											"key": "filter.deviceId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Application Access Request Audit View Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request-audits?filter.deviceId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request-audits"
									],
									"query": [
										{
											"key": "filter.deviceId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"ipAddress\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"ipAddress\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request-audits?filter.deviceId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request-audits"
									],
									"query": [
										{
											"key": "filter.deviceId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-request-audits?filter.deviceId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-request-audits"
									],
									"query": [
										{
											"key": "filter.deviceId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Application Access Requests by Status for Current User.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/application-access-requests?filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"application-access-requests"
							],
							"query": [
								{
									"key": "filter.status",
									"value": "<string>",
									"description": "Status"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Get Application Access Requests by Status for Current User."
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-requests?filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-requests"
									],
									"query": [
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-requests?filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-requests"
									],
									"query": [
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"createdDate\": \"<dateTime>\",\n   \"deviceId\": \"<integer>\",\n   \"requestingApplicationUsername\": \"<string>\",\n   \"status\": \"Pending\"\n  },\n  {\n   \"createdDate\": \"<dateTime>\",\n   \"deviceId\": \"<integer>\",\n   \"requestingApplicationUsername\": \"<string>\",\n   \"status\": \"Denied\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-requests?filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-requests"
									],
									"query": [
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/application-access-requests?filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application-access-requests"
									],
									"query": [
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "ApplicationRequestController"
		},
		{
			"name": "Configuration",
			"item": [
				{
					"name": "Internal Site Connector Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/configuration/internal-site-connector",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"internal-site-connector"
							]
						},
						"description": "Internal Site Connector Configuration"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal Site Connector Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"siteConnectorId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Internal Site Connector",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"siteConnectorId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/internal-site-connector",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"internal-site-connector"
							]
						},
						"description": "Update Internal Site Connector"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"siteConnectorId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"siteConnectorId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal Site Connector Configuration",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"siteConnectorId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"siteConnectorId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"siteConnectorId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/configuration/internal-site-connector",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"internal-site-connector"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Site Connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/configuration/site-connector?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"site-connector"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "includeInactive"
								}
							]
						},
						"description": "Site Connectors"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/site-connector?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"site-connector"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Site Connectors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/site-connector?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"site-connector"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"active\": \"<boolean>\",\n  \"siteConnectorId\": \"<integer>\",\n  \"siteConnectorName\": \"<string>\"\n },\n {\n  \"active\": \"<boolean>\",\n  \"siteConnectorId\": \"<integer>\",\n  \"siteConnectorName\": \"<string>\"\n }\n]"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/site-connector?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"site-connector"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configuration/site-connector?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configuration",
										"site-connector"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Secret Server Configuration"
		},
		{
			"name": "Diagnostics",
			"item": [
				{
					"name": "Get Diagnostic Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics"
							]
						},
						"description": "Get Diagnostic Information"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Diagnostics Info object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activeDirectorySynchronizationThreadStatus\": \"<string>\",\n \"backboneClass\": \"<string>\",\n \"backboneType\": \"<string>\",\n \"hsmCacheMapSize\": \"<string>\",\n \"hsmTiming\": \"<string>\",\n \"isDomainController\": \"<string>\",\n \"lastUpgrade\": \"<string>\",\n \"ldapProvider\": \"<string>\",\n \"maxDegreeOfParallelism\": \"<string>\",\n \"netFxVersion\": \"<string>\",\n \"operatingSystem\": \"<string>\",\n \"operatingSystemArchitecture\": \"<string>\",\n \"physicalMemory\": \"<string>\",\n \"productVersion\": \"<string>\",\n \"proxyConfiguration\": \"<string>\",\n \"readOnlyMode\": \"<string>\",\n \"searchIndexerThreadStatus\": \"<string>\",\n \"secretServerUrl\": \"<string>\",\n \"serverName\": \"<string>\",\n \"serverTime\": \"<string>\",\n \"serverTimeZone\": \"<string>\",\n \"sqlDatabaseName\": \"<string>\",\n \"sqlIsDatabaseReplicated\": \"<string>\",\n \"sqlServerCollation\": \"<string>\",\n \"sqlServerConnectionString\": \"<string>\",\n \"sqlServerEdition\": \"<string>\",\n \"sqlServerIsPublished\": \"<string>\",\n \"sqlServerIsReplicationRunning\": \"<string>\",\n \"sqlServerIsSubscribed\": \"<string>\",\n \"sqlServerName\": \"<string>\",\n \"sqlServerTime\": \"<string>\",\n \"sqlServerVersion\": \"<string>\",\n \"upgradeAvailable\": \"<string>\",\n \"upgradeInProgress\": \"<string>\",\n \"upTime\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get App Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/app-settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"app-settings"
							]
						},
						"description": "Get App Settings"
					},
					"response": [
						{
							"name": "App Setting Dictionary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/app-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"app-settings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/app-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"app-settings"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/app-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"app-settings"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/app-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"app-settings"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Background Processes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/background-processes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"background-processes"
							]
						},
						"description": "Get Background Process Information"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/background-processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"background-processes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Background Process Enumerable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/background-processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"background-processes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"applicationName\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"identityName\": \"<string>\",\n  \"lastActivity\": \"<dateTime>\",\n  \"managedThreadId\": \"<integer>\",\n  \"threadName\": \"<string>\"\n },\n {\n  \"applicationName\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"identityName\": \"<string>\",\n  \"lastActivity\": \"<dateTime>\",\n  \"managedThreadId\": \"<integer>\",\n  \"threadName\": \"<string>\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/background-processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"background-processes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/background-processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"background-processes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Clear Quartz Job Errors",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/clear-quartz-job-errors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"clear-quartz-job-errors"
							]
						},
						"description": "Clear Quartz Job Errors"
					},
					"response": [
						{
							"name": "Clear Quartz Job Errors Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-quartz-job-errors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-quartz-job-errors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-quartz-job-errors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-quartz-job-errors"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-quartz-job-errors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-quartz-job-errors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-quartz-job-errors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-quartz-job-errors"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Clear Upgrade In Progress",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/clear-upgrade-in-progress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"clear-upgrade-in-progress"
							]
						},
						"description": "Clear Upgrade In Progress"
					},
					"response": [
						{
							"name": "Clear Upgrade In Progress Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-upgrade-in-progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-upgrade-in-progress"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-upgrade-in-progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-upgrade-in-progress"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-upgrade-in-progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-upgrade-in-progress"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/clear-upgrade-in-progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"clear-upgrade-in-progress"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get ComputerScan Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/computer-scan-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"computer-scan-logs"
							]
						},
						"description": "Get ComputerScan Logs"
					},
					"response": [
						{
							"name": "Get ComputerScan Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/computer-scan-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"computer-scan-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/computer-scan-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"computer-scan-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/computer-scan-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"computer-scan-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/computer-scan-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"computer-scan-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Connectivity Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/connectivity-report",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"connectivity-report"
							]
						},
						"description": "Get Connectivity Report"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/connectivity-report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"connectivity-report"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Connectivity Report",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/connectivity-report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"connectivity-report"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/connectivity-report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"connectivity-report"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/connectivity-report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"connectivity-report"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Discovery Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/discovery-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"discovery-logs"
							]
						},
						"description": "Get Discovery Logs"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/discovery-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"discovery-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Get Discovery Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/discovery-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"discovery-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/discovery-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"discovery-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/discovery-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"discovery-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get General Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/general-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"general-logs"
							]
						},
						"description": "Get General Logs"
					},
					"response": [
						{
							"name": "Get General Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/general-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"general-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/general-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"general-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/general-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"general-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/general-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"general-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Heartbeat Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/heartbeat-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"heartbeat-logs"
							]
						},
						"description": "Get Heartbeat Logs"
					},
					"response": [
						{
							"name": "Get Heartbeat Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/heartbeat-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"heartbeat-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/heartbeat-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"heartbeat-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/heartbeat-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"heartbeat-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/heartbeat-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"heartbeat-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Quartz Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/quartz-jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"quartz-jobs"
							]
						},
						"description": "Get Quartz Jobs"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/quartz-jobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"quartz-jobs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/quartz-jobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"quartz-jobs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/quartz-jobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"quartz-jobs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Enumerable of Quartz Jobs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/quartz-jobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"quartz-jobs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"jobName\": \"<string>\",\n  \"nextFireTicks\": \"<long>\",\n  \"nextFireTime\": \"<dateTime>\",\n  \"previousFireTicks\": \"<long>\",\n  \"previousFireTime\": \"<dateTime>\",\n  \"triggerState\": \"<string>\"\n },\n {\n  \"jobName\": \"<string>\",\n  \"nextFireTicks\": \"<long>\",\n  \"nextFireTime\": \"<dateTime>\",\n  \"previousFireTicks\": \"<long>\",\n  \"previousFireTime\": \"<dateTime>\",\n  \"triggerState\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get RPC Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/rpc-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"rpc-logs"
							]
						},
						"description": "Get RPC Logs"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/rpc-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"rpc-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/rpc-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"rpc-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Get RPC Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/rpc-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"rpc-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/rpc-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"rpc-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get System Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/system-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"system-logs"
							]
						},
						"description": "Get System Logs"
					},
					"response": [
						{
							"name": "Get System Logs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/system-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"system-logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/system-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"system-logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/system-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"system-logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/system-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"system-logs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Test Event Log",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostics/test-event-log",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostics",
								"test-event-log"
							]
						},
						"description": "Test Event Log"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/test-event-log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"test-event-log"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Test Event Log Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/test-event-log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"test-event-log"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/test-event-log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"test-event-log"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostics/test-event-log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostics",
										"test-event-log"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View diagnostics information"
		},
		{
			"name": "DualControls",
			"item": [
				{
					"name": "Search Dual Controls",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dual-controls?filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive items"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page dual controls"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls?filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Dual control search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls?filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"dualControlTypeId\": \"UserAuditReport\",\n   \"dualControlTypeName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"dualControlTypeId\": \"Report\",\n   \"dualControlTypeName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls?filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls?filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create Dual Control",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/dual-controls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls"
							]
						},
						"description": "Create a new dual control"
					},
					"response": [
						{
							"name": "Dual control object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"dualControlApprovalGroups\": [\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  },\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  }\n ],\n \"dualControlTypeId\": \"<integer>\",\n \"dualControlTypeName\": \"<string>\",\n \"id\": \"<integer>\",\n \"itemId\": \"<integer>\",\n \"itemName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Dual Control",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dual-controls/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Dual control ID"
								}
							]
						},
						"description": "Get a single dual control by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Dual control object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"dualControlApprovalGroups\": [\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  },\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  }\n ],\n \"dualControlTypeId\": \"<integer>\",\n \"dualControlTypeName\": \"<string>\",\n \"id\": \"<integer>\",\n \"itemId\": \"<integer>\",\n \"itemName\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Dual Control",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/dual-controls/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Dual control ID"
								}
							]
						},
						"description": "Update a single dual control by ID"
					},
					"response": [
						{
							"name": "Dual control object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"dualControlApprovalGroups\": [\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  },\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  }\n ],\n \"dualControlTypeId\": \"<integer>\",\n \"dualControlTypeName\": \"<string>\",\n \"id\": \"<integer>\",\n \"itemId\": \"<integer>\",\n \"itemName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"dualControlApprovalGroups\": [\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        },\n        {\n            \"dualControlId\": \"<integer>\",\n            \"enabled\": \"<boolean>\",\n            \"groupId\": \"<integer>\",\n            \"groupName\": \"<string>\",\n            \"id\": \"<integer>\"\n        }\n    ],\n    \"dualControlTypeId\": \"<integer>\",\n    \"itemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Dual Control",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dual-controls/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Dual control ID"
								}
							]
						},
						"description": "Delete a dual control by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get Dual Control Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dual-controls/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dual-controls",
								"stub"
							]
						},
						"description": "Return the default values for a new dual control"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Dual control object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dual-controls/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dual-controls",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"dualControlApprovalGroups\": [\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  },\n  {\n   \"dualControlId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\"\n  }\n ],\n \"dualControlTypeId\": \"<integer>\",\n \"dualControlTypeName\": \"<string>\",\n \"id\": \"<integer>\",\n \"itemId\": \"<integer>\",\n \"itemName\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain dual controls"
		},
		{
			"name": "EventPipeline",
			"item": [
				{
					"name": "Create a new Event Pipeline",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    },\n    \"eventPipelinePolicyId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline"
							]
						},
						"description": "Creates a new Event Pipeline with the provided object."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    },\n    \"eventPipelinePolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    },\n    \"eventPipelinePolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    },\n    \"eventPipelinePolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "The new Event Pipeline",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    },\n    \"eventPipelinePolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventPipelineDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelineId\": \"<integer>\",\n \"eventPipelineName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": \"<integer>\",\n \"eventPipelinePolicyMapId\": \"<integer>\",\n \"filterList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"taskList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"triggers\": [\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  },\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get an Event Pipeline",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline ID"
								}
							]
						},
						"description": "Returns the Event Pipeline for the provided ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "The Event Pipeline View",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventPipelineDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelineId\": \"<integer>\",\n \"eventPipelineName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": \"<integer>\",\n \"eventPipelinePolicyMapId\": \"<integer>\",\n \"filterList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"taskList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"triggers\": [\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  },\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update an Event Pipeline",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline ID"
								}
							]
						},
						"description": "Update an existing Event Pipeline using the existing Event Pipeline's ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "The updated Event Pipeline",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventPipelineDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelineId\": \"<integer>\",\n \"eventPipelineName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": \"<integer>\",\n \"eventPipelinePolicyMapId\": \"<integer>\",\n \"filterList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineFilterId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineFilterName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineFilterMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineFilterSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"taskList\": [\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineTaskId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskMapId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTaskName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isMultiSelect\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"settings\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": [\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     },\n     {\n      \"eventPipelineTaskMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"eventPipelineTaskSettingValueMapId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"overrideDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      },\n      \"setting\": {\n       \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hasHistory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"helpLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hidden\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"hideOnView\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"isRequired\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"placeholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnly\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"readOnlyReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"settingDisplay\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"settingDisplayValue\": \"<string>\",\n      \"settingId\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<integer>\"\n      },\n      \"settingValue\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<string>\"\n      },\n      \"usingDefault\": {\n       \"description\": \"<string>\",\n       \"hasHistory\": \"<boolean>\",\n       \"helpLink\": \"<string>\",\n       \"hidden\": \"<boolean>\",\n       \"hideOnView\": \"<boolean>\",\n       \"isRequired\": \"<boolean>\",\n       \"label\": \"<string>\",\n       \"name\": \"<string>\",\n       \"placeholder\": \"<string>\",\n       \"readOnly\": \"<boolean>\",\n       \"readOnlyReason\": \"<string>\",\n       \"value\": \"<boolean>\"\n      }\n     }\n    ]\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"triggers\": [\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  },\n  {\n   \"entityTypeDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventActionId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelineTriggerId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"triggerDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelineDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelineName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"filters\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"tasks\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"triggers\": {\n            \"dirty\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an Event Pipeline active value",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activate\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/:id/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								":id",
								"activate"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Id"
								}
							]
						},
						"description": "Sets if an Event Pipeline is active or not"
					},
					"response": [
						{
							"name": "The Active value",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an Event Pipeline",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"eventPipelinePolicyId\": \"<integer>\",\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/:id/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								":id",
								"order"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Id"
								}
							]
						},
						"description": "Update an existing Event Pipeline using the existing Event Pipeline's ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelinePolicyId\": \"<integer>\",\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "The updated Event Pipeline",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelinePolicyId\": \"<integer>\",\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"eventPipelineId\": \"<integer>\",\n  \"eventPipelinePolicyId\": \"<integer>\",\n  \"eventPipelinePolicyMapId\": \"<integer>\",\n  \"sortOrder\": \"<integer>\"\n },\n {\n  \"eventPipelineId\": \"<integer>\",\n  \"eventPipelinePolicyId\": \"<integer>\",\n  \"eventPipelinePolicyMapId\": \"<integer>\",\n  \"sortOrder\": \"<integer>\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelinePolicyId\": \"<integer>\",\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelinePolicyId\": \"<integer>\",\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get a list of Event Pipelines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/list?filter.eventPipelineName=<string>&filter.eventPipelinePolicyId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								"list"
							],
							"query": [
								{
									"key": "filter.eventPipelineName",
									"value": "<string>",
									"description": "EventPipelineName"
								},
								{
									"key": "filter.eventPipelinePolicyId",
									"value": "<integer>",
									"description": "EventPipelinePolicyId"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "IncludeActive"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Returns a list of Event Pipelines that meet the paging/searching criterea"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/list?filter.eventPipelineName=<string>&filter.eventPipelinePolicyId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineName",
											"value": "<string>"
										},
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/list?filter.eventPipelineName=<string>&filter.eventPipelinePolicyId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineName",
											"value": "<string>"
										},
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/list?filter.eventPipelineName=<string>&filter.eventPipelinePolicyId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineName",
											"value": "<string>"
										},
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "The list of Event Pipelines",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/list?filter.eventPipelineName=<string>&filter.eventPipelinePolicyId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineName",
											"value": "<string>"
										},
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"createdDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"eventPipelineDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelineName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelinePolicyId\": \"<integer>\",\n   \"eventPipelinePolicyMapId\": \"<integer>\",\n   \"filterList\": [\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    },\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    }\n   ],\n   \"lastModifiedDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"lastModifiedDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"taskList\": [\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"isMultiSelect\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    },\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"isMultiSelect\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    }\n   ],\n   \"triggers\": [\n    {\n     \"entityTypeDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventActionId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTriggerId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"triggerDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    },\n    {\n     \"entityTypeDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventActionId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTriggerId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"triggerDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    }\n   ]\n  },\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"createdDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"eventPipelineDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelineName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelinePolicyId\": \"<integer>\",\n   \"eventPipelinePolicyMapId\": \"<integer>\",\n   \"filterList\": [\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    },\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineFilterId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineFilterMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineFilterSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    }\n   ],\n   \"lastModifiedDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"lastModifiedDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"taskList\": [\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"isMultiSelect\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    },\n    {\n     \"eventEntityTypeId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskDescription\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventPipelineTaskId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"isMultiSelect\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"settings\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": [\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       },\n       {\n        \"eventPipelineTaskMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"eventPipelineTaskSettingValueMapId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"overrideDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        },\n        \"setting\": {\n         \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hasHistory\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"helpLink\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hidden\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"hideOnView\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"isRequired\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"label\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"placeholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnly\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"readOnlyReason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        \"settingDisplay\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"settingDisplayValue\": \"<string>\",\n        \"settingId\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<integer>\"\n        },\n        \"settingValue\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<string>\"\n        },\n        \"usingDefault\": {\n         \"description\": \"<string>\",\n         \"hasHistory\": \"<boolean>\",\n         \"helpLink\": \"<string>\",\n         \"hidden\": \"<boolean>\",\n         \"hideOnView\": \"<boolean>\",\n         \"isRequired\": \"<boolean>\",\n         \"label\": \"<string>\",\n         \"name\": \"<string>\",\n         \"placeholder\": \"<string>\",\n         \"readOnly\": \"<boolean>\",\n         \"readOnlyReason\": \"<string>\",\n         \"value\": \"<boolean>\"\n        }\n       }\n      ]\n     },\n     \"sortOrder\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     }\n    }\n   ],\n   \"triggers\": [\n    {\n     \"entityTypeDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventActionId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTriggerId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"triggerDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    },\n    {\n     \"entityTypeDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"eventActionId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTriggerId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"triggerDisplayName\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    }\n   ]\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Service Get Event Pipeline Runs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/runs?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								"runs"
							],
							"query": [
								{
									"key": "filter.eventPipelineId",
									"value": "<integer>",
									"description": "EventPipelineId"
								},
								{
									"key": "filter.eventPipelinePolicyRunId",
									"value": "<uuid>",
									"description": "EventPipelinePolicyRunId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/runs?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"duration\": \"<string>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"eventAction\": \"<string>\",\n   \"eventEntityType\": \"<string>\",\n   \"eventPipelineDescription\": \"<string>\",\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelineName\": \"<string>\",\n   \"eventPipelinePolicyRunId\": \"<uuid>\",\n   \"eventPipelineTaskDescription\": \"<string>\",\n   \"eventPipelineTaskId\": \"<integer>\",\n   \"eventPipelineTaskName\": \"<string>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"queuedDateTime\": \"<dateTime>\",\n   \"runOrder\": \"<integer>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"status\": \"Pending\"\n  },\n  {\n   \"duration\": \"<string>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"eventAction\": \"<string>\",\n   \"eventEntityType\": \"<string>\",\n   \"eventPipelineDescription\": \"<string>\",\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelineName\": \"<string>\",\n   \"eventPipelinePolicyRunId\": \"<uuid>\",\n   \"eventPipelineTaskDescription\": \"<string>\",\n   \"eventPipelineTaskId\": \"<integer>\",\n   \"eventPipelineTaskName\": \"<string>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"queuedDateTime\": \"<dateTime>\",\n   \"runOrder\": \"<integer>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"status\": \"Failed\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/runs?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/runs?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/runs?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Stub an empty Event Pipeline",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								"stub"
							]
						},
						"description": "Returns an empty Event Pipeline to be filled out."
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "An empty Event Pipeline",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"createdDate\": \"<dateTime>\",\n \"eventPipelineDescription\": \"<string>\",\n \"eventPipelineId\": \"<integer>\",\n \"eventPipelineName\": \"<string>\",\n \"eventPipelinePolicyId\": \"<integer>\",\n \"lastModifiedDate\": \"<dateTime>\",\n \"lastModifiedUser\": \"<string>\",\n \"lastModifiedUserId\": \"<integer>\",\n \"sortOrder\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "EventPipelineController"
		},
		{
			"name": "EventPipelineAudit",
			"item": [
				{
					"name": "Event Pipeline Audit Service Get All Pipeline And Policy Audits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-audit?filter.eventPipelinePolicyId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-audit"
							],
							"query": [
								{
									"key": "filter.eventPipelinePolicyId",
									"value": "<integer>",
									"description": "EventPipelinePolicyId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-audit?filter.eventPipelinePolicyId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-audit"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-audit?filter.eventPipelinePolicyId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-audit"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-audit?filter.eventPipelinePolicyId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-audit"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-audit?filter.eventPipelinePolicyId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-audit"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"auditId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"date\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isPolicy\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"name\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"notes\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"userDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  },\n  {\n   \"action\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"auditId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"date\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"isPolicy\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"name\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"notes\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"userDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				}
			],
			"description": "EventPipelineAuditController"
		},
		{
			"name": "EventPipelinePolicy",
			"item": [
				{
					"name": "Event Pipeline Policy Service Create Event Pipeline Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"externalInstanceId\": \"<uuid>\",\n        \"pipelines\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"reuseExistingPipelines\": \"<boolean>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"externalInstanceId\": \"<uuid>\",\n        \"pipelines\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"reuseExistingPipelines\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"externalInstanceId\": \"<uuid>\",\n        \"pipelines\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"reuseExistingPipelines\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"externalInstanceId\": \"<uuid>\",\n        \"pipelines\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"reuseExistingPipelines\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"externalInstanceId\": \"<uuid>\",\n        \"pipelines\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"active\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<boolean>\"\n                    },\n                    \"eventPipelineDescription\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"eventPipelineName\": {\n                        \"dirty\": \"<boolean>\",\n                        \"value\": \"<string>\"\n                    },\n                    \"filters\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"tasks\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"triggers\": {\n                        \"dirty\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"reuseExistingPipelines\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Event Pipeline Policy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Update Event Pipeline Policy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventPipelinePolicyDescription\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventPipelinePolicyName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Add Pipeline To Event Pipeline Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"eventPipelineId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelineId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelineId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"eventPipelineId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyMapId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelineId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"eventPipelineId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Activate Event Pipeline Policy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activate\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"activate"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"activate\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Folders For Pipeline Policies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"folders"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"restricted\": \"<boolean>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"path\": \"<string>\",\n  \"restricted\": \"<boolean>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Update Event Pipeline Policy Folder Maps",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"folders"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Child Folder Data For Pipeline Policy Folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/:folderId/childdata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"folders",
								":folderId",
								"childdata"
							],
							"variable": [
								{
									"key": "folderId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								},
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/:folderId/childdata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										":folderId",
										"childdata"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "folderId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/:folderId/childdata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										":folderId",
										"childdata"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "folderId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/:folderId/childdata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										":folderId",
										"childdata"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "folderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/:folderId/childdata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										":folderId",
										"childdata"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "folderId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Folder Count For Pipeline Policy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"folders",
								"count"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										"count"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										"count"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										"count"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/folders/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"folders",
										"count"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Update Event Pipeline Policy Sort Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newSortOrder\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"order"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newSortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newSortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newSortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newSortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"order"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Secret Policies For Pipeline Policies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:id/secretpolicies?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyName=<string>&filter.includeActive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":id",
								"secretpolicies"
							],
							"query": [
								{
									"key": "filter.eventPipelinePolicyId",
									"value": "<integer>",
									"description": "EventPipelinePolicyId"
								},
								{
									"key": "filter.eventPipelinePolicyName",
									"value": "<string>",
									"description": "EventPipelinePolicyName"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "IncludeActive"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/secretpolicies?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyName=<string>&filter.includeActive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"secretpolicies"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/secretpolicies?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyName=<string>&filter.includeActive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"secretpolicies"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/secretpolicies?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyName=<string>&filter.includeActive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"secretpolicies"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"secretPolicyDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"secretPolicyId\": \"<integer>\",\n   \"secretPolicyName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  },\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"secretPolicyDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"secretPolicyId\": \"<integer>\",\n   \"secretPolicyName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:id/secretpolicies?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyName=<string>&filter.includeActive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":id",
										"secretpolicies"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Remove Event Pipeline From Policy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/:policyId/pipeline/:pipelineId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								":policyId",
								"pipeline",
								":pipelineId"
							],
							"variable": [
								{
									"key": "pipelineId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline ID"
								},
								{
									"key": "policyId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:policyId/pipeline/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":policyId",
										"pipeline",
										":pipelineId"
									],
									"variable": [
										{
											"key": "policyId"
										},
										{
											"key": "pipelineId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:policyId/pipeline/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":policyId",
										"pipeline",
										":pipelineId"
									],
									"variable": [
										{
											"key": "policyId"
										},
										{
											"key": "pipelineId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:policyId/pipeline/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":policyId",
										"pipeline",
										":pipelineId"
									],
									"variable": [
										{
											"key": "policyId"
										},
										{
											"key": "pipelineId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/:policyId/pipeline/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										":policyId",
										"pipeline",
										":pipelineId"
									],
									"variable": [
										{
											"key": "policyId"
										},
										{
											"key": "pipelineId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Event Pipeline Policy Run Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"activity"
							],
							"variable": [
								{
									"key": "eventPipelineId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) eventPipelineId"
								},
								{
									"key": "eventPipelinePolicyRunId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy Run ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/activity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"activity"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/activity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"activity"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/activity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"activity"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"duration\": \"<string>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"eventAction\": \"<string>\",\n  \"eventEntityType\": \"<string>\",\n  \"eventPipelineDescription\": \"<string>\",\n  \"eventPipelineId\": \"<integer>\",\n  \"eventPipelineName\": \"<string>\",\n  \"eventPipelinePolicyRunId\": \"<uuid>\",\n  \"eventPipelineTaskDescription\": \"<string>\",\n  \"eventPipelineTaskId\": \"<integer>\",\n  \"eventPipelineTaskName\": \"<string>\",\n  \"itemId\": \"<integer>\",\n  \"itemName\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"queuedDateTime\": \"<dateTime>\",\n  \"runOrder\": \"<integer>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"status\": \"Scheduled\"\n },\n {\n  \"duration\": \"<string>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"eventAction\": \"<string>\",\n  \"eventEntityType\": \"<string>\",\n  \"eventPipelineDescription\": \"<string>\",\n  \"eventPipelineId\": \"<integer>\",\n  \"eventPipelineName\": \"<string>\",\n  \"eventPipelinePolicyRunId\": \"<uuid>\",\n  \"eventPipelineTaskDescription\": \"<string>\",\n  \"eventPipelineTaskId\": \"<integer>\",\n  \"eventPipelineTaskName\": \"<string>\",\n  \"itemId\": \"<integer>\",\n  \"itemName\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"queuedDateTime\": \"<dateTime>\",\n  \"runOrder\": \"<integer>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"status\": \"Success\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/activity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"activity"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Duplicate Event Pipeline Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/duplicate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"duplicate"
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/duplicate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"duplicate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/duplicate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"duplicate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/duplicate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"duplicate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/duplicate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"duplicate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Export Event Pipeline Policy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/export/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"export",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/export/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"export",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/export/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"export",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/export/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"export",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/export/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"export",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Import Event Pipeline Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"import"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"import"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"import"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"import"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"import"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"createdDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"eventEntityTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyDescription\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventPipelinePolicyId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventPipelinePolicyName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"lastModifiedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastModifiedDisplayName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n }\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Event Pipeline Policies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/list?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyName=<string>&filter.folderId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"list"
							],
							"query": [
								{
									"key": "filter.eventPipelineId",
									"value": "<integer>",
									"description": "EventPipelineId"
								},
								{
									"key": "filter.eventPipelinePolicyName",
									"value": "<string>",
									"description": "EventPipelinePolicyName"
								},
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "FolderId"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "IncludeActive"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/list?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyName=<string>&filter.folderId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/list?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyName=<string>&filter.folderId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/list?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyName=<string>&filter.folderId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"createdDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelinePolicyDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelinePolicyId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelinePolicyName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"lastModifiedDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"lastModifiedDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  },\n  {\n   \"active\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"createdDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"eventEntityTypeId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelinePolicyDescription\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"eventPipelinePolicyId\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"eventPipelinePolicyName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"lastModifiedDate\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"lastModifiedDisplayName\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"sortOrder\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/list?filter.eventPipelineId=<integer>&filter.eventPipelinePolicyName=<string>&filter.folderId=<integer>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"list"
									],
									"query": [
										{
											"key": "filter.eventPipelineId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyName",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Policy Service Get Event Pipeline Policy Runs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-policy/runs?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-policy",
								"runs"
							],
							"query": [
								{
									"key": "filter.eventPipelinePolicyId",
									"value": "<integer>",
									"description": "EventPipelinePolicyId"
								},
								{
									"key": "filter.eventPipelinePolicyRunId",
									"value": "<uuid>",
									"description": "EventPipelinePolicyRunId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/runs?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/runs?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"description\": \"<string>\",\n   \"duration\": \"<string>\",\n   \"endDate\": \"<dateTime>\",\n   \"entityTypeName\": \"<string>\",\n   \"eventDateTime\": \"<dateTime>\",\n   \"eventDetails\": \"<string>\",\n   \"eventName\": \"<string>\",\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelinePolicyRunId\": \"<uuid>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\",\n   \"name\": \"<string>\",\n   \"queuedDate\": \"<dateTime>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"Success\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"duration\": \"<string>\",\n   \"endDate\": \"<dateTime>\",\n   \"entityTypeName\": \"<string>\",\n   \"eventDateTime\": \"<dateTime>\",\n   \"eventDetails\": \"<string>\",\n   \"eventName\": \"<string>\",\n   \"eventPipelineId\": \"<integer>\",\n   \"eventPipelinePolicyRunId\": \"<uuid>\",\n   \"itemId\": \"<integer>\",\n   \"itemName\": \"<string>\",\n   \"name\": \"<string>\",\n   \"queuedDate\": \"<dateTime>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"Scheduled\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/runs?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-policy/runs?filter.eventPipelinePolicyId=<integer>&filter.eventPipelinePolicyRunId=<uuid>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-policy",
										"runs"
									],
									"query": [
										{
											"key": "filter.eventPipelinePolicyId",
											"value": "<integer>"
										},
										{
											"key": "filter.eventPipelinePolicyRunId",
											"value": "<uuid>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "EventPipelinePolicyController"
		},
		{
			"name": "EventPipelineSettings",
			"item": [
				{
					"name": "Event Pipeline Settings Service Get Pipeline Filter Options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-settings/filter/options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-settings",
								"filter",
								"options"
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter",
										"options"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter",
										"options"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"eventEntityTypeId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterDescription\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineFilterDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineFilterId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settings\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": [\n    {\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    },\n    {\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    }\n   ]\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  }\n },\n {\n  \"eventEntityTypeId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterDescription\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineFilterDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineFilterId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settings\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": [\n    {\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    },\n    {\n     \"eventPipelineFilterMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineFilterSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    }\n   ]\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  }\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter",
										"options"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter",
										"options"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Settings Service Get Event Pipeline Task View Models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-settings/filter-settings/list/:id?id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-settings",
								"filter-settings",
								"list",
								":id"
							],
							"query": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "Event Pipeline Filter ID"
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter-settings/list/:id?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter-settings",
										"list",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter-settings/list/:id?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter-settings",
										"list",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter-settings/list/:id?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter-settings",
										"list",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"eventPipelineFilterId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterSettingMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"setting\": {\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hasHistory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"helpLink\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hidden\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hideOnView\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"isRequired\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"label\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"placeholder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnly\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnlyReason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"settingDisplay\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settingDisplayValue\": \"<string>\",\n  \"settingId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"settingValue\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"usingDefault\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  }\n },\n {\n  \"eventPipelineFilterId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineFilterSettingMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"setting\": {\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hasHistory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"helpLink\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hidden\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hideOnView\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"isRequired\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"label\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"placeholder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnly\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnlyReason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"settingDisplay\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settingDisplayValue\": \"<string>\",\n  \"settingId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"settingValue\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"usingDefault\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  }\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/filter-settings/list/:id?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"filter-settings",
										"list",
										":id"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Settings Service Get Event Pipeline Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-settings/task/list?filter.eventActionId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-settings",
								"task",
								"list"
							],
							"query": [
								{
									"key": "filter.eventActionId",
									"value": "<integer>",
									"description": "EventActionId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task/list?filter.eventActionId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task",
										"list"
									],
									"query": [
										{
											"key": "filter.eventActionId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"eventEntityTypeId\": \"<integer>\",\n   \"eventPipelineTaskDescription\": \"<string>\",\n   \"eventPipelineTaskId\": \"<integer>\",\n   \"eventPipelineTaskName\": \"<string>\",\n   \"isMultiSelect\": \"<boolean>\"\n  },\n  {\n   \"eventEntityTypeId\": \"<integer>\",\n   \"eventPipelineTaskDescription\": \"<string>\",\n   \"eventPipelineTaskId\": \"<integer>\",\n   \"eventPipelineTaskName\": \"<string>\",\n   \"isMultiSelect\": \"<boolean>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task/list?filter.eventActionId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task",
										"list"
									],
									"query": [
										{
											"key": "filter.eventActionId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task/list?filter.eventActionId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task",
										"list"
									],
									"query": [
										{
											"key": "filter.eventActionId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task/list?filter.eventActionId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task",
										"list"
									],
									"query": [
										{
											"key": "filter.eventActionId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Settings Service Get Pipeline Task Options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-settings/tasks/options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-settings",
								"tasks",
								"options"
							]
						}
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/tasks/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"tasks",
										"options"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/tasks/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"tasks",
										"options"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/tasks/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"tasks",
										"options"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"eventEntityTypeId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskDescription\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineTaskDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineTaskId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"isMultiSelect\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  },\n  \"settings\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": [\n    {\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    },\n    {\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    }\n   ]\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  }\n },\n {\n  \"eventEntityTypeId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskDescription\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineTaskDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventPipelineTaskId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"isMultiSelect\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  },\n  \"settings\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": [\n    {\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    },\n    {\n     \"eventPipelineTaskMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"eventPipelineTaskSettingValueMapId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"overrideDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     },\n     \"setting\": {\n      \"description\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasHistory\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"helpLink\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hidden\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOnView\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRequired\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"placeholder\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnly\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"readOnlyReason\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"settingDisplay\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"settingDisplayValue\": \"<string>\",\n     \"settingId\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<integer>\"\n     },\n     \"settingValue\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     \"usingDefault\": {\n      \"description\": \"<string>\",\n      \"hasHistory\": \"<boolean>\",\n      \"helpLink\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"hideOnView\": \"<boolean>\",\n      \"isRequired\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"name\": \"<string>\",\n      \"placeholder\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"readOnlyReason\": \"<string>\",\n      \"value\": \"<boolean>\"\n     }\n    }\n   ]\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  }\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/tasks/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"tasks",
										"options"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Event Pipeline Settings Service Get Event Pipeline Task Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline-settings/task-settings/list/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline-settings",
								"task-settings",
								"list",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task-settings/list/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task-settings",
										"list",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task-settings/list/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task-settings",
										"list",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"eventPipelineTaskId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskSettingMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"setting\": {\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hasHistory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"helpLink\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hidden\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hideOnView\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"isRequired\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"label\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"placeholder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnly\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnlyReason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"settingDisplay\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settingDisplayValue\": \"<string>\",\n  \"settingId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"settingValue\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"usingDefault\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  }\n },\n {\n  \"eventPipelineTaskId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTaskSettingMapId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"setting\": {\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hasHistory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"helpLink\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hidden\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"hideOnView\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"isRequired\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"label\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"placeholder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnly\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"readOnlyReason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"settingDisplay\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"settingDisplayValue\": \"<string>\",\n  \"settingId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"settingValue\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"sortOrder\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"usingDefault\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<boolean>\"\n  }\n }\n]"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task-settings/list/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task-settings",
										"list",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline-settings/task-settings/list/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline-settings",
										"task-settings",
										"list",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "EventPipelineSettingsController"
		},
		{
			"name": "EventPipelineTrigger",
			"item": [
				{
					"name": "Get the triggers for an Event Pipeline",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/:id/trigger",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								":id",
								"trigger"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Event Pipeline ID"
								}
							]
						},
						"description": "Returns the triggers for the Event Pipeline that has the provided ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"trigger"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"trigger"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"trigger"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "The list of Event Pipeline Triggers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/:id/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										":id",
										"trigger"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"entityTypeDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventActionId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTriggerId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"triggerDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n },\n {\n  \"entityTypeDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventActionId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTriggerId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"triggerDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Event Pipeline Trigger Service Get Event Pipeline Trigger Options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/trigger/options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								"trigger",
								"options"
							]
						}
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"options"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"options"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"options"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"entityTypeDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventActionId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTriggerId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"triggerDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n },\n {\n  \"entityTypeDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  \"eventActionId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"eventPipelineTriggerId\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<integer>\"\n  },\n  \"triggerDisplayName\": {\n   \"description\": \"<string>\",\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"options"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Stub an Event Pipeline Trigger",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event-pipeline/trigger/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-pipeline",
								"trigger",
								"stub"
							]
						},
						"description": "Creates an empty Event Pipeline Trigger to be populated"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "The empty Event Pipeline Trigger",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event-pipeline/trigger/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-pipeline",
										"trigger",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"entityTypeDisplayName\": \"<string>\",\n \"eventActionId\": \"<integer>\",\n \"eventEntityTypeId\": \"<integer>\",\n \"eventPipelineId\": \"<integer>\",\n \"eventPipelineTriggerId\": \"<integer>\",\n \"triggerDisplayName\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "EventPipelineTriggerController"
		},
		{
			"name": "ExtendedFields",
			"item": [
				{
					"name": "Get Extended Regex values by Secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/extended-fields/regex/:secretId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extended-fields",
								"regex",
								":secretId"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Retrieve Extended Regex values for a Secret"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extended-fields/regex/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extended-fields",
										"regex",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extended-fields/regex/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extended-fields",
										"regex",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extended-fields/regex/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extended-fields",
										"regex",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Regex Values Summary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extended-fields/regex/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extended-fields",
										"regex",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"regexList\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				}
			],
			"description": "Extended Fields provider"
		},
		{
			"name": "FolderPermissions",
			"item": [
				{
					"name": "Search Folder Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder-permissions?filter.folderId=<integer>&filter.groupId=<integer>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions"
							],
							"query": [
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "Limit results to a certain folder"
								},
								{
									"key": "filter.groupId",
									"value": "<integer>",
									"description": "Limit results to a certain group"
								},
								{
									"key": "filter.userId",
									"value": "<integer>",
									"description": "Limit results to a certain user"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page folder permissions"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions?filter.folderId=<integer>&filter.groupId=<integer>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									],
									"query": [
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Folder permission search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions?filter.folderId=<integer>&filter.groupId=<integer>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									],
									"query": [
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"folderAccessRoleId\": \"<integer>\",\n   \"folderAccessRoleName\": \"<string>\",\n   \"folderId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"knownAs\": \"<string>\",\n   \"secretAccessRoleId\": \"<integer>\",\n   \"secretAccessRoleName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"folderAccessRoleId\": \"<integer>\",\n   \"folderAccessRoleName\": \"<string>\",\n   \"folderId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"knownAs\": \"<string>\",\n   \"secretAccessRoleId\": \"<integer>\",\n   \"secretAccessRoleName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions?filter.folderId=<integer>&filter.groupId=<integer>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									],
									"query": [
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions?filter.folderId=<integer>&filter.groupId=<integer>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									],
									"query": [
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Folder Permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"breakInheritance\": true,\n    \"folderAccessRoleName\": \"<string>\",\n    \"folderId\": \"<integer>\",\n    \"groupId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folder-permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions"
							]
						},
						"description": "Create a new folder permission"
					},
					"response": [
						{
							"name": "Folder permission object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"breakInheritance\": true,\n    \"folderAccessRoleName\": \"<string>\",\n    \"folderId\": \"<integer>\",\n    \"groupId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"folderAccessRoleId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"secretAccessRoleId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"breakInheritance\": true,\n    \"folderAccessRoleName\": \"<string>\",\n    \"folderId\": \"<integer>\",\n    \"groupId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"breakInheritance\": true,\n    \"folderAccessRoleName\": \"<string>\",\n    \"folderId\": \"<integer>\",\n    \"groupId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"breakInheritance\": true,\n    \"folderAccessRoleName\": \"<string>\",\n    \"folderId\": \"<integer>\",\n    \"groupId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Folder Permission",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder-permissions/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive folder permissions in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder permission ID"
								}
							]
						},
						"description": "Get a single folder permission by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Folder permission object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"folderAccessRoleId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"secretAccessRoleId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update Folder Permission",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"folderId\": \"<integer>\",\n    \"folderAccessRoleName\": \"<string>\",\n    \"breakInheritance\": true,\n    \"secretAccessRoleName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folder-permissions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder permission ID"
								}
							]
						},
						"description": "Update a single folder permission by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderId\": \"<integer>\",\n    \"folderAccessRoleName\": \"<string>\",\n    \"breakInheritance\": true,\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderId\": \"<integer>\",\n    \"folderAccessRoleName\": \"<string>\",\n    \"breakInheritance\": true,\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderId\": \"<integer>\",\n    \"folderAccessRoleName\": \"<string>\",\n    \"breakInheritance\": true,\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Folder permission object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderId\": \"<integer>\",\n    \"folderAccessRoleName\": \"<string>\",\n    \"breakInheritance\": true,\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"folderAccessRoleId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"secretAccessRoleId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Delete Folder Permission",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder-permissions/:id?breakInheritance=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions",
								":id"
							],
							"query": [
								{
									"key": "breakInheritance",
									"value": "<boolean>",
									"description": "Include to remove permission inheritance"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder permission ID"
								}
							]
						},
						"description": "Delete a folder permission by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?breakInheritance=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "breakInheritance",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?breakInheritance=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "breakInheritance",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?breakInheritance=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "breakInheritance",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/:id?breakInheritance=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										":id"
									],
									"query": [
										{
											"key": "breakInheritance",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Folder Permission Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder-permissions/stub?folderId=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder-permissions",
								"stub"
							],
							"query": [
								{
									"key": "folderId",
									"value": "<integer>",
									"description": "(Required) Folder for which to generate a permission stub"
								}
							]
						},
						"description": "Return the default values for a new folder permission"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/stub?folderId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/stub?folderId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/stub?folderId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Folder permission bject",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder-permissions/stub?folderId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder-permissions",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"folderAccessRoleId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"secretAccessRoleId\": \"<integer>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain secret folder permissions"
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "Patch a Folder",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"allowedTemplates\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"allowRemoveOwner\": \"<boolean>\",\n        \"enableInheritPermissions\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folderName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"permissons\": [\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            },\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folder/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Patch a single secret folder by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"allowedTemplates\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"allowRemoveOwner\": \"<boolean>\",\n        \"enableInheritPermissions\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folderName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"permissons\": [\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            },\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"allowedTemplates\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"allowRemoveOwner\": \"<boolean>\",\n        \"enableInheritPermissions\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folderName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"permissons\": [\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            },\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"childFolders\": [\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  }\n ],\n \"folderName\": \"<string>\",\n \"folderPath\": \"<string>\",\n \"folderTypeId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"inheritPermissions\": \"<boolean>\",\n \"inheritSecretPolicy\": \"<boolean>\",\n \"parentFolderId\": \"<integer>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplates\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"allowedTemplates\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"allowRemoveOwner\": \"<boolean>\",\n        \"enableInheritPermissions\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folderName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"permissons\": [\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            },\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"allowedTemplates\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"allowRemoveOwner\": \"<boolean>\",\n        \"enableInheritPermissions\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folderName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"permissons\": [\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            },\n            {\n                \"folderAccessRoleId\": \"<integer>\",\n                \"groupId\": \"<integer>\",\n                \"secretAccessRoleId\": \"<integer>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folder/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Search Folders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders"
							],
							"query": [
								{
									"key": "filter.folderTypeId",
									"value": "<integer>",
									"description": "FolderTypeId"
								},
								{
									"key": "filter.parentFolderId",
									"value": "<integer>",
									"description": "ParentFolderId"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secret folders"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Folder search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\"\n  },\n  {\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folderName\": \"<string>\",\n    \"folderTypeId\": \"<integer>\",\n    \"parentFolderId\": \"<integer>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders"
							]
						},
						"description": "Create a new secret folder"
					},
					"response": [
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderName\": \"<string>\",\n    \"folderTypeId\": \"<integer>\",\n    \"parentFolderId\": \"<integer>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"childFolders\": [\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  }\n ],\n \"folderName\": \"<string>\",\n \"folderPath\": \"<string>\",\n \"folderTypeId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"inheritPermissions\": \"<boolean>\",\n \"inheritSecretPolicy\": \"<boolean>\",\n \"parentFolderId\": \"<integer>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplates\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderName\": \"<string>\",\n    \"folderTypeId\": \"<integer>\",\n    \"parentFolderId\": \"<integer>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderName\": \"<string>\",\n    \"folderTypeId\": \"<integer>\",\n    \"parentFolderId\": \"<integer>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderName\": \"<string>\",\n    \"folderTypeId\": \"<integer>\",\n    \"parentFolderId\": \"<integer>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders/:id?getAllChildren=<boolean>&includeAssociatedTemplates=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":id"
							],
							"query": [
								{
									"key": "getAllChildren",
									"value": "<boolean>",
									"description": "Whether to retrieve all child folders of the requested folder"
								},
								{
									"key": "includeAssociatedTemplates",
									"value": "<boolean>",
									"description": "Whether to list associated secret templates"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Get a single folder by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id?getAllChildren=<boolean>&includeAssociatedTemplates=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"query": [
										{
											"key": "getAllChildren",
											"value": "<boolean>"
										},
										{
											"key": "includeAssociatedTemplates",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id?getAllChildren=<boolean>&includeAssociatedTemplates=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"query": [
										{
											"key": "getAllChildren",
											"value": "<boolean>"
										},
										{
											"key": "includeAssociatedTemplates",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id?getAllChildren=<boolean>&includeAssociatedTemplates=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"query": [
										{
											"key": "getAllChildren",
											"value": "<boolean>"
										},
										{
											"key": "includeAssociatedTemplates",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"childFolders\": [\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  }\n ],\n \"folderName\": \"<string>\",\n \"folderPath\": \"<string>\",\n \"folderTypeId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"inheritPermissions\": \"<boolean>\",\n \"inheritSecretPolicy\": \"<boolean>\",\n \"parentFolderId\": \"<integer>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplates\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id?getAllChildren=<boolean>&includeAssociatedTemplates=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"query": [
										{
											"key": "getAllChildren",
											"value": "<boolean>"
										},
										{
											"key": "includeAssociatedTemplates",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Folder",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"folderTypeId\": \"<integer>\",\n    \"folderName\": \"<string>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"parentFolderId\": \"<integer>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Update a single secret folder by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderTypeId\": \"<integer>\",\n    \"folderName\": \"<string>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"parentFolderId\": \"<integer>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderTypeId\": \"<integer>\",\n    \"folderName\": \"<string>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"parentFolderId\": \"<integer>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"childFolders\": [\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  }\n ],\n \"folderName\": \"<string>\",\n \"folderPath\": \"<string>\",\n \"folderTypeId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"inheritPermissions\": \"<boolean>\",\n \"inheritSecretPolicy\": \"<boolean>\",\n \"parentFolderId\": \"<integer>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplates\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderTypeId\": \"<integer>\",\n    \"folderName\": \"<string>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"parentFolderId\": \"<integer>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"folderTypeId\": \"<integer>\",\n    \"folderName\": \"<string>\",\n    \"inheritPermissions\": \"<boolean>\",\n    \"inheritSecretPolicy\": \"<boolean>\",\n    \"parentFolderId\": \"<integer>\",\n    \"secretPolicyId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Folder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Delete a folder by ID"
					},
					"response": [
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Associate Template to Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folderId\": \"<integer>\",\n    \"templateId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/folders/:id/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":id",
								"templates"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								}
							]
						},
						"description": "Allow secrets based on the template to be created in the folder. If the folder has no associated templates, then any template can be used."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderId\": \"<integer>\",\n    \"templateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderId\": \"<integer>\",\n    \"templateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderId\": \"<integer>\",\n    \"templateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"associated\": \"<boolean>\",\n \"folderId\": \"<integer>\",\n \"templateId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folderId\": \"<integer>\",\n    \"templateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Disassociate Template from Folder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders/:id/templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								":id",
								"templates",
								":templateId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Folder ID"
								},
								{
									"key": "templateId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Template ID"
								}
							]
						},
						"description": "Remove the ability to create secrets based on the template in this folder. If the folder has no associated templates, then any template can be used."
					},
					"response": [
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/:id/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										":id",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Folders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders/lookup?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								"lookup"
							],
							"query": [
								{
									"key": "filter.folderTypeId",
									"value": "<integer>",
									"description": "FolderTypeId"
								},
								{
									"key": "filter.parentFolderId",
									"value": "<integer>",
									"description": "ParentFolderId"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secret folders, returning only folder ID and name"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/lookup?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"lookup"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/lookup?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"lookup"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Folder search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/lookup?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"lookup"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/lookup?filter.folderTypeId=<integer>&filter.parentFolderId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"lookup"
									],
									"query": [
										{
											"key": "filter.folderTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.parentFolderId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Folder Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folders/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folders",
								"stub"
							]
						},
						"description": "Return the default values for a new secret folder"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Folder object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folders/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folders",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"childFolders\": [\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  },\n  {\n   \"childFolders\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/IFolderModel detected>\"\n    }\n   ],\n   \"folderName\": \"<string>\",\n   \"folderPath\": \"<string>\",\n   \"folderTypeId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"inheritPermissions\": \"<boolean>\",\n   \"inheritSecretPolicy\": \"<boolean>\",\n   \"parentFolderId\": \"<integer>\",\n   \"secretPolicyId\": \"<integer>\",\n   \"secretTemplates\": [\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    },\n    {\n     \"active\": \"<boolean>\",\n     \"id\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"secretCount\": \"<integer>\"\n    }\n   ]\n  }\n ],\n \"folderName\": \"<string>\",\n \"folderPath\": \"<string>\",\n \"folderTypeId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"inheritPermissions\": \"<boolean>\",\n \"inheritSecretPolicy\": \"<boolean>\",\n \"parentFolderId\": \"<integer>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplates\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ]\n}"
						}
					]
				}
			],
			"description": "View and maintain secret folders"
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Search Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							],
							"query": [
								{
									"key": "filter.domainId",
									"value": "<integer>",
									"description": "Active Directory domain ID"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive groups in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page groups"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Group search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"created\": \"<dateTime>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"synchronized\": \"<boolean>\",\n   \"synchronizeNow\": \"<boolean>\"\n  },\n  {\n   \"created\": \"<dateTime>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"synchronized\": \"<boolean>\",\n   \"synchronizeNow\": \"<boolean>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Create a new group"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Group object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"hasGroupOwners\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isEditable\": \"<boolean>\",\n \"name\": \"<string>\",\n \"ownerGroups\": {},\n \"ownerUsers\": {},\n \"synchronized\": \"<boolean>\",\n \"synchronizeNow\": \"<boolean>\",\n \"systemGroup\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive groups in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Get a single group by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Group object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"hasGroupOwners\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isEditable\": \"<boolean>\",\n \"name\": \"<string>\",\n \"ownerGroups\": {},\n \"ownerUsers\": {},\n \"synchronized\": \"<boolean>\",\n \"synchronizeNow\": \"<boolean>\",\n \"systemGroup\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Update a single group by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Group object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"hasGroupOwners\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isEditable\": \"<boolean>\",\n \"name\": \"<string>\",\n \"ownerGroups\": {},\n \"ownerUsers\": {},\n \"synchronized\": \"<boolean>\",\n \"synchronizeNow\": \"<boolean>\",\n \"systemGroup\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"hasGroupOwners\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ownerGroupIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerGroupNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ownerUserIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"ownerUserNames\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"synchronized\": \"<boolean>\",\n    \"synchronizeNow\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Delete a group by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get Users In Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id",
								"users"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Get users in a group"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Group membership results",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"groupDomainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"userDomainId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"groupDomainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"userDomainId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Add User To Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Add a user to a group"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User group membership object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupDomainId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"userDomainId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get User In Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								},
								{
									"key": "userId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Get a user in a group"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User group membership object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupDomainId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"userDomainId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Remove User From Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								},
								{
									"key": "userId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Remove a user from a group"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Lookup Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"lookup"
							],
							"query": [
								{
									"key": "filter.domainId",
									"value": "<integer>",
									"description": "Active Directory domain ID"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive groups in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page groups, returning only group ID and name"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Group search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Group Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"stub"
							]
						},
						"description": "Return the default values for a new group"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Group object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"domainId\": \"<integer>\",\n \"domainName\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"hasGroupOwners\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isEditable\": \"<boolean>\",\n \"name\": \"<string>\",\n \"ownerGroups\": {},\n \"ownerUsers\": {},\n \"synchronized\": \"<boolean>\",\n \"synchronizeNow\": \"<boolean>\",\n \"systemGroup\": \"<boolean>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain user security groups"
		},
		{
			"name": "HealthCheck",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/healthcheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"healthcheck"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/healthcheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"healthcheck"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/healthcheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"healthcheck"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/healthcheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"healthcheck"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"healthy\": \"<boolean>\",\n \"now\": \"<dateTime>\",\n \"utcNow\": \"<dateTime>\"\n}"
						}
					]
				}
			],
			"description": "HealthCheckController"
		},
		{
			"name": "IpAddressRestrictions",
			"item": [
				{
					"name": "Search IP Address restrictions assigned to a group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id",
								"ipaddress-restrictions"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								}
							]
						},
						"description": "Search, filter, sort, and page IP Address restriction assigned to a group"
					},
					"response": [
						{
							"name": "Group and IP Address restriction search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\"\n  },\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search IP Address restrictions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page IP Address restrictions"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "IP Address restriction search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"range\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"range\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create IP Address restriction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions"
							]
						},
						"description": "Create a new IP Address restriction"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "IP Address restriction object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"range\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get IP Address restriction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Get a single IP Address restriction by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "IP Address restriction object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"range\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update IP Address restriction",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction Id"
								}
							]
						},
						"description": "Update a new IP Address restriction"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "IP Address restriction object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"range\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"range\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Delete IP Address restriction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction Id"
								}
							]
						},
						"description": "Delete an IP Address restriction by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Search groups assigned to an IP Address restriction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"groups"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Search, filter, sort, and page groups assigned to an IP Address restriction"
					},
					"response": [
						{
							"name": "Group and IP Address restriction search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\"\n  },\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Group IP Address restriction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groupId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Create a new Group IP Address restriction"
					},
					"response": [
						{
							"name": "Group IP Address restriction object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddressRestrictionId\": \"<integer>\",\n \"ipAddressRestrictionName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Group IP Address restriction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								},
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Get a single Group IP Address restriction by restriction and group ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Group and IP Address restriction object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddressRestrictionId\": \"<integer>\",\n \"ipAddressRestrictionName\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Group IP Address restriction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Group ID"
								},
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction Id"
								}
							]
						},
						"description": "Delete a Group IP Address restriction by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search users assigned to an IP Address restriction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"users"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Search, filter, sort, and page users assigned to an IP Address restriction"
					},
					"response": [
						{
							"name": "User and IP Address restriction search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create User IP Address restriction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								}
							]
						},
						"description": "Create a new User IP Address restriction"
					},
					"response": [
						{
							"name": "User IP Address restriction object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"ipAddressRestrictionId\": \"<integer>\",\n \"ipAddressRestrictionName\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"<integer>\",\n    \"ipAddressRestrictionId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get User IP Address restriction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction ID"
								},
								{
									"key": "userId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Get a single User IP Address restriction by restriction and user ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User and IP Address restriction object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"ipAddressRestrictionId\": \"<integer>\",\n \"ipAddressRestrictionName\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete User IP Address restriction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ipaddress-restrictions",
								":id",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) IP Address restriction Id"
								},
								{
									"key": "userId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Delete a User IP Address restriction by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ipaddress-restrictions/:id/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipaddress-restrictions",
										":id",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Search IP Address restrictions assigned to a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"ipaddress-restrictions"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Search, filter, sort, and page IP Address restriction assigned to a user"
					},
					"response": [
						{
							"name": "User and IP Address restriction search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"ipAddressRestrictionId\": \"<integer>\",\n   \"ipAddressRestrictionName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/ipaddress-restrictions?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"ipaddress-restrictions"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain IP Address restrictions"
		},
		{
			"name": "KeyManagement",
			"item": [
				{
					"name": "Get Key Management Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/key-management",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"key-management"
							]
						},
						"description": "Get the current or previous Key Management configuration"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "KeyManagementConfigModel object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"awsKmsAccessKeyId\": \"<string>\",\n \"awsKmsKeyArn\": \"<string>\",\n \"awsKmsKeyId\": \"<string>\",\n \"awsKmsSecretAccessKey\": \"<string>\",\n \"keyManagementConfigId\": \"<integer>\",\n \"keyManagementTypeId\": \"<integer>\",\n \"keyManagementTypeName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Key Management Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"awsKmsAccessKeyId\": \"<string>\",\n    \"awsKmsKeyArn\": \"<string>\",\n    \"awsKmsKeyId\": \"<string>\",\n    \"awsKmsSecretAccessKey\": \"<string>\",\n    \"azureKeyVaultBaseUrl\": \"<string>\",\n    \"azureKeyVaultKeyName\": \"<string>\",\n    \"azureKeyVaultKeyVersion\": \"<string>\",\n    \"azureKeyVaultPrincipalId\": \"<string>\",\n    \"azureKeyVaultPrincipalSecret\": \"<string>\",\n    \"keyManagementTypeId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/key-management",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"key-management"
							]
						},
						"description": "Update the Key Management configuration"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"awsKmsAccessKeyId\": \"<string>\",\n    \"awsKmsKeyArn\": \"<string>\",\n    \"awsKmsKeyId\": \"<string>\",\n    \"awsKmsSecretAccessKey\": \"<string>\",\n    \"azureKeyVaultBaseUrl\": \"<string>\",\n    \"azureKeyVaultKeyName\": \"<string>\",\n    \"azureKeyVaultKeyVersion\": \"<string>\",\n    \"azureKeyVaultPrincipalId\": \"<string>\",\n    \"azureKeyVaultPrincipalSecret\": \"<string>\",\n    \"keyManagementTypeId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"awsKmsAccessKeyId\": \"<string>\",\n    \"awsKmsKeyArn\": \"<string>\",\n    \"awsKmsKeyId\": \"<string>\",\n    \"awsKmsSecretAccessKey\": \"<string>\",\n    \"azureKeyVaultBaseUrl\": \"<string>\",\n    \"azureKeyVaultKeyName\": \"<string>\",\n    \"azureKeyVaultKeyVersion\": \"<string>\",\n    \"azureKeyVaultPrincipalId\": \"<string>\",\n    \"azureKeyVaultPrincipalSecret\": \"<string>\",\n    \"keyManagementTypeId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "KeyManagementConfigModel object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"awsKmsAccessKeyId\": \"<string>\",\n    \"awsKmsKeyArn\": \"<string>\",\n    \"awsKmsKeyId\": \"<string>\",\n    \"awsKmsSecretAccessKey\": \"<string>\",\n    \"azureKeyVaultBaseUrl\": \"<string>\",\n    \"azureKeyVaultKeyName\": \"<string>\",\n    \"azureKeyVaultKeyVersion\": \"<string>\",\n    \"azureKeyVaultPrincipalId\": \"<string>\",\n    \"azureKeyVaultPrincipalSecret\": \"<string>\",\n    \"keyManagementTypeId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"awsKmsAccessKeyId\": \"<string>\",\n \"awsKmsKeyArn\": \"<string>\",\n \"awsKmsKeyId\": \"<string>\",\n \"awsKmsSecretAccessKey\": \"<string>\",\n \"keyManagementConfigId\": \"<integer>\",\n \"keyManagementTypeId\": \"<integer>\",\n \"keyManagementTypeName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"awsKmsAccessKeyId\": \"<string>\",\n    \"awsKmsKeyArn\": \"<string>\",\n    \"awsKmsKeyId\": \"<string>\",\n    \"awsKmsSecretAccessKey\": \"<string>\",\n    \"azureKeyVaultBaseUrl\": \"<string>\",\n    \"azureKeyVaultKeyName\": \"<string>\",\n    \"azureKeyVaultKeyVersion\": \"<string>\",\n    \"azureKeyVaultPrincipalId\": \"<string>\",\n    \"azureKeyVaultPrincipalSecret\": \"<string>\",\n    \"keyManagementTypeId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/key-management",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Key Management Config Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/key-management/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"key-management",
								"stub"
							]
						},
						"description": "Return the default values for a new Key Management Config"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "KeyManagementConfigModel object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"awsKmsAccessKeyId\": \"<string>\",\n \"awsKmsKeyArn\": \"<string>\",\n \"awsKmsKeyId\": \"<string>\",\n \"awsKmsSecretAccessKey\": \"<string>\",\n \"keyManagementConfigId\": \"<integer>\",\n \"keyManagementTypeId\": \"<integer>\",\n \"keyManagementTypeName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/key-management/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"key-management",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and configure Key Management settings"
		},
		{
			"name": "LauncherAgents",
			"item": [
				{
					"name": "Search Launcher Agents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents?filter.includeInactive=<boolean>&filter.launcherAgentCollectionId=<integer>&filter.outOfDate=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "filter.launcherAgentCollectionId",
									"value": "<integer>",
									"description": "LauncherAgentCollectionId"
								},
								{
									"key": "filter.outOfDate",
									"value": "<boolean>",
									"description": "OutOfDate"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Launcher Agent s"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents?filter.includeInactive=<boolean>&filter.launcherAgentCollectionId=<integer>&filter.outOfDate=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.outOfDate",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents?filter.includeInactive=<boolean>&filter.launcherAgentCollectionId=<integer>&filter.outOfDate=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.outOfDate",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Launcher Agent  search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents?filter.includeInactive=<boolean>&filter.launcherAgentCollectionId=<integer>&filter.outOfDate=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.outOfDate",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"collectionId\": \"<integer>\",\n   \"collectionName\": \"<string>\",\n   \"collectionRecordKeystrokes\": \"<boolean>\",\n   \"collectionRecordStandaloneSessions\": \"<boolean>\",\n   \"created\": \"<dateTime>\",\n   \"hostName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"issue\": \"<string>\",\n   \"lastActivity\": \"<dateTime>\",\n   \"recordKeystrokes\": \"<boolean>\",\n   \"recordStandaloneSessions\": \"<boolean>\",\n   \"version\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"collectionId\": \"<integer>\",\n   \"collectionName\": \"<string>\",\n   \"collectionRecordKeystrokes\": \"<boolean>\",\n   \"collectionRecordStandaloneSessions\": \"<boolean>\",\n   \"created\": \"<dateTime>\",\n   \"hostName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"issue\": \"<string>\",\n   \"lastActivity\": \"<dateTime>\",\n   \"recordKeystrokes\": \"<boolean>\",\n   \"recordStandaloneSessions\": \"<boolean>\",\n   \"version\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents?filter.includeInactive=<boolean>&filter.launcherAgentCollectionId=<integer>&filter.outOfDate=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.outOfDate",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Launcher Agent ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Launcher Agents in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Launcher Agent ID"
								}
							]
						},
						"description": "Get a single Launcher Agent  by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "LauncherAgent object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"collectionId\": \"<integer>\",\n \"collectionName\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"hostName\": \"<string>\",\n \"id\": \"<integer>\",\n \"lastActivity\": \"<dateTime>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\",\n \"version\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Launcher Agent ",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/launcheragents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Launcher Agent ID"
								}
							]
						},
						"description": "Update a single Launcher Agent by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Launcher Agent object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"collectionId\": \"<integer>\",\n \"collectionName\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"hostName\": \"<string>\",\n \"id\": \"<integer>\",\n \"lastActivity\": \"<dateTime>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\",\n \"version\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Search Launcher Agent Collections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents/collections?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"collections"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Launcher Agent Collections in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Launcher Agent Collections"
					},
					"response": [
						{
							"name": "Launcher Agent Collection search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"activeAgentCount\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"activeAgentCount\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Launcher Agent Collection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"recordStandaloneSessions\": \"<boolean>\",\n    \"recordKeystrokes\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/launcheragents/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"collections"
							]
						},
						"description": "Create a new Launcher Agent Collection"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"recordStandaloneSessions\": \"<boolean>\",\n    \"recordKeystrokes\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Launcher Agent Collection object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"recordStandaloneSessions\": \"<boolean>\",\n    \"recordKeystrokes\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"activeAgentCount\": \"<integer>\",\n \"created\": \"<dateTime>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"recordStandaloneSessions\": \"<boolean>\",\n    \"recordKeystrokes\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"recordStandaloneSessions\": \"<boolean>\",\n    \"recordKeystrokes\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Launcher Agent Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents/collections/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"collections",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Launcher Agent Collections in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Launcher Agent Collection ID"
								}
							]
						},
						"description": "Get a single Launcher Agent Collection by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "LauncherAgentCollection object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"activeAgentCount\": \"<integer>\",\n \"created\": \"<dateTime>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Launcher Agent Collection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/launcheragents/collections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"collections",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Launcher Agent Collection ID"
								}
							]
						},
						"description": "Update a single Launcher Agent Collection by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Launcher Agent Collection object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"activeAgentCount\": \"<integer>\",\n \"created\": \"<dateTime>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordKeystrokes\": \"<boolean>\",\n    \"recordStandaloneSessions\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Launcher Agent Collection Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents/collections/stub?includeInactive=<boolean>&searchText=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"collections",
								"stub"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "searchText",
									"value": "<string>",
									"description": "SearchText"
								}
							]
						},
						"description": "Return the default values for a new Launcher Agent Collection"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/stub?includeInactive=<boolean>&searchText=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										"stub"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "searchText",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Launcher Agent Collection object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/stub?includeInactive=<boolean>&searchText=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										"stub"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "searchText",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"activeAgentCount\": \"<integer>\",\n \"created\": \"<dateTime>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordKeystrokes\": \"<boolean>\",\n \"recordStandaloneSessions\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/stub?includeInactive=<boolean>&searchText=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										"stub"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "searchText",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/collections/stub?includeInactive=<boolean>&searchText=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"collections",
										"stub"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "searchText",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search Launcher Agents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launcheragents/issues?filter.launcherAgentCollectionId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launcheragents",
								"issues"
							],
							"query": [
								{
									"key": "filter.launcherAgentCollectionId",
									"value": "<integer>",
									"description": "LauncherAgentCollectionId"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Launcher Agent s"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/issues?filter.launcherAgentCollectionId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"issues"
									],
									"query": [
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/issues?filter.launcherAgentCollectionId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"issues"
									],
									"query": [
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/issues?filter.launcherAgentCollectionId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"issues"
									],
									"query": [
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Launcher Agent  search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launcheragents/issues?filter.launcherAgentCollectionId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launcheragents",
										"issues"
									],
									"query": [
										{
											"key": "filter.launcherAgentCollectionId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"collectionId\": \"<integer>\",\n   \"collectionName\": \"<string>\",\n   \"collectionRecordKeystrokes\": \"<boolean>\",\n   \"collectionRecordStandaloneSessions\": \"<boolean>\",\n   \"created\": \"<dateTime>\",\n   \"hostName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"issue\": \"<string>\",\n   \"lastActivity\": \"<dateTime>\",\n   \"recordKeystrokes\": \"<boolean>\",\n   \"recordStandaloneSessions\": \"<boolean>\",\n   \"version\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"collectionId\": \"<integer>\",\n   \"collectionName\": \"<string>\",\n   \"collectionRecordKeystrokes\": \"<boolean>\",\n   \"collectionRecordStandaloneSessions\": \"<boolean>\",\n   \"created\": \"<dateTime>\",\n   \"hostName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"issue\": \"<string>\",\n   \"lastActivity\": \"<dateTime>\",\n   \"recordKeystrokes\": \"<boolean>\",\n   \"recordStandaloneSessions\": \"<boolean>\",\n   \"version\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				}
			],
			"description": "Manage Launcher Agents and Launcher Agent Collections for Advanced Session Recording"
		},
		{
			"name": "Launchers",
			"item": [
				{
					"name": "Search Launchers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launchers?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launchers"
							],
							"query": [
								{
									"key": "filter.application",
									"value": "<string>",
									"description": "Associated application"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive launchers"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page launchers"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Launcher search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"application\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"isCustom\": \"<boolean>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"application\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"isCustom\": \"<boolean>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Launcher",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launchers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launchers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Launcher ID"
								}
							]
						},
						"description": "Get a single launcher by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Launcher object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"application\": \"<string>\",\n \"customLauncherId\": \"<integer>\",\n \"customLauncherProcessName\": \"<string>\",\n \"customParameters\": \"<string>\",\n \"id\": \"<integer>\",\n \"isCustom\": \"<boolean>\",\n \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Launchers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launchers/lookup?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launchers",
								"lookup"
							],
							"query": [
								{
									"key": "filter.application",
									"value": "<string>",
									"description": "Associated application"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive launchers"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page launchers, returning only launcher ID and name"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/lookup?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"lookup"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/lookup?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"lookup"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/lookup?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"lookup"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Launcher search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/lookup?filter.application=<string>&filter.includeInactive=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"lookup"
									],
									"query": [
										{
											"key": "filter.application",
											"value": "<string>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get secret launcher details.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/launchers/secret?filter.secretId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launchers",
								"secret"
							],
							"query": [
								{
									"key": "filter.secretId",
									"value": "<integer>",
									"description": "The secret to get launch information about"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Get the details and fields needed for the launchers a secret can use."
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/secret?filter.secretId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									],
									"query": [
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret's Launcher details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/secret?filter.secretId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									],
									"query": [
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"application\": \"<string>\",\n   \"customLauncherId\": \"<integer>\",\n   \"customLauncherProcessName\": \"<string>\",\n   \"customParameters\": \"<string>\",\n   \"isCustom\": \"<boolean>\",\n   \"launcherId\": \"<integer>\",\n   \"launcherName\": \"<string>\",\n   \"promptedField\": {\n    \"allowDefault\": \"<boolean>\",\n    \"defaultType\": \"<string>\",\n    \"defaultTypeIntMax\": \"<integer>\",\n    \"defaultTypeIntMin\": \"<integer>\",\n    \"launcherTypeFieldId\": \"<integer>\",\n    \"launcherTypeId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"promptableField\": \"<boolean>\"\n   },\n   \"restrictedHost\": \"<boolean>\",\n   \"restrictedHosts\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"whiteList\": \"<boolean>\"\n  },\n  {\n   \"application\": \"<string>\",\n   \"customLauncherId\": \"<integer>\",\n   \"customLauncherProcessName\": \"<string>\",\n   \"customParameters\": \"<string>\",\n   \"isCustom\": \"<boolean>\",\n   \"launcherId\": \"<integer>\",\n   \"launcherName\": \"<string>\",\n   \"promptedField\": {\n    \"allowDefault\": \"<boolean>\",\n    \"defaultType\": \"<string>\",\n    \"defaultTypeIntMax\": \"<integer>\",\n    \"defaultTypeIntMin\": \"<integer>\",\n    \"launcherTypeFieldId\": \"<integer>\",\n    \"launcherTypeId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"promptableField\": \"<boolean>\"\n   },\n   \"restrictedHost\": \"<boolean>\",\n   \"restrictedHosts\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"whiteList\": \"<boolean>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/secret?filter.secretId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									],
									"query": [
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/launchers/secret?filter.secretId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									],
									"query": [
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Launch a secret.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"launcherId\": \"<integer>\",\n    \"promptFieldValue\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/launchers/secret",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"launchers",
								"secret"
							]
						},
						"description": "Launch a the secret using the provided secret id, and required fields."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"launcherId\": \"<integer>\",\n    \"promptFieldValue\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launchers/secret",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"launcherId\": \"<integer>\",\n    \"promptFieldValue\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launchers/secret",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"launcherId\": \"<integer>\",\n    \"promptFieldValue\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launchers/secret",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Launched Secret details",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"launcherId\": \"<integer>\",\n    \"promptFieldValue\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/launchers/secret",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"launchers",
										"secret"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"apiVersion\": \"<integer>\",\n \"baseUrl\": \"<string>\",\n \"encodedUrl\": \"<string>\",\n \"guid\": \"<uuid>\",\n \"launcherType\": \"<string>\",\n \"launcherTypeId\": \"<integer>\",\n \"sessionGuid\": \"<uuid>\",\n \"ssUrl\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View available application launchers"
		},
		{
			"name": "OAuthExpiration",
			"item": [
				{
					"name": "Expire Session",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/oauth-expiration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth-expiration"
							]
						},
						"description": "Expire the current user session"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oauth-expiration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-expiration"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oauth-expiration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-expiration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Whether the expiration succeeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oauth-expiration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-expiration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oauth-expiration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-expiration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Expire the current user session"
		},
		{
			"name": "OneTimePasswordCode",
			"item": [
				{
					"name": "Get one time password code and seconds",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/one-time-password-code/:id?numberOfCodesToGenerate=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"one-time-password-code",
								":id"
							],
							"query": [
								{
									"key": "numberOfCodesToGenerate",
									"value": "<integer>",
									"description": "NumberOfCodesToGenerate"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get one time password code by secret id"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/one-time-password-code/:id?numberOfCodesToGenerate=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"one-time-password-code",
										":id"
									],
									"query": [
										{
											"key": "numberOfCodesToGenerate",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "One time password code model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/one-time-password-code/:id?numberOfCodesToGenerate=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"one-time-password-code",
										":id"
									],
									"query": [
										{
											"key": "numberOfCodesToGenerate",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"code\": \"<string>\",\n  \"durationSeconds\": \"<integer>\",\n  \"remainingSeconds\": \"<integer>\"\n },\n {\n  \"code\": \"<string>\",\n  \"durationSeconds\": \"<integer>\",\n  \"remainingSeconds\": \"<integer>\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/one-time-password-code/:id?numberOfCodesToGenerate=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"one-time-password-code",
										":id"
									],
									"query": [
										{
											"key": "numberOfCodesToGenerate",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/one-time-password-code/:id?numberOfCodesToGenerate=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"one-time-password-code",
										":id"
									],
									"query": [
										{
											"key": "numberOfCodesToGenerate",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain one time passwords"
		},
		{
			"name": "PbaConfiguration",
			"item": [
				{
					"name": "Get Pba Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pba-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pba-configuration"
							]
						},
						"description": "Get Pba Configuration"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Pba Configuration object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowImportData\": \"<boolean>\",\n \"challengeEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"challengeLockoutIntegratedEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"challengeLockoutSamlEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"enabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"encryptionEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"eventDataUploadInterval\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventDataUploadSizeThreshold\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"externalPbaUrl\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"fileUploadEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"firstEnabledDate\": \"<dateTime>\",\n \"metadataInterval\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"metadataLastSynchronized\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"pbaIntegrationKeySet\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"pbaKey\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<uuid>\"\n },\n \"pbaKeyCreatedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"pbaKeyStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Disabled\"\n },\n \"respectOwnerEditorRequireApprovalEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"retentionDays\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretServerKey\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<uuid>\"\n },\n \"secretServerKeyCreatedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"secretServerKeyStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Approved\"\n },\n \"siteId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"storageDirectoryPath\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"warningMessage\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Pba Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"challengeEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutIntegratedEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutSamlEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"encryptionEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventDataUploadInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"eventDataUploadSizeThreshold\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"externalPbaUrl\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"fileUploadEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"metadataInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"pbaIntegrationKey\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"respectOwnerEditorRequireApprovalEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"retentionDays\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"siteId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"storageDirectoryPath\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pba-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pba-configuration"
							]
						},
						"description": "Update Pba Configuration"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"challengeEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutIntegratedEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutSamlEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"encryptionEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventDataUploadInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"eventDataUploadSizeThreshold\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"externalPbaUrl\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"fileUploadEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"metadataInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"pbaIntegrationKey\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"respectOwnerEditorRequireApprovalEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"retentionDays\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"siteId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"storageDirectoryPath\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Pba Configuration",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"challengeEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutIntegratedEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutSamlEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"encryptionEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventDataUploadInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"eventDataUploadSizeThreshold\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"externalPbaUrl\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"fileUploadEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"metadataInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"pbaIntegrationKey\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"respectOwnerEditorRequireApprovalEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"retentionDays\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"siteId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"storageDirectoryPath\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowImportData\": \"<boolean>\",\n \"challengeEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"challengeLockoutIntegratedEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"challengeLockoutSamlEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"enabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"encryptionEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"eventDataUploadInterval\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"eventDataUploadSizeThreshold\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"externalPbaUrl\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"fileUploadEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"firstEnabledDate\": \"<dateTime>\",\n \"metadataInterval\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"metadataLastSynchronized\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"pbaIntegrationKeySet\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"pbaKey\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<uuid>\"\n },\n \"pbaKeyCreatedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"pbaKeyStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Disabled\"\n },\n \"respectOwnerEditorRequireApprovalEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"retentionDays\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretServerKey\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<uuid>\"\n },\n \"secretServerKeyCreatedDate\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"secretServerKeyStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Approved\"\n },\n \"siteId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"storageDirectoryPath\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"warningMessage\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"challengeEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutIntegratedEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutSamlEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"encryptionEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventDataUploadInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"eventDataUploadSizeThreshold\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"externalPbaUrl\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"fileUploadEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"metadataInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"pbaIntegrationKey\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"respectOwnerEditorRequireApprovalEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"retentionDays\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"siteId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"storageDirectoryPath\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"challengeEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutIntegratedEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"challengeLockoutSamlEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"encryptionEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"eventDataUploadInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"eventDataUploadSizeThreshold\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"externalPbaUrl\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"fileUploadEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"metadataInterval\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"pbaIntegrationKey\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"respectOwnerEditorRequireApprovalEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"retentionDays\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"siteId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"storageDirectoryPath\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-configuration"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Process Pba Historical Import",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Thursday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"processImport\": \"<boolean>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Wednesday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pba-history-import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pba-history-import"
							]
						},
						"description": "Process Pba Historical Import"
					},
					"response": [
						{
							"name": "Pba Historical Import",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Thursday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"processImport\": \"<boolean>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Wednesday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-history-import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-history-import"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Thursday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"processImport\": \"<boolean>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Wednesday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-history-import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-history-import"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Thursday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"processImport\": \"<boolean>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Wednesday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-history-import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-history-import"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Thursday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"processImport\": \"<boolean>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Wednesday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pba-history-import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pba-history-import"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and configure Privilege Behavior Analytics"
		},
		{
			"name": "Proxy",
			"item": [
				{
					"name": "Get the Proxy Audit List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/audit?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"audit"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Proxy Audits."
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/audit?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"audit"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/audit?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"audit"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "A paginated list of Proxy Audits.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/audit?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"audit"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"notes\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"notes\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/audit?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"audit"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get the proxy endpoints list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/endpoints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"endpoints"
							]
						},
						"description": "Get the proxy endpoints list"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"defaultRdpProxyPort\": \"<integer>\",\n \"defaultSshProxyPort\": \"<integer>\",\n \"engines\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  }\n ],\n \"nodes\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  }\n ],\n \"rdpProxyEnabled\": \"<boolean>\",\n \"sites\": [\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  },\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  }\n ],\n \"sshProxyEnabled\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Update an engine proxy configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"engineId\": \"<integer>\",\n    \"friendlyName\": \"<string>\",\n    \"publicHost\": \"<string>\",\n    \"siteName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/endpoints/engines/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"endpoints",
								"engines",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update an engine proxy configuration"
					},
					"response": [
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"engineId\": \"<integer>\",\n    \"friendlyName\": \"<string>\",\n    \"publicHost\": \"<string>\",\n    \"siteName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"engines",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"defaultRdpProxyPort\": \"<integer>\",\n \"defaultSshProxyPort\": \"<integer>\",\n \"engines\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  }\n ],\n \"nodes\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  }\n ],\n \"rdpProxyEnabled\": \"<boolean>\",\n \"sites\": [\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  },\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  }\n ],\n \"sshProxyEnabled\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"engineId\": \"<integer>\",\n    \"friendlyName\": \"<string>\",\n    \"publicHost\": \"<string>\",\n    \"siteName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"engines",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"engineId\": \"<integer>\",\n    \"friendlyName\": \"<string>\",\n    \"publicHost\": \"<string>\",\n    \"siteName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"engines",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"engineId\": \"<integer>\",\n    \"friendlyName\": \"<string>\",\n    \"publicHost\": \"<string>\",\n    \"siteName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"engines",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update a node proxy configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"machineName\": \"<string>\",\n    \"nodeId\": \"<integer>\",\n    \"publicHost\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/endpoints/nodes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"endpoints",
								"nodes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update a node proxy configuration"
					},
					"response": [
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"machineName\": \"<string>\",\n    \"nodeId\": \"<integer>\",\n    \"publicHost\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/nodes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"nodes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"defaultRdpProxyPort\": \"<integer>\",\n \"defaultSshProxyPort\": \"<integer>\",\n \"engines\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  }\n ],\n \"nodes\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  }\n ],\n \"rdpProxyEnabled\": \"<boolean>\",\n \"sites\": [\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  },\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  }\n ],\n \"sshProxyEnabled\": \"<boolean>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"machineName\": \"<string>\",\n    \"nodeId\": \"<integer>\",\n    \"publicHost\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/nodes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"nodes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"machineName\": \"<string>\",\n    \"nodeId\": \"<integer>\",\n    \"publicHost\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/nodes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"nodes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bindIpAddress\": \"<string>\",\n    \"machineName\": \"<string>\",\n    \"nodeId\": \"<integer>\",\n    \"publicHost\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/nodes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"nodes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get endpoint warnings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/endpoints/notification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"endpoints",
								"notification"
							]
						},
						"description": "Get endpoint warnings"
					},
					"response": [
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"notification"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"notification"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"notification"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"notification"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update a site proxy configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpProxyPortInherited\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"siteName\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshProxyPortInherited\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/endpoints/sites/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"endpoints",
								"sites",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update a site proxy configuration"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpProxyPortInherited\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"siteName\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshProxyPortInherited\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/sites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"sites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpProxyPortInherited\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"siteName\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshProxyPortInherited\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/sites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"sites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpProxyPortInherited\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"siteName\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshProxyPortInherited\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/sites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"sites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpProxyPortInherited\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"siteName\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshProxyPortInherited\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/endpoints/sites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"endpoints",
										"sites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"defaultRdpProxyPort\": \"<integer>\",\n \"defaultSshProxyPort\": \"<integer>\",\n \"engines\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"engineId\": \"<integer>\",\n   \"friendlyName\": \"<string>\",\n   \"publicHost\": \"<string>\",\n   \"siteName\": \"<string>\"\n  }\n ],\n \"nodes\": [\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  },\n  {\n   \"bindIpAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"nodeId\": \"<integer>\",\n   \"publicHost\": \"<string>\"\n  }\n ],\n \"rdpProxyEnabled\": \"<boolean>\",\n \"sites\": [\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  },\n  {\n   \"enableRdpProxy\": \"<boolean>\",\n   \"enableSshProxy\": \"<boolean>\",\n   \"rdpProxyPort\": \"<integer>\",\n   \"rdpProxyPortInherited\": \"<boolean>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"sshProxyPort\": \"<integer>\",\n   \"sshProxyPortInherited\": \"<boolean>\"\n  }\n ],\n \"sshProxyEnabled\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Get Proxy Explanations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/explanation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"explanation"
							]
						},
						"description": "Get an explanation of the SSH proxy, SSH terminal, and RDP proxy features"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/explanation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"explanation"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/explanation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"explanation"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Explanations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/explanation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"explanation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"rdpProxyExplanation\": \"<string>\",\n \"sshProxyExplanation\": \"<string>\",\n \"sshTerminalExplanation\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/explanation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"explanation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get the RDP proxy configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/rdp/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"rdp",
								"config"
							]
						},
						"description": "Get the RDP proxy configuration"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "RDP Proxy Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableRdpProxy\": \"<boolean>\",\n \"enableRemoteHostValidation\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"rdpProxyPort\": \"<integer>\",\n \"rdpServerCertificate\": {\n  \"rdpServerCertificate\": \"<binary>\",\n  \"rdpServerCertificateFileName\": \"<string>\",\n  \"rdpServerCertificatePassword\": \"<string>\"\n }\n}"
						}
					]
				},
				{
					"name": "Update the RDP proxy configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableRemoteHostValidation\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpServerCertificate\": {\n        \"rdpServerCertificate\": \"<binary>\",\n        \"rdpServerCertificateFileName\": \"<string>\",\n        \"rdpServerCertificatePassword\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/rdp/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"rdp",
								"config"
							]
						},
						"description": "Update the RDP proxy configuration"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableRemoteHostValidation\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpServerCertificate\": {\n        \"rdpServerCertificate\": \"<binary>\",\n        \"rdpServerCertificateFileName\": \"<string>\",\n        \"rdpServerCertificatePassword\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "RDP Proxy Configuration",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableRemoteHostValidation\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpServerCertificate\": {\n        \"rdpServerCertificate\": \"<binary>\",\n        \"rdpServerCertificateFileName\": \"<string>\",\n        \"rdpServerCertificatePassword\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableRdpProxy\": \"<boolean>\",\n \"enableRemoteHostValidation\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"rdpProxyPort\": \"<integer>\",\n \"rdpServerCertificate\": {\n  \"rdpServerCertificate\": \"<binary>\",\n  \"rdpServerCertificateFileName\": \"<string>\",\n  \"rdpServerCertificatePassword\": \"<string>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableRemoteHostValidation\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpServerCertificate\": {\n        \"rdpServerCertificate\": \"<binary>\",\n        \"rdpServerCertificateFileName\": \"<string>\",\n        \"rdpServerCertificatePassword\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableRdpProxy\": \"<boolean>\",\n    \"enableRemoteHostValidation\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"rdpProxyPort\": \"<integer>\",\n    \"rdpServerCertificate\": {\n        \"rdpServerCertificate\": \"<binary>\",\n        \"rdpServerCertificateFileName\": \"<string>\",\n        \"rdpServerCertificatePassword\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Generate RDP server certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dnsName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/rdp/generate-certificate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"rdp",
								"generate-certificate"
							]
						},
						"description": "Generates a new RDP server certificate and returns the RDP configuration with the updated server certificate"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dnsName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/generate-certificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"generate-certificate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dnsName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/generate-certificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"generate-certificate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "RDP Proxy Configuration",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dnsName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/generate-certificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"generate-certificate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowSiteSelectionForActiveDirectoryAccounts\": \"<boolean>\",\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableRdpProxy\": \"<boolean>\",\n \"enableRemoteHostValidation\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"rdpProxyPort\": \"<integer>\",\n \"rdpServerCertificate\": {\n  \"rdpServerCertificate\": \"<binary>\",\n  \"rdpServerCertificateFileName\": \"<string>\",\n  \"rdpServerCertificatePassword\": \"<string>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dnsName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/generate-certificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"generate-certificate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get a notification of where the RDP proxy is running",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/rdp/notification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"rdp",
								"notification"
							]
						},
						"description": "Get a notification of where the RDP proxy is running"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"notification"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"notification"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"notification"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/rdp/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"rdp",
										"notification"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get the SSH proxy configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/ssh/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"ssh",
								"config"
							]
						},
						"description": "Get the SSH proxy configuration"
					},
					"response": [
						{
							"name": "SSH Proxy Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableProxyInactivityTimeout\": \"<boolean>\",\n \"enableSshProxy\": \"<boolean>\",\n \"enableSshTerminal\": \"<boolean>\",\n \"enableSshTunneling\": \"<boolean>\",\n \"enableTerminalInactivityTimeout\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"sshHostKey\": \"<string>\",\n \"sshProxyBanner\": \"<string>\",\n \"sshProxyHostFingerprint\": \"<string>\",\n \"sshProxyPort\": \"<integer>\",\n \"sshTerminalBanner\": \"<string>\",\n \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update the SSH proxy configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableProxyInactivityTimeout\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"enableSshTerminal\": \"<boolean>\",\n    \"enableSshTunneling\": \"<boolean>\",\n    \"enableTerminalInactivityTimeout\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"sshHostKey\": \"<string>\",\n    \"sshProxyBanner\": \"<string>\",\n    \"sshProxyHostFingerprint\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshTerminalBanner\": \"<string>\",\n    \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/ssh/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"ssh",
								"config"
							]
						},
						"description": "Update the SSH proxy configuration"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableProxyInactivityTimeout\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"enableSshTerminal\": \"<boolean>\",\n    \"enableSshTunneling\": \"<boolean>\",\n    \"enableTerminalInactivityTimeout\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"sshHostKey\": \"<string>\",\n    \"sshProxyBanner\": \"<string>\",\n    \"sshProxyHostFingerprint\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshTerminalBanner\": \"<string>\",\n    \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "SSH Proxy Configuration",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableProxyInactivityTimeout\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"enableSshTerminal\": \"<boolean>\",\n    \"enableSshTunneling\": \"<boolean>\",\n    \"enableTerminalInactivityTimeout\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"sshHostKey\": \"<string>\",\n    \"sshProxyBanner\": \"<string>\",\n    \"sshProxyHostFingerprint\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshTerminalBanner\": \"<string>\",\n    \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableProxyInactivityTimeout\": \"<boolean>\",\n \"enableSshProxy\": \"<boolean>\",\n \"enableSshTerminal\": \"<boolean>\",\n \"enableSshTunneling\": \"<boolean>\",\n \"enableTerminalInactivityTimeout\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"sshHostKey\": \"<string>\",\n \"sshProxyBanner\": \"<string>\",\n \"sshProxyHostFingerprint\": \"<string>\",\n \"sshProxyPort\": \"<integer>\",\n \"sshTerminalBanner\": \"<string>\",\n \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableProxyInactivityTimeout\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"enableSshTerminal\": \"<boolean>\",\n    \"enableSshTunneling\": \"<boolean>\",\n    \"enableTerminalInactivityTimeout\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"sshHostKey\": \"<string>\",\n    \"sshProxyBanner\": \"<string>\",\n    \"sshProxyHostFingerprint\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshTerminalBanner\": \"<string>\",\n    \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"daysToKeepOperationalLogs\": \"<integer>\",\n    \"enableProxyInactivityTimeout\": \"<boolean>\",\n    \"enableSshProxy\": \"<boolean>\",\n    \"enableSshTerminal\": \"<boolean>\",\n    \"enableSshTunneling\": \"<boolean>\",\n    \"enableTerminalInactivityTimeout\": \"<boolean>\",\n    \"isCloud\": \"<boolean>\",\n    \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n    \"proxyNewSecretsByDefault\": \"<boolean>\",\n    \"sshHostKey\": \"<string>\",\n    \"sshProxyBanner\": \"<string>\",\n    \"sshProxyHostFingerprint\": \"<string>\",\n    \"sshProxyPort\": \"<integer>\",\n    \"sshTerminalBanner\": \"<string>\",\n    \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Generate SSH Host Key",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/ssh/generate-key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"ssh",
								"generate-key"
							]
						},
						"description": "Generates a new SSH host key and returns the SSH configuration with the updated host key"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/generate-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"generate-key"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/generate-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"generate-key"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/generate-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"generate-key"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SSH Proxy Configuration",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/generate-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"generate-key"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"daysToKeepOperationalLogs\": \"<integer>\",\n \"enableProxyInactivityTimeout\": \"<boolean>\",\n \"enableSshProxy\": \"<boolean>\",\n \"enableSshTerminal\": \"<boolean>\",\n \"enableSshTunneling\": \"<boolean>\",\n \"enableTerminalInactivityTimeout\": \"<boolean>\",\n \"isCloud\": \"<boolean>\",\n \"proxyInactivityTimeoutSeconds\": \"<integer>\",\n \"proxyNewSecretsByDefault\": \"<boolean>\",\n \"sshHostKey\": \"<string>\",\n \"sshProxyBanner\": \"<string>\",\n \"sshProxyHostFingerprint\": \"<string>\",\n \"sshProxyPort\": \"<integer>\",\n \"sshTerminalBanner\": \"<string>\",\n \"terminalInactivityTimeoutSeconds\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get a notification of where the SSH proxy is running",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/ssh/notification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"ssh",
								"notification"
							]
						},
						"description": "Get a notification of where the SSH proxy is running"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"notification"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"notification"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"notification"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "A list of nodes, sites, and engines with proxy configurations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/ssh/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"ssh",
										"notification"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "Retrieve and update SSH and RDP proxy configurations"
		},
		{
			"name": "RemotePasswordChanging",
			"item": [
				{
					"name": "Create Custom Command",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/custom-commands",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"custom-commands"
							]
						},
						"description": "Create a New Custom Command"
					},
					"response": [
						{
							"name": "Created Custom Command",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"command\": \"<string>\",\n \"commandTypeCode\": \"<integer>\",\n \"comment\": \"<string>\",\n \"concurrencyId\": \"<string>\",\n \"customCommandId\": \"<integer>\",\n \"order\": \"<integer>\",\n \"passwordTypeId\": \"<integer>\",\n \"pause\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Custom Command List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id?filter.commandTypeCode=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"custom-commands",
								":id"
							],
							"query": [
								{
									"key": "filter.commandTypeCode",
									"value": "<integer>",
									"description": "CommandTypeCode"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Password Type Id"
								}
							]
						},
						"description": "Lists Available Custom Command for Password Type"
					},
					"response": [
						{
							"name": "Custom Command List result for Password Type",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id?filter.commandTypeCode=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"query": [
										{
											"key": "filter.commandTypeCode",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"command\": \"<string>\",\n   \"commandTypeCode\": \"<integer>\",\n   \"comment\": \"<string>\",\n   \"concurrencyId\": \"<string>\",\n   \"customCommandId\": \"<integer>\",\n   \"order\": \"<integer>\",\n   \"passwordTypeId\": \"<integer>\",\n   \"pause\": \"<integer>\"\n  },\n  {\n   \"command\": \"<string>\",\n   \"commandTypeCode\": \"<integer>\",\n   \"comment\": \"<string>\",\n   \"concurrencyId\": \"<string>\",\n   \"customCommandId\": \"<integer>\",\n   \"order\": \"<integer>\",\n   \"passwordTypeId\": \"<integer>\",\n   \"pause\": \"<integer>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id?filter.commandTypeCode=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"query": [
										{
											"key": "filter.commandTypeCode",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id?filter.commandTypeCode=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"query": [
										{
											"key": "filter.commandTypeCode",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id?filter.commandTypeCode=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"query": [
										{
											"key": "filter.commandTypeCode",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Custom Command",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"concurrencyId\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"custom-commands",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Custom Command Id"
								}
							]
						},
						"description": "Update a Custom Command"
					},
					"response": [
						{
							"name": "Updated Custom Command",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"concurrencyId\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"command\": \"<string>\",\n \"commandTypeCode\": \"<integer>\",\n \"comment\": \"<string>\",\n \"concurrencyId\": \"<string>\",\n \"customCommandId\": \"<integer>\",\n \"order\": \"<integer>\",\n \"passwordTypeId\": \"<integer>\",\n \"pause\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"concurrencyId\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"concurrencyId\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"command\": \"<string>\",\n    \"commandTypeCode\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"concurrencyId\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"passwordTypeId\": \"<integer>\",\n    \"pause\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Custom Command",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"custom-commands",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Custom Command Id"
								}
							]
						},
						"description": "Delete a Custom Command"
					},
					"response": [
						{
							"name": "Delete Password Custom Command",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/custom-commands/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"custom-commands",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Password Type List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/password-types?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"password-types"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Password Types in the results"
								},
								{
									"key": "filter.searchTerm",
									"value": "<string>",
									"description": "SearchTerm"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Lists Available Password Types"
					},
					"response": [
						{
							"name": "PasswordType List result",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"canEdit\": \"<boolean>\",\n   \"hasCommands\": \"<boolean>\",\n   \"heartbeatScriptId\": \"<integer>\",\n   \"ignoreSSL\": \"<boolean>\",\n   \"isWeb\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordTypeId\": \"<integer>\",\n   \"requiredEdition\": \"<string>\",\n   \"rpcScriptId\": \"<integer>\",\n   \"runnerType\": \"Legacy\",\n   \"scanItemTemplateId\": \"<integer>\",\n   \"useSSL\": \"<boolean>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"canEdit\": \"<boolean>\",\n   \"hasCommands\": \"<boolean>\",\n   \"heartbeatScriptId\": \"<integer>\",\n   \"ignoreSSL\": \"<boolean>\",\n   \"isWeb\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordTypeId\": \"<integer>\",\n   \"requiredEdition\": \"<string>\",\n   \"rpcScriptId\": \"<integer>\",\n   \"runnerType\": \"Standard\",\n   \"scanItemTemplateId\": \"<integer>\",\n   \"useSSL\": \"<boolean>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Password Type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"basePasswordTypeId\": \"<integer>\",\n    \"name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/password-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"password-types"
							]
						},
						"description": "Create a New Password Type"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"basePasswordTypeId\": \"<integer>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"basePasswordTypeId\": \"<integer>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Created Password Type",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"basePasswordTypeId\": \"<integer>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"canEdit\": \"<boolean>\",\n \"customPort\": \"<integer>\",\n \"exitCommand\": \"<string>\",\n \"fields\": [\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  }\n ],\n \"hasCommands\": \"<boolean>\",\n \"hasLDAPSettings\": \"<boolean>\",\n \"heartbeatScriptArgs\": \"<string>\",\n \"heartbeatScriptId\": \"<integer>\",\n \"ignoreSSL\": \"<boolean>\",\n \"isWeb\": \"<boolean>\",\n \"ldapConnectionSettingsId\": \"<integer>\",\n \"lineEnding\": \"NewLine\",\n \"mainframeConnectionString\": \"<string>\",\n \"name\": \"<string>\",\n \"odbcConnectionString\": \"<string>\",\n \"passwordTypeId\": \"<integer>\",\n \"rpcScriptArgs\": \"<string>\",\n \"rpcScriptId\": \"<integer>\",\n \"runnerType\": \"Legacy\",\n \"scanItemTemplateId\": \"<integer>\",\n \"typeName\": \"<string>\",\n \"useSSL\": \"<boolean>\",\n \"useUsernameAndPassword\": \"<boolean>\",\n \"validForTakeover\": \"<boolean>\",\n \"windowsCustomPorts\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"basePasswordTypeId\": \"<integer>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Password Type List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"password-types",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Password Type Id"
								}
							]
						},
						"description": "Lists Available Password Types"
					},
					"response": [
						{
							"name": "PasswordType List result",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"canEdit\": \"<boolean>\",\n \"customPort\": \"<integer>\",\n \"exitCommand\": \"<string>\",\n \"fields\": [\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  }\n ],\n \"hasCommands\": \"<boolean>\",\n \"hasLDAPSettings\": \"<boolean>\",\n \"heartbeatScriptArgs\": \"<string>\",\n \"heartbeatScriptId\": \"<integer>\",\n \"ignoreSSL\": \"<boolean>\",\n \"isWeb\": \"<boolean>\",\n \"ldapConnectionSettingsId\": \"<integer>\",\n \"lineEnding\": \"CarriageReturn\",\n \"mainframeConnectionString\": \"<string>\",\n \"name\": \"<string>\",\n \"odbcConnectionString\": \"<string>\",\n \"passwordTypeId\": \"<integer>\",\n \"rpcScriptArgs\": \"<string>\",\n \"rpcScriptId\": \"<integer>\",\n \"runnerType\": \"Legacy\",\n \"scanItemTemplateId\": \"<integer>\",\n \"typeName\": \"<string>\",\n \"useSSL\": \"<boolean>\",\n \"useUsernameAndPassword\": \"<boolean>\",\n \"validForTakeover\": \"<boolean>\",\n \"windowsCustomPorts\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Password Type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"customPort\": \"<integer>\",\n    \"exitCommand\": \"<string>\",\n    \"hasCommands\": \"<boolean>\",\n    \"heartbeatScriptArgs\": \"<string>\",\n    \"heartbeatScriptId\": \"<integer>\",\n    \"ignoreSSL\": \"<boolean>\",\n    \"isWeb\": \"<boolean>\",\n    \"ldapConnectionSettingsId\": \"<integer>\",\n    \"lineEnding\": \"CarriageReturn\",\n    \"mainframeConnectionString\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionString\": \"<string>\",\n    \"rpcScriptArgs\": \"<string>\",\n    \"rpcScriptId\": \"<integer>\",\n    \"runnerType\": \"Legacy\",\n    \"scanItemTemplateId\": \"<integer>\",\n    \"useSSL\": \"<boolean>\",\n    \"useUsernameAndPassword\": \"<boolean>\",\n    \"validForTakeover\": \"<boolean>\",\n    \"windowsCustomPorts\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"password-types",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Password Type Id"
								}
							]
						},
						"description": "Update a Password Type"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"customPort\": \"<integer>\",\n    \"exitCommand\": \"<string>\",\n    \"hasCommands\": \"<boolean>\",\n    \"heartbeatScriptArgs\": \"<string>\",\n    \"heartbeatScriptId\": \"<integer>\",\n    \"ignoreSSL\": \"<boolean>\",\n    \"isWeb\": \"<boolean>\",\n    \"ldapConnectionSettingsId\": \"<integer>\",\n    \"lineEnding\": \"CarriageReturn\",\n    \"mainframeConnectionString\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionString\": \"<string>\",\n    \"rpcScriptArgs\": \"<string>\",\n    \"rpcScriptId\": \"<integer>\",\n    \"runnerType\": \"Legacy\",\n    \"scanItemTemplateId\": \"<integer>\",\n    \"useSSL\": \"<boolean>\",\n    \"useUsernameAndPassword\": \"<boolean>\",\n    \"validForTakeover\": \"<boolean>\",\n    \"windowsCustomPorts\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"customPort\": \"<integer>\",\n    \"exitCommand\": \"<string>\",\n    \"hasCommands\": \"<boolean>\",\n    \"heartbeatScriptArgs\": \"<string>\",\n    \"heartbeatScriptId\": \"<integer>\",\n    \"ignoreSSL\": \"<boolean>\",\n    \"isWeb\": \"<boolean>\",\n    \"ldapConnectionSettingsId\": \"<integer>\",\n    \"lineEnding\": \"CarriageReturn\",\n    \"mainframeConnectionString\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionString\": \"<string>\",\n    \"rpcScriptArgs\": \"<string>\",\n    \"rpcScriptId\": \"<integer>\",\n    \"runnerType\": \"Legacy\",\n    \"scanItemTemplateId\": \"<integer>\",\n    \"useSSL\": \"<boolean>\",\n    \"useUsernameAndPassword\": \"<boolean>\",\n    \"validForTakeover\": \"<boolean>\",\n    \"windowsCustomPorts\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"customPort\": \"<integer>\",\n    \"exitCommand\": \"<string>\",\n    \"hasCommands\": \"<boolean>\",\n    \"heartbeatScriptArgs\": \"<string>\",\n    \"heartbeatScriptId\": \"<integer>\",\n    \"ignoreSSL\": \"<boolean>\",\n    \"isWeb\": \"<boolean>\",\n    \"ldapConnectionSettingsId\": \"<integer>\",\n    \"lineEnding\": \"CarriageReturn\",\n    \"mainframeConnectionString\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionString\": \"<string>\",\n    \"rpcScriptArgs\": \"<string>\",\n    \"rpcScriptId\": \"<integer>\",\n    \"runnerType\": \"Legacy\",\n    \"scanItemTemplateId\": \"<integer>\",\n    \"useSSL\": \"<boolean>\",\n    \"useUsernameAndPassword\": \"<boolean>\",\n    \"validForTakeover\": \"<boolean>\",\n    \"windowsCustomPorts\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Updated Password Type",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"customPort\": \"<integer>\",\n    \"exitCommand\": \"<string>\",\n    \"hasCommands\": \"<boolean>\",\n    \"heartbeatScriptArgs\": \"<string>\",\n    \"heartbeatScriptId\": \"<integer>\",\n    \"ignoreSSL\": \"<boolean>\",\n    \"isWeb\": \"<boolean>\",\n    \"ldapConnectionSettingsId\": \"<integer>\",\n    \"lineEnding\": \"CarriageReturn\",\n    \"mainframeConnectionString\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionString\": \"<string>\",\n    \"rpcScriptArgs\": \"<string>\",\n    \"rpcScriptId\": \"<integer>\",\n    \"runnerType\": \"Legacy\",\n    \"scanItemTemplateId\": \"<integer>\",\n    \"useSSL\": \"<boolean>\",\n    \"useUsernameAndPassword\": \"<boolean>\",\n    \"validForTakeover\": \"<boolean>\",\n    \"windowsCustomPorts\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"canEdit\": \"<boolean>\",\n \"customPort\": \"<integer>\",\n \"exitCommand\": \"<string>\",\n \"fields\": [\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"scanItemFieldId\": \"<integer>\"\n  }\n ],\n \"hasCommands\": \"<boolean>\",\n \"hasLDAPSettings\": \"<boolean>\",\n \"heartbeatScriptArgs\": \"<string>\",\n \"heartbeatScriptId\": \"<integer>\",\n \"ignoreSSL\": \"<boolean>\",\n \"isWeb\": \"<boolean>\",\n \"ldapConnectionSettingsId\": \"<integer>\",\n \"lineEnding\": \"CarriageReturn\",\n \"mainframeConnectionString\": \"<string>\",\n \"name\": \"<string>\",\n \"odbcConnectionString\": \"<string>\",\n \"passwordTypeId\": \"<integer>\",\n \"rpcScriptArgs\": \"<string>\",\n \"rpcScriptId\": \"<integer>\",\n \"runnerType\": \"Legacy\",\n \"scanItemTemplateId\": \"<integer>\",\n \"typeName\": \"<string>\",\n \"useSSL\": \"<boolean>\",\n \"useUsernameAndPassword\": \"<boolean>\",\n \"validForTakeover\": \"<boolean>\",\n \"windowsCustomPorts\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Password Type",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remote-password-changing",
								"password-types",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Password Type Id"
								}
							]
						},
						"description": "Delete a Password Type"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Delete Password Type Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remote-password-changing/password-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remote-password-changing",
										"password-types",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				}
			],
			"description": "View Password Changing Settings "
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Search Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports"
							],
							"query": [
								{
									"key": "filter.categoryId",
									"value": "<integer>",
									"description": "Category ID"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Reports in the results"
								},
								{
									"key": "filter.reportName",
									"value": "<string>",
									"description": "Report Name - Searching by report name ignores other filters"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page reports"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Report search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"categoryId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"categoryId\": \"<integer>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports"
							]
						},
						"description": "Creates a new Report and returns the report"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Report object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"categoryId\": \"<integer>\",\n \"chartType\": \"<string>\",\n \"description\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"is3DReport\": \"<boolean>\",\n \"name\": \"<string>\",\n \"pageSize\": \"<integer>\",\n \"reportSql\": \"<string>\",\n \"systemReport\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Report ID"
								}
							]
						},
						"description": "Gets a Report and returns the Report Model"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Report object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"categoryId\": \"<integer>\",\n \"chartType\": \"<string>\",\n \"description\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"is3DReport\": \"<boolean>\",\n \"name\": \"<string>\",\n \"pageSize\": \"<integer>\",\n \"reportSql\": \"<string>\",\n \"systemReport\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Report",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/reports/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Report ID"
								}
							]
						},
						"description": "Updates a Report and returns the report"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Report object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"categoryId\": \"<integer>\",\n    \"reportSql\": \"<string>\",\n    \"chartType\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"is3DReport\": \"<boolean>\",\n    \"pageSize\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"categoryId\": \"<integer>\",\n \"chartType\": \"<string>\",\n \"description\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"is3DReport\": \"<boolean>\",\n \"name\": \"<string>\",\n \"pageSize\": \"<integer>\",\n \"reportSql\": \"<string>\",\n \"systemReport\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Delete Report",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Report ID"
								}
							]
						},
						"description": "Delete a report by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Report Parameters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/:id/defaultparameters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								":id",
								"defaultparameters"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Report ID"
								}
							]
						},
						"description": "Gets the default parameters for the specified report"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id/defaultparameters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"defaultparameters"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id/defaultparameters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"defaultparameters"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id/defaultparameters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"defaultparameters"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Report Parameters",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id/defaultparameters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"defaultparameters"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"defaultParameterValues\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": {},\n   \"variableName\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": {},\n   \"variableName\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List Report Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"categories"
							]
						},
						"description": "List the report categories"
					},
					"response": [
						{
							"name": "Report categories array",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"categories"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"categories"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Report Chart Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/charttypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"charttypes"
							]
						},
						"description": "List the report chart types"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/charttypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"charttypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Report chart types array",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/charttypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"charttypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/charttypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"charttypes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/charttypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"charttypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Execute Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/reports/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"execute"
							]
						},
						"description": "Executes a Report and returns the results"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"execute"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Report object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"execute"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"columns\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"columnTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"enabled\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"rows\": [\n  [],\n  []\n ],\n \"systemReport\": \"<boolean>\",\n \"totalRowCount\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"execute"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"execute"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Export Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delimiter\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"format\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\",\n    \"timeZone\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/reports/export",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"export"
							]
						},
						"description": "Exports a Report and returns the results"
					},
					"response": [
						{
							"name": "Unknown or empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"delimiter\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"format\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\",\n    \"timeZone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"export"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"delimiter\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"format\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\",\n    \"timeZone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"export"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"delimiter\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"format\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\",\n    \"timeZone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"export"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"delimiter\": \"<string>\",\n    \"dualControlApproval\": {\n        \"domainId\": \"<integer>\",\n        \"password\": \"<string>\",\n        \"twoFactor\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"encodeHtml\": \"<boolean>\",\n    \"endRecordNumber\": \"<integer>\",\n    \"format\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isAscending\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"orderByFieldOrdinal\": \"<integer>\",\n    \"pageNumber\": \"<integer>\",\n    \"parameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"recordsPerPage\": \"<integer>\",\n    \"startRecordNumber\": \"<integer>\",\n    \"timeZone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/reports/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"export"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/lookup?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"lookup"
							],
							"query": [
								{
									"key": "filter.categoryId",
									"value": "<integer>",
									"description": "Category ID"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive Reports in the results"
								},
								{
									"key": "filter.reportName",
									"value": "<string>",
									"description": "Report Name - Searching by report name ignores other filters"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page reports, returning only group ID and name"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/lookup?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"lookup"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Reports search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/lookup?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"lookup"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/lookup?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"lookup"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/lookup?filter.categoryId=<integer>&filter.includeInactive=<boolean>&filter.reportName=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"lookup"
									],
									"query": [
										{
											"key": "filter.categoryId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.reportName",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Reports"
		},
		{
			"name": "Script",
			"item": [
				{
					"name": "Search scripts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userscripts?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userscripts"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive scripts in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search Text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page scripts"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "scripts search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts?filter.includeInactive=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"scriptCategoryId\": \"<integer>\",\n   \"scriptCategoryName\": \"<string>\",\n   \"scriptId\": \"<integer>\",\n   \"scriptType\": \"PowerShell\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"scriptCategoryId\": \"<integer>\",\n   \"scriptCategoryName\": \"<string>\",\n   \"scriptId\": \"<integer>\",\n   \"scriptType\": \"SSH\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create Script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"additionalData\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionStringArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"script\": \"<string>\",\n    \"scriptCategoryId\": \"<integer>\",\n    \"scriptCategoryName\": \"<string>\",\n    \"scriptType\": \"SQL\",\n    \"usageCount\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/userscripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userscripts"
							]
						},
						"description": "Create a new Script"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"additionalData\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionStringArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"script\": \"<string>\",\n    \"scriptCategoryId\": \"<integer>\",\n    \"scriptCategoryName\": \"<string>\",\n    \"scriptType\": \"PowerShell\",\n    \"usageCount\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userscripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"additionalData\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionStringArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"script\": \"<string>\",\n    \"scriptCategoryId\": \"<integer>\",\n    \"scriptCategoryName\": \"<string>\",\n    \"scriptType\": \"PowerShell\",\n    \"usageCount\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userscripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"additionalData\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionStringArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"script\": \"<string>\",\n    \"scriptCategoryId\": \"<integer>\",\n    \"scriptCategoryName\": \"<string>\",\n    \"scriptType\": \"PowerShell\",\n    \"usageCount\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userscripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Template object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"additionalData\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"odbcConnectionStringArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"script\": \"<string>\",\n    \"scriptCategoryId\": \"<integer>\",\n    \"scriptCategoryName\": \"<string>\",\n    \"scriptType\": \"PowerShell\",\n    \"usageCount\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userscripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fields\": [\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"Owner\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"NotEditable\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  }\n ],\n \"id\": \"<integer>\",\n \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Script",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userscripts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userscripts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Script ID"
								}
							]
						},
						"description": "Get a single script by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Script object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"additionalData\": \"<string>\",\n \"concurrencyId\": \"<string>\",\n \"description\": \"<string>\",\n \"name\": \"<string>\",\n \"odbcConnectionStringArgs\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"script\": \"<string>\",\n \"scriptCategoryId\": \"<integer>\",\n \"scriptCategoryName\": \"<string>\",\n \"scriptId\": \"<integer>\",\n \"scriptType\": \"SSH\",\n \"usageCount\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userscripts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userscripts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View Scripts"
		},
		{
			"name": "SdkClientAccounts",
			"item": [
				{
					"name": "Search SDK Client Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts"
							],
							"query": [
								{
									"key": "filter.operator",
									"value": "<string>",
									"description": "Operator"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "filter.userId",
									"value": "<integer>",
									"description": "UserId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page app SDK Client accounts"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SDK Client Account search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"filter\": {\n  \"operator\": \"Exclude\",\n  \"searchText\": \"<string>\",\n  \"userId\": \"<integer>\"\n },\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"clientId\": \"<uuid>\",\n   \"details\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddress\": \"<string>\",\n   \"name\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  },\n  {\n   \"clientId\": \"<uuid>\",\n   \"details\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"ipAddress\": \"<string>\",\n   \"name\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create SDK Client Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ruleName\": \"<string>\",\n    \"clientId\": \"<uuid>\",\n    \"onboardingKey\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts"
							]
						},
						"description": "Create a new SDK Client account"
					},
					"response": [
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ruleName\": \"<string>\",\n    \"clientId\": \"<uuid>\",\n    \"onboardingKey\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ruleName\": \"<string>\",\n    \"clientId\": \"<uuid>\",\n    \"onboardingKey\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ruleName\": \"<string>\",\n    \"clientId\": \"<uuid>\",\n    \"onboardingKey\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ruleName\": \"<string>\",\n    \"clientId\": \"<uuid>\",\n    \"onboardingKey\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get SDK Client Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Account Id"
								}
							]
						},
						"description": "Get a single SDK Client account by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update SDK Client Account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Account Id"
								}
							]
						},
						"description": "Update a single SDK Client account by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Revoke SDK Client Account",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts/:id/revoke",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts",
								":id",
								"revoke"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Account Id"
								}
							]
						},
						"description": "Revoke a single SDK Client account by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id",
										"revoke"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id",
										"revoke"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id",
										"revoke"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/:id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										":id",
										"revoke"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Current State",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts",
								"enabled"
							]
						},
						"description": "Get the current state of SDK client account"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Toggle Current State",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-accounts",
								"enabled"
							]
						},
						"description": "Toggle the current state of SDK client account"
					},
					"response": [
						{
							"name": "SdkClientAccountModel",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clientId\": \"<uuid>\",\n \"clientSecret\": \"<string>\",\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"ipAddress\": \"<string>\",\n \"name\": \"<string>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-accounts/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-accounts",
										"enabled"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain SDK Client Accounts"
		},
		{
			"name": "SdkClientAudits",
			"item": [
				{
					"name": "Search SDK Client Audits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-audits?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-audits"
							],
							"query": [
								{
									"key": "filter.operator",
									"value": "<string>",
									"description": "Operator"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "filter.userId",
									"value": "<integer>",
									"description": "UserId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page app SDK Client audits"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-audits?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-audits"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-audits?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-audits"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SDK Client Audit search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-audits?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-audits"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"filter\": {\n  \"operator\": \"Exclude\",\n  \"searchText\": \"<string>\",\n  \"userId\": \"<integer>\"\n },\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"correlationId\": \"<uuid>\",\n   \"createdOn\": \"<dateTime>\",\n   \"id\": \"<integer>\",\n   \"ipAddress\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"sdkClientAccountId\": \"<integer>\",\n   \"sdkClientAccountName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"correlationId\": \"<uuid>\",\n   \"createdOn\": \"<dateTime>\",\n   \"id\": \"<integer>\",\n   \"ipAddress\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"sdkClientAccountId\": \"<integer>\",\n   \"sdkClientAccountName\": \"<string>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-audits?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-audits"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View SDK Client Audits"
		},
		{
			"name": "SdkClientRules",
			"item": [
				{
					"name": "Search SDK Client Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules"
							],
							"query": [
								{
									"key": "filter.operator",
									"value": "<string>",
									"description": "Operator"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "filter.userId",
									"value": "<integer>",
									"description": "UserId"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page app SDK Client rules"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SDK Client Rule search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"filter\": {\n  \"operator\": \"All\",\n  \"searchText\": \"<string>\",\n  \"userId\": \"<integer>\"\n },\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"details\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"requireOnboardingKey\": \"<boolean>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  },\n  {\n   \"details\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"requireOnboardingKey\": \"<boolean>\",\n   \"userDisplayName\": \"<string>\",\n   \"userId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules?filter.operator=<string>&filter.searchText=<string>&filter.userId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									],
									"query": [
										{
											"key": "filter.operator",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create New SDK Client Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules"
							]
						},
						"description": "Create a new SDK Client rule"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SdkClientRuleModel",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"requireOnboardingKey\": \"<boolean>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get SDK Client Rule",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Rule Id"
								}
							]
						},
						"description": "Get a single SDK Client rule by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SdkClientRuleModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"requireOnboardingKey\": \"<boolean>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update SDK Client Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Rule Id"
								}
							]
						},
						"description": "Update a single SDK Client rule by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "SdkClientRuleModel",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"requireOnboardingKey\": \"<boolean>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"requireOnboardingKey\": \"<boolean>\",\n    \"userId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete SDK Client Rule",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Rule Id"
								}
							]
						},
						"description": "Delete a SDK Client rule by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "DeletedModel",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get Onboarding Key for SDK Client Rule",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules/:id/onboarding-key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules",
								":id",
								"onboarding-key"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) SDK Client Rule Id"
								}
							]
						},
						"description": "Get the onboarding key for a single SDK Client rule by ID"
					},
					"response": [
						{
							"name": "SdkClientRuleModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id/onboarding-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id",
										"onboarding-key"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id/onboarding-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id",
										"onboarding-key"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id/onboarding-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id",
										"onboarding-key"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/:id/onboarding-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										":id",
										"onboarding-key"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get SDK Client Rule Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sdk-client-rules/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sdk-client-rules",
								"stub"
							]
						},
						"description": "Return the default values for a new SDK Client rule"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SdkClientRuleModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": \"<string>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"requireOnboardingKey\": \"<boolean>\",\n \"userDisplayName\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sdk-client-rules/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sdk-client-rules",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain SDK Client Rules"
		},
		{
			"name": "SecretAccessRequests",
			"item": [
				{
					"name": "Get Secret Access Requests by Status for Current User.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests?filter.isMyRequest=<boolean>&filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests"
							],
							"query": [
								{
									"key": "filter.isMyRequest",
									"value": "<boolean>",
									"description": "IsMyRequest"
								},
								{
									"key": "filter.status",
									"value": "<string>",
									"description": "Status"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Get Secret Access Requests by Status for Current User."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests?filter.isMyRequest=<boolean>&filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									],
									"query": [
										{
											"key": "filter.isMyRequest",
											"value": "<boolean>"
										},
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests?filter.isMyRequest=<boolean>&filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									],
									"query": [
										{
											"key": "filter.isMyRequest",
											"value": "<boolean>"
										},
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests?filter.isMyRequest=<boolean>&filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									],
									"query": [
										{
											"key": "filter.isMyRequest",
											"value": "<boolean>"
										},
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests?filter.isMyRequest=<boolean>&filter.status=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									],
									"query": [
										{
											"key": "filter.isMyRequest",
											"value": "<boolean>"
										},
										{
											"key": "filter.status",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"accessRequestWorkflowMapId\": \"<integer>\",\n   \"approverDisplayName\": \"<string>\",\n   \"completed\": \"<boolean>\",\n   \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n   \"expirationDate\": \"<dateTime>\",\n   \"folderId\": \"<integer>\",\n   \"hasWorkflow\": \"<boolean>\",\n   \"requestComment\": \"<string>\",\n   \"requestDate\": \"<dateTime>\",\n   \"requestingUserId\": \"<integer>\",\n   \"requestUsername\": \"<string>\",\n   \"responseComment\": \"<string>\",\n   \"responseDate\": \"<dateTime>\",\n   \"reviewStatusMessage\": \"<string>\",\n   \"secretAccessRequestId\": \"<integer>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"WaitingForRequest\",\n   \"statusDescription\": \"<string>\",\n   \"ticketNumber\": \"<string>\",\n   \"ticketSystemId\": \"<integer>\"\n  },\n  {\n   \"accessRequestWorkflowMapId\": \"<integer>\",\n   \"approverDisplayName\": \"<string>\",\n   \"completed\": \"<boolean>\",\n   \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n   \"expirationDate\": \"<dateTime>\",\n   \"folderId\": \"<integer>\",\n   \"hasWorkflow\": \"<boolean>\",\n   \"requestComment\": \"<string>\",\n   \"requestDate\": \"<dateTime>\",\n   \"requestingUserId\": \"<integer>\",\n   \"requestUsername\": \"<string>\",\n   \"responseComment\": \"<string>\",\n   \"responseDate\": \"<dateTime>\",\n   \"reviewStatusMessage\": \"<string>\",\n   \"secretAccessRequestId\": \"<integer>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"Approved\",\n   \"statusDescription\": \"<string>\",\n   \"ticketNumber\": \"<string>\",\n   \"ticketSystemId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update a new Secret Access Request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expirationDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Monday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"responseComment\": \"<string>\",\n    \"secretAccessRequestId\": \"<integer>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Sunday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"status\": \"Approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests"
							]
						},
						"description": "Update a new Secret Access Request"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expirationDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Monday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"responseComment\": \"<string>\",\n    \"secretAccessRequestId\": \"<integer>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Sunday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"status\": \"Approved\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expirationDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Monday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"responseComment\": \"<string>\",\n    \"secretAccessRequestId\": \"<integer>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Sunday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"status\": \"Approved\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expirationDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Monday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"responseComment\": \"<string>\",\n    \"secretAccessRequestId\": \"<integer>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Sunday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"status\": \"Approved\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"actionResultMessage\": \"<string>\",\n \"approverDisplayName\": \"<string>\",\n \"completed\": \"<boolean>\",\n \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n \"expirationDate\": \"<dateTime>\",\n \"folderId\": \"<integer>\",\n \"hasWorkflow\": \"<boolean>\",\n \"requestComment\": \"<string>\",\n \"requestDate\": \"<dateTime>\",\n \"requestingUserId\": \"<integer>\",\n \"requestUsername\": \"<string>\",\n \"responseComment\": \"<string>\",\n \"responseDate\": \"<dateTime>\",\n \"reviewStatusMessage\": \"<string>\",\n \"secretAccessRequestId\": \"<integer>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"startDate\": \"<dateTime>\",\n \"status\": \"WaitingForRequest\",\n \"statusDescription\": \"<string>\",\n \"ticketNumber\": \"<string>\",\n \"ticketSystemId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expirationDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Monday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"responseComment\": \"<string>\",\n    \"secretAccessRequestId\": \"<integer>\",\n    \"startDate\": {\n        \"date\": \"<dateTime>\",\n        \"dateTime\": \"<dateTime>\",\n        \"day\": \"<integer>\",\n        \"dayOfWeek\": \"Sunday\",\n        \"dayOfYear\": \"<integer>\",\n        \"hour\": \"<integer>\",\n        \"localDateTime\": \"<dateTime>\",\n        \"millisecond\": \"<integer>\",\n        \"minute\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"offset\": \"<time-span>\",\n        \"second\": \"<integer>\",\n        \"ticks\": \"<long>\",\n        \"timeOfDay\": \"<time-span>\",\n        \"utcDateTime\": \"<dateTime>\",\n        \"utcTicks\": \"<long>\",\n        \"year\": \"<integer>\"\n    },\n    \"status\": \"Approved\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new Secret Access Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secretId\": \"<integer>\",\n    \"expirationDate\": \"<dateTime>\",\n    \"requestComment\": \"<string>\",\n    \"startDate\": \"<dateTime>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests"
							]
						},
						"description": "Create a new Secret Access Request"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"expirationDate\": \"<dateTime>\",\n    \"requestComment\": \"<string>\",\n    \"startDate\": \"<dateTime>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"expirationDate\": \"<dateTime>\",\n    \"requestComment\": \"<string>\",\n    \"startDate\": \"<dateTime>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"expirationDate\": \"<dateTime>\",\n    \"requestComment\": \"<string>\",\n    \"startDate\": \"<dateTime>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"expirationDate\": \"<dateTime>\",\n    \"requestComment\": \"<string>\",\n    \"startDate\": \"<dateTime>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"approverDisplayName\": \"<string>\",\n \"completed\": \"<boolean>\",\n \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n \"expirationDate\": \"<dateTime>\",\n \"folderId\": \"<integer>\",\n \"hasWorkflow\": \"<boolean>\",\n \"requestComment\": \"<string>\",\n \"requestDate\": \"<dateTime>\",\n \"requestingUserId\": \"<integer>\",\n \"requestUsername\": \"<string>\",\n \"responseComment\": \"<string>\",\n \"responseDate\": \"<dateTime>\",\n \"reviewStatusMessage\": \"<string>\",\n \"secretAccessRequestId\": \"<integer>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"startDate\": \"<dateTime>\",\n \"status\": \"Denied\",\n \"statusDescription\": \"<string>\",\n \"ticketNumber\": \"<string>\",\n \"ticketSystemId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Access Request by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Access ID"
								}
							]
						},
						"description": "Get Secret Access Request by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"approverDisplayName\": \"<string>\",\n \"completed\": \"<boolean>\",\n \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n \"expirationDate\": \"<dateTime>\",\n \"folderId\": \"<integer>\",\n \"hasWorkflow\": \"<boolean>\",\n \"requestComment\": \"<string>\",\n \"requestDate\": \"<dateTime>\",\n \"requestingUserId\": \"<integer>\",\n \"requestUsername\": \"<string>\",\n \"responseComment\": \"<string>\",\n \"responseDate\": \"<dateTime>\",\n \"reviewStatusMessage\": \"<string>\",\n \"secretAccessRequestId\": \"<integer>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"startDate\": \"<dateTime>\",\n \"status\": \"Denied\",\n \"statusDescription\": \"<string>\",\n \"ticketNumber\": \"<string>\",\n \"ticketSystemId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret access request history for the user that created the request.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests/:id/history?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests",
								":id",
								"history"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Access Request Id"
								}
							]
						},
						"description": "Get Secret access request history for the user that created the request."
					},
					"response": [
						{
							"name": "Secret Access Request History Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id/history?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id",
										"history"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"details\": \"<string>\",\n   \"fullName\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"details\": \"<string>\",\n   \"fullName\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id/history?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id",
										"history"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id/history?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id",
										"history"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/:id/history?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										":id",
										"history"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Access Requests by Status for Current User.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests/secrets/:id?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests",
								"secrets",
								":id"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get Secret Access Requests by Status for Current User."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret Access Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"accessRequestWorkflowMapId\": \"<integer>\",\n   \"approverDisplayName\": \"<string>\",\n   \"completed\": \"<boolean>\",\n   \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n   \"expirationDate\": \"<dateTime>\",\n   \"folderId\": \"<integer>\",\n   \"hasWorkflow\": \"<boolean>\",\n   \"requestComment\": \"<string>\",\n   \"requestDate\": \"<dateTime>\",\n   \"requestingUserId\": \"<integer>\",\n   \"requestUsername\": \"<string>\",\n   \"responseComment\": \"<string>\",\n   \"responseDate\": \"<dateTime>\",\n   \"reviewStatusMessage\": \"<string>\",\n   \"secretAccessRequestId\": \"<integer>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"Pending\",\n   \"statusDescription\": \"<string>\",\n   \"ticketNumber\": \"<string>\",\n   \"ticketSystemId\": \"<integer>\"\n  },\n  {\n   \"accessRequestWorkflowMapId\": \"<integer>\",\n   \"approverDisplayName\": \"<string>\",\n   \"completed\": \"<boolean>\",\n   \"currentUserRestrictedFromReviewing\": \"<boolean>\",\n   \"expirationDate\": \"<dateTime>\",\n   \"folderId\": \"<integer>\",\n   \"hasWorkflow\": \"<boolean>\",\n   \"requestComment\": \"<string>\",\n   \"requestDate\": \"<dateTime>\",\n   \"requestingUserId\": \"<integer>\",\n   \"requestUsername\": \"<string>\",\n   \"responseComment\": \"<string>\",\n   \"responseDate\": \"<dateTime>\",\n   \"reviewStatusMessage\": \"<string>\",\n   \"secretAccessRequestId\": \"<integer>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"startDate\": \"<dateTime>\",\n   \"status\": \"Approved\",\n   \"statusDescription\": \"<string>\",\n   \"ticketNumber\": \"<string>\",\n   \"ticketSystemId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Access Options by Secret ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests",
								"secrets",
								":id",
								"options"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get Secret Access Options by Secret ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"options"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"options"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Access Request Options",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"options"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"customCheckoutIntervalDays\": \"<integer>\",\n \"customCheckoutIntervalHours\": \"<integer>\",\n \"customCheckoutIntervalMinutes\": \"<integer>\",\n \"editorsAlsoRequireApproval\": \"<boolean>\",\n \"enableDoubleLock\": \"<boolean>\",\n \"enableRequiresApprovalForAccess\": \"<boolean>\",\n \"isDefaultCheckoutInterval\": \"<boolean>\",\n \"ownersAndApproversAlsoRequireApproval\": \"<boolean>\",\n \"requireCheckout\": \"<boolean>\",\n \"requireCommentTicketNumber\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"options"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new View Comment on a secret.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/view-comment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-access-requests",
								"secrets",
								":id",
								"view-comment"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Create a new View Comment on a secret."
					},
					"response": [
						{
							"name": "Success or Failure of the save.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/view-comment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"view-comment"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/view-comment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"view-comment"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/view-comment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"view-comment"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-access-requests/secrets/:id/view-comment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-access-requests",
										"secrets",
										":id",
										"view-comment"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "SecretAccessRequestsController"
		},
		{
			"name": "SecretDependencies",
			"item": [
				{
					"name": "Search Secret Dependencies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies?filter.groupId=<integer>&filter.includeInactive=<boolean>&filter.lastRunStatus=<string>&filter.searchText=<string>&filter.secretId=<integer>&filter.templateId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies"
							],
							"query": [
								{
									"key": "filter.groupId",
									"value": "<integer>",
									"description": "Filter by group id"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether or not to include inactive Secret Depenencies"
								},
								{
									"key": "filter.lastRunStatus",
									"value": "<string>",
									"description": "Filter by last dependency result status"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search in the title / name and machine fields"
								},
								{
									"key": "filter.secretId",
									"value": "<integer>",
									"description": "The Secret Id to filter on"
								},
								{
									"key": "filter.templateId",
									"value": "<integer>",
									"description": "Filter by dependency template id"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Secret Dependencies on a Secret"
					},
					"response": [
						{
							"name": "SecretDependency search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies?filter.groupId=<integer>&filter.includeInactive=<boolean>&filter.lastRunStatus=<string>&filter.searchText=<string>&filter.secretId=<integer>&filter.templateId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.lastRunStatus",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.templateId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"machineName\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"runResult\": \"Success\",\n   \"secretId\": \"<integer>\",\n   \"serviceName\": \"<string>\",\n   \"typeId\": \"<integer>\",\n   \"typeName\": \"<string>\"\n  },\n  {\n   \"enabled\": \"<boolean>\",\n   \"groupId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"machineName\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"runResult\": \"Failed\",\n   \"secretId\": \"<integer>\",\n   \"serviceName\": \"<string>\",\n   \"typeId\": \"<integer>\",\n   \"typeName\": \"<string>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies?filter.groupId=<integer>&filter.includeInactive=<boolean>&filter.lastRunStatus=<string>&filter.searchText=<string>&filter.secretId=<integer>&filter.templateId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.lastRunStatus",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.templateId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies?filter.groupId=<integer>&filter.includeInactive=<boolean>&filter.lastRunStatus=<string>&filter.searchText=<string>&filter.secretId=<integer>&filter.templateId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.lastRunStatus",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.templateId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies?filter.groupId=<integer>&filter.includeInactive=<boolean>&filter.lastRunStatus=<string>&filter.searchText=<string>&filter.secretId=<integer>&filter.templateId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.lastRunStatus",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.templateId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret Dependency",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies"
							]
						},
						"description": "Creates a new Secret Dependency and returns the model"
					},
					"response": [
						{
							"name": "Secret Dependency object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"childDependencyStatus\": \"<boolean>\",\n \"conditionDependencyId\": \"<integer>\",\n \"conditionMode\": \"<string>\",\n \"dependencyTemplate\": {\n  \"changerScriptId\": \"<integer>\",\n  \"dependencyScanItemFields\": [\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptName\": \"<string>\",\n  \"secretDependencyChangerId\": \"<integer>\",\n  \"secretDependencyTemplateId\": \"<integer>\"\n },\n \"description\": \"<string>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"logMessage\": \"<string>\",\n \"privilegedAccountSecretId\": \"<integer>\",\n \"runScript\": {\n  \"machineName\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptId\": \"<integer>\",\n  \"scriptName\": \"<string>\",\n  \"serviceName\": \"<string>\"\n },\n \"secretDependencyStatus\": \"<boolean>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"settings\": [\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  },\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  }\n ],\n \"sortOrder\": \"<integer>\",\n \"sshKeySecretId\": \"<integer>\",\n \"sshKeySecretName\": \"<string>\",\n \"typeId\": \"<integer>\",\n \"typeName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Dependency",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Dependency ID"
								}
							]
						},
						"description": "Gets a Secret Dependency and returns the Secret Dependency Model"
					},
					"response": [
						{
							"name": "Secret Dependency object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"childDependencyStatus\": \"<boolean>\",\n \"conditionDependencyId\": \"<integer>\",\n \"conditionMode\": \"<string>\",\n \"dependencyTemplate\": {\n  \"changerScriptId\": \"<integer>\",\n  \"dependencyScanItemFields\": [\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptName\": \"<string>\",\n  \"secretDependencyChangerId\": \"<integer>\",\n  \"secretDependencyTemplateId\": \"<integer>\"\n },\n \"description\": \"<string>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"logMessage\": \"<string>\",\n \"privilegedAccountSecretId\": \"<integer>\",\n \"runScript\": {\n  \"machineName\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptId\": \"<integer>\",\n  \"scriptName\": \"<string>\",\n  \"serviceName\": \"<string>\"\n },\n \"secretDependencyStatus\": \"<boolean>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"settings\": [\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  },\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  }\n ],\n \"sortOrder\": \"<integer>\",\n \"sshKeySecretId\": \"<integer>\",\n \"sshKeySecretName\": \"<string>\",\n \"typeId\": \"<integer>\",\n \"typeName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Dependency",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Dependency ID"
								}
							]
						},
						"description": "Updates a Secret Dependency and returns the model"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "SecretDependencyModel object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": \"<boolean>\",\n    \"conditionDependencyId\": \"<integer>\",\n    \"conditionMode\": \"<string>\",\n    \"dependencyTemplate\": {\n        \"changerScriptId\": \"<integer>\",\n        \"dependencyScanItemFields\": [\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"id\": \"<integer>\",\n                \"name\": \"<string>\",\n                \"parentName\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptName\": \"<string>\",\n        \"secretDependencyChangerId\": \"<integer>\",\n        \"secretDependencyTemplateId\": \"<integer>\"\n    },\n    \"description\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"machineName\": \"<string>\",\n    \"privilegedAccountSecretId\": \"<integer>\",\n    \"runScript\": {\n        \"machineName\": \"<string>\",\n        \"odbcConnectionArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptArguments\": [\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"type\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"scriptId\": \"<integer>\",\n        \"scriptName\": \"<string>\",\n        \"serviceName\": \"<string>\"\n    },\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"serviceName\": \"<string>\",\n    \"settings\": [\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        },\n        {\n            \"changerSettingValue\": \"<string>\",\n            \"setting\": {\n                \"active\": \"<boolean>\",\n                \"canEdit\": \"<boolean>\",\n                \"canEditValue\": \"<boolean>\",\n                \"childSettings\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n                    }\n                ],\n                \"defaultValue\": \"<string>\",\n                \"displayName\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"isVisibile\": \"<boolean>\",\n                \"parentSettingId\": \"<integer>\",\n                \"regexValidation\": \"<string>\",\n                \"settingName\": \"<string>\",\n                \"settingSectionId\": \"<integer>\",\n                \"settingType\": \"<integer>\",\n                \"subSettingSectionId\": \"<integer>\"\n            },\n            \"settingId\": \"<integer>\",\n            \"settingName\": \"<string>\",\n            \"settingValue\": \"<string>\"\n        }\n    ],\n    \"sortOrder\": \"<integer>\",\n    \"sshKeySecretId\": \"<integer>\",\n    \"typeId\": \"<integer>\",\n    \"typeName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"conditionDependencyId\": \"<integer>\",\n \"conditionMode\": \"<string>\",\n \"dependencyTemplate\": {\n  \"changerScriptId\": \"<integer>\",\n  \"dependencyScanItemFields\": [\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptName\": \"<string>\",\n  \"secretDependencyChangerId\": \"<integer>\",\n  \"secretDependencyTemplateId\": \"<integer>\"\n },\n \"description\": \"<string>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"machineName\": \"<string>\",\n \"privilegedAccountSecretId\": \"<integer>\",\n \"runScript\": {\n  \"machineName\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptId\": \"<integer>\",\n  \"scriptName\": \"<string>\",\n  \"serviceName\": \"<string>\"\n },\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"serviceName\": \"<string>\",\n \"settings\": [\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  },\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  }\n ],\n \"sortOrder\": \"<integer>\",\n \"sshKeySecretId\": \"<integer>\",\n \"typeId\": \"<integer>\",\n \"typeName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Secret Dependency",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Dependency ID"
								}
							]
						},
						"description": "Delete a Secret Dependency by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Dependency Groups for a Secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"groups",
								":secretId"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get Secret Dependency Groups for a Secret"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Dependency Group array",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"model\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"statusFailedCount\": \"<integer>\",\n   \"statusNotRunCount\": \"<integer>\",\n   \"statusSuccessCount\": \"<integer>\",\n   \"totalDependencies\": \"<integer>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"siteId\": \"<integer>\",\n   \"siteName\": \"<string>\",\n   \"statusFailedCount\": \"<integer>\",\n   \"statusNotRunCount\": \"<integer>\",\n   \"statusSuccessCount\": \"<integer>\",\n   \"totalDependencies\": \"<integer>\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret Dependency Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secretDependencyGroupName\": \"<string>\",\n    \"siteId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"groups",
								":secretId"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Creates a new Secret Dependency Group and returns the model"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretDependencyGroupName\": \"<string>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretDependencyGroupName\": \"<string>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret Dependency Group object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretDependencyGroupName\": \"<string>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"siteId\": \"<integer>\",\n \"siteName\": \"<string>\",\n \"statusFailedCount\": \"<integer>\",\n \"statusNotRunCount\": \"<integer>\",\n \"statusSuccessCount\": \"<integer>\",\n \"totalDependencies\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretDependencyGroupName\": \"<string>\",\n    \"siteId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/groups/:secretId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"groups",
										":secretId"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Run Dependencies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"run"
							]
						},
						"description": "Runs the list of dependencies and retruns an identifier that can be used to collect the status."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Identifier of the task",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Dependency run task status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/run/:identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"run",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Task identifier"
								}
							]
						},
						"description": "Gets a Secret Dependency run task status"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Task Status",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"errorMessage\": \"<string>\",\n   \"itemName\": \"<string>\"\n  },\n  {\n   \"errorMessage\": \"<string>\",\n   \"itemName\": \"<string>\"\n  }\n ],\n \"isComplete\": \"<boolean>\",\n \"percentageComplete\": \"<integer>\",\n \"status\": \"<string>\",\n \"taskIdentifier\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/run/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"run",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Scripts that are possible to use for Dependencies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"scripts"
							]
						},
						"description": "Get Scripts that are possible to use for Dependencies"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"scripts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"scripts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"scripts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Dependency Script array",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"scripts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"arguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ]\n },\n {\n  \"arguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Get Secret Dependency Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/stub?scriptId=<integer>&secretId=<integer>&templateId=<integer>&typeId=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"stub"
							],
							"query": [
								{
									"key": "scriptId",
									"value": "<integer>",
									"description": "The Id of the Script that this Dependency will Run.  Only provide this value if the Dependency is running a script directly, and ensure that the type of the script matches the TypeId value passed in."
								},
								{
									"key": "secretId",
									"value": "<integer>",
									"description": "The Id of the Secret that this Dependency will appear on"
								},
								{
									"key": "templateId",
									"value": "<integer>",
									"description": "The Id of the Dependency Template that this Dependecy will be modeled on. Only provide this value if the Dependency is based on a Template."
								},
								{
									"key": "typeId",
									"value": "<integer>",
									"description": "The Id of the Dependency Type that this Dependecy will be modeled on. Only provide this value if the Dependency is a running a script directly and is NOT based on a Dependency Template.  Valid Values: PowershellScript = 7, SshScript = 8, SqlScript = 9"
								}
							]
						},
						"description": "Return the default values for a new Secret Dependency"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/stub?scriptId=<integer>&secretId=<integer>&templateId=<integer>&typeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"stub"
									],
									"query": [
										{
											"key": "scriptId",
											"value": "<integer>"
										},
										{
											"key": "secretId",
											"value": "<integer>"
										},
										{
											"key": "templateId",
											"value": "<integer>"
										},
										{
											"key": "typeId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/stub?scriptId=<integer>&secretId=<integer>&templateId=<integer>&typeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"stub"
									],
									"query": [
										{
											"key": "scriptId",
											"value": "<integer>"
										},
										{
											"key": "secretId",
											"value": "<integer>"
										},
										{
											"key": "templateId",
											"value": "<integer>"
										},
										{
											"key": "typeId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/stub?scriptId=<integer>&secretId=<integer>&templateId=<integer>&typeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"stub"
									],
									"query": [
										{
											"key": "scriptId",
											"value": "<integer>"
										},
										{
											"key": "secretId",
											"value": "<integer>"
										},
										{
											"key": "templateId",
											"value": "<integer>"
										},
										{
											"key": "typeId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SecretDependencyModel",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/stub?scriptId=<integer>&secretId=<integer>&templateId=<integer>&typeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"stub"
									],
									"query": [
										{
											"key": "scriptId",
											"value": "<integer>"
										},
										{
											"key": "secretId",
											"value": "<integer>"
										},
										{
											"key": "templateId",
											"value": "<integer>"
										},
										{
											"key": "typeId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"childDependencyStatus\": \"<boolean>\",\n \"conditionDependencyId\": \"<integer>\",\n \"conditionMode\": \"<string>\",\n \"dependencyTemplate\": {\n  \"changerScriptId\": \"<integer>\",\n  \"dependencyScanItemFields\": [\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentName\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptName\": \"<string>\",\n  \"secretDependencyChangerId\": \"<integer>\",\n  \"secretDependencyTemplateId\": \"<integer>\"\n },\n \"description\": \"<string>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"logMessage\": \"<string>\",\n \"privilegedAccountSecretId\": \"<integer>\",\n \"runScript\": {\n  \"machineName\": \"<string>\",\n  \"odbcConnectionArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptArguments\": [\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n   }\n  ],\n  \"scriptId\": \"<integer>\",\n  \"scriptName\": \"<string>\",\n  \"serviceName\": \"<string>\"\n },\n \"secretDependencyStatus\": \"<boolean>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"settings\": [\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  },\n  {\n   \"changerSettingValue\": \"<string>\",\n   \"setting\": {\n    \"active\": \"<boolean>\",\n    \"canEdit\": \"<boolean>\",\n    \"canEditValue\": \"<boolean>\",\n    \"childSettings\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/SecretDependencySetting detected>\"\n     }\n    ],\n    \"defaultValue\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isVisibile\": \"<boolean>\",\n    \"parentSettingId\": \"<integer>\",\n    \"regexValidation\": \"<string>\",\n    \"settingName\": \"<string>\",\n    \"settingSectionId\": \"<integer>\",\n    \"settingType\": \"<integer>\",\n    \"subSettingSectionId\": \"<integer>\"\n   },\n   \"settingId\": \"<integer>\",\n   \"settingName\": \"<string>\",\n   \"settingValue\": \"<string>\"\n  }\n ],\n \"sortOrder\": \"<integer>\",\n \"sshKeySecretId\": \"<integer>\",\n \"sshKeySecretName\": \"<string>\",\n \"typeId\": \"<integer>\",\n \"typeName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Dependency Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-dependencies/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-dependencies",
								"templates"
							]
						},
						"description": "Get Dependency Templates"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Dependency Template array",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"active\": \"<boolean>\",\n  \"dependencyChangerId\": \"<integer>\",\n  \"dependencyTypeId\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n {\n  \"active\": \"<boolean>\",\n  \"dependencyChangerId\": \"<integer>\",\n  \"dependencyTypeId\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n }\n]"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-dependencies/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-dependencies",
										"templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Secret Dependencies"
		},
		{
			"name": "SecretExtensions",
			"item": [
				{
					"name": "Get AutoFill values for Url by SecretId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secretId\": \"<integer>\",\n    \"url\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-extensions/autofill-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-extensions",
								"autofill-values"
							]
						},
						"description": "Get AutoFill values (username and password) for Url by SecretId"
					},
					"response": [
						{
							"name": "Autofill values result object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"url\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/autofill-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"autofill-values"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"password\": \"<string>\",\n \"username\": \"<string>\",\n \"useSessionRecording\": \"<boolean>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"url\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/autofill-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"autofill-values"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"url\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/autofill-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"autofill-values"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\",\n    \"url\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/autofill-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"autofill-values"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search Secrets by Url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\""
						},
						"url": {
							"raw": "{{baseUrl}}/secret-extensions/search-by-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-extensions",
								"search-by-url"
							]
						},
						"description": "Search for Secrets that match a URL"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/search-by-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"search-by-url"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret search result object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/search-by-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"search-by-url"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"hasOwnerOrEditAccess\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"isButtonBound\": \"<boolean>\",\n  \"isFavoriteSecret\": \"<boolean>\",\n  \"isSystemFolder\": \"<boolean>\",\n  \"matchOrderType\": \"Loose\",\n  \"name\": \"<string>\",\n  \"redirectUrl\": \"<string>\",\n  \"requireComment\": \"<boolean>\",\n  \"resultPriority\": \"<integer>\",\n  \"secretTypeId\": \"<integer>\",\n  \"shouldRedirect\": \"<boolean>\"\n },\n {\n  \"hasOwnerOrEditAccess\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"isButtonBound\": \"<boolean>\",\n  \"isFavoriteSecret\": \"<boolean>\",\n  \"isSystemFolder\": \"<boolean>\",\n  \"matchOrderType\": \"Partial\",\n  \"name\": \"<string>\",\n  \"redirectUrl\": \"<string>\",\n  \"requireComment\": \"<boolean>\",\n  \"resultPriority\": \"<integer>\",\n  \"secretTypeId\": \"<integer>\",\n  \"shouldRedirect\": \"<boolean>\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/search-by-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"search-by-url"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/search-by-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"search-by-url"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-extensions/web-secret-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-extensions",
								"web-secret-templates"
							]
						},
						"description": "Get Secret Templates valid for web passwords"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/web-secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"web-secret-templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/web-secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"web-secret-templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "List of Secret Templates",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/web-secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"web-secret-templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"fields\": [\n   {\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Edit\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n   },\n   {\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"NotEditable\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n   }\n  ],\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n {\n  \"fields\": [\n   {\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n   },\n   {\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n   }\n  ],\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-extensions/web-secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-extensions",
										"web-secret-templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Specialized calls for Thycotic Secret Server Extensions. \r\n                   Thycotic may change the functionality or signatures under the secret-extensions route.\r\n                   Use at your own risk."
		},
		{
			"name": "SecretHooks",
			"item": [
				{
					"name": "Create Secret hook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"arguments\": \"<string>\",\n        \"database\": \"<string>\",\n        \"description\": \"<string>\",\n        \"eventActionId\": \"<integer>\",\n        \"failureMessage\": \"<string>\",\n        \"name\": \"<string>\",\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": \"<string>\",\n        \"prePostOption\": \"<string>\",\n        \"privilegedSecretId\": \"<integer>\",\n        \"scriptId\": \"<integer>\",\n        \"secretId\": \"<integer>\",\n        \"serverKeyDigest\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"sshKeySecretId\": \"<integer>\",\n        \"stopOnFailure\": \"<boolean>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hook"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Create Secret hook"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": \"<string>\",\n        \"database\": \"<string>\",\n        \"description\": \"<string>\",\n        \"eventActionId\": \"<integer>\",\n        \"failureMessage\": \"<string>\",\n        \"name\": \"<string>\",\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": \"<string>\",\n        \"prePostOption\": \"<string>\",\n        \"privilegedSecretId\": \"<integer>\",\n        \"scriptId\": \"<integer>\",\n        \"secretId\": \"<integer>\",\n        \"serverKeyDigest\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"sshKeySecretId\": \"<integer>\",\n        \"stopOnFailure\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": \"<string>\",\n        \"database\": \"<string>\",\n        \"description\": \"<string>\",\n        \"eventActionId\": \"<integer>\",\n        \"failureMessage\": \"<string>\",\n        \"name\": \"<string>\",\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": \"<string>\",\n        \"prePostOption\": \"<string>\",\n        \"privilegedSecretId\": \"<integer>\",\n        \"scriptId\": \"<integer>\",\n        \"secretId\": \"<integer>\",\n        \"serverKeyDigest\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"sshKeySecretId\": \"<integer>\",\n        \"stopOnFailure\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": \"<string>\",\n        \"database\": \"<string>\",\n        \"description\": \"<string>\",\n        \"eventActionId\": \"<integer>\",\n        \"failureMessage\": \"<string>\",\n        \"name\": \"<string>\",\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": \"<string>\",\n        \"prePostOption\": \"<string>\",\n        \"privilegedSecretId\": \"<integer>\",\n        \"scriptId\": \"<integer>\",\n        \"secretId\": \"<integer>\",\n        \"serverKeyDigest\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"sshKeySecretId\": \"<integer>\",\n        \"stopOnFailure\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Newly created Secret hook",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": \"<string>\",\n        \"database\": \"<string>\",\n        \"description\": \"<string>\",\n        \"eventActionId\": \"<integer>\",\n        \"failureMessage\": \"<string>\",\n        \"name\": \"<string>\",\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": \"<string>\",\n        \"prePostOption\": \"<string>\",\n        \"privilegedSecretId\": \"<integer>\",\n        \"scriptId\": \"<integer>\",\n        \"secretId\": \"<integer>\",\n        \"serverKeyDigest\": \"<string>\",\n        \"serverName\": \"<string>\",\n        \"sshKeySecretId\": \"<integer>\",\n        \"stopOnFailure\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"arguments\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"database\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventActionId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"failureMessage\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hookId\": \"<integer>\",\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"parameters\": [\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  },\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  }\n ],\n \"port\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"prePostOption\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"privilegedSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretHookId\": \"<integer>\",\n \"serverKeyDigest\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"serverName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sshKeySecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"status\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"stopOnFailure\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Update Secret Hook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"arguments\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"database\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventActionId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"failureMessage\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"prePostOption\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"privilegedSecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptTypeId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"serverKeyDigest\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"serverName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"sshKeySecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"stopOnFailure\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hook",
								":secretHookId"
							],
							"variable": [
								{
									"key": "secretHookId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretHookId"
								},
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Update Secret hook"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"database\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventActionId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"failureMessage\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"prePostOption\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"privilegedSecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptTypeId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"serverKeyDigest\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"serverName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"sshKeySecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"stopOnFailure\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret hook retrieved after updates",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"database\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventActionId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"failureMessage\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"prePostOption\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"privilegedSecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptTypeId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"serverKeyDigest\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"serverName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"sshKeySecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"stopOnFailure\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"arguments\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"database\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventActionId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"failureMessage\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hookId\": \"<integer>\",\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"parameters\": [\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  },\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  }\n ],\n \"port\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"prePostOption\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"privilegedSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretHookId\": \"<integer>\",\n \"serverKeyDigest\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"serverName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sshKeySecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"status\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"stopOnFailure\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"database\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventActionId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"failureMessage\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"prePostOption\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"privilegedSecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptTypeId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"serverKeyDigest\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"serverName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"sshKeySecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"stopOnFailure\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"arguments\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"database\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"eventActionId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"failureMessage\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"parameters\": [\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            },\n            {\n                \"parameterName\": \"<string>\",\n                \"parameterType\": \"<string>\",\n                \"parameterValue\": \"<string>\"\n            }\n        ],\n        \"port\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"prePostOption\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"privilegedSecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"scriptTypeId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"serverKeyDigest\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"serverName\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sortOrder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"sshKeySecretId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"status\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"stopOnFailure\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Secret Hook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hook",
								":secretHookId"
							],
							"variable": [
								{
									"key": "secretHookId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretHookId"
								},
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Delete Secret Hook"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Success or failure",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret hook details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hook/get/:secretHookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hook",
								"get",
								":secretHookId"
							],
							"variable": [
								{
									"key": "secretHookId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretHookId"
								},
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Get Secret hook details"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/get/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"get",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/get/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"get",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/get/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"get",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret hook details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/get/:secretHookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"get",
										":secretHookId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "secretHookId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"arguments\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"database\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventActionId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"failureMessage\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hookId\": \"<integer>\",\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"parameters\": [\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  },\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  }\n ],\n \"port\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"prePostOption\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"privilegedSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretHookId\": \"<integer>\",\n \"serverKeyDigest\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"serverName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sshKeySecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"status\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"stopOnFailure\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Stub Hook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hook/stub/:scriptId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hook",
								"stub",
								":scriptId"
							],
							"variable": [
								{
									"key": "scriptId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) scriptId"
								},
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Get stub for a new Secret hook"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/stub/:scriptId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"stub",
										":scriptId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "scriptId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/stub/:scriptId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"stub",
										":scriptId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "scriptId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Stub for a new Secret hook",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/stub/:scriptId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"stub",
										":scriptId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "scriptId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"arguments\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"database\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventActionId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"failureMessage\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hookId\": \"<integer>\",\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"parameters\": [\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  },\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  }\n ],\n \"port\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"prePostOption\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"privilegedSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretHookId\": \"<integer>\",\n \"serverKeyDigest\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"serverName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sshKeySecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"status\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"stopOnFailure\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hook/stub/:scriptId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hook",
										"stub",
										":scriptId"
									],
									"variable": [
										{
											"key": "secretId"
										},
										{
											"key": "scriptId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Hooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-detail/:secretId/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-detail",
								":secretId",
								"hooks"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) secretId"
								}
							]
						},
						"description": "Get all of the hooks for the specified secret"
					},
					"response": [
						{
							"name": "A collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hooks"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"arguments\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"database\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"eventActionId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"failureMessage\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hookId\": \"<integer>\",\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"parameters\": [\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  },\n  {\n   \"parameterName\": \"<string>\",\n   \"parameterType\": \"<string>\",\n   \"parameterValue\": \"<string>\"\n  }\n ],\n \"port\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"prePostOption\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"privilegedSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"scriptTypeId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"secretHookId\": \"<integer>\",\n \"serverKeyDigest\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"serverName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sortOrder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"sshKeySecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"status\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"stopOnFailure\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hooks"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hooks"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-detail/:secretId/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-detail",
										":secretId",
										"hooks"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Secret hooks"
		},
		{
			"name": "SecretPermissions",
			"item": [
				{
					"name": "Search Secret Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-permissions?filter.domainName=<string>&filter.groupId=<integer>&filter.groupName=<string>&filter.secretId=<integer>&filter.userId=<integer>&filter.userName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions"
							],
							"query": [
								{
									"key": "filter.domainName",
									"value": "<string>",
									"description": "DomainName"
								},
								{
									"key": "filter.groupId",
									"value": "<integer>",
									"description": "Filter by group ID"
								},
								{
									"key": "filter.groupName",
									"value": "<string>",
									"description": "GroupName"
								},
								{
									"key": "filter.secretId",
									"value": "<integer>",
									"description": "Filter by secret ID"
								},
								{
									"key": "filter.userId",
									"value": "<integer>",
									"description": "Filter by user ID"
								},
								{
									"key": "filter.userName",
									"value": "<string>",
									"description": "UserName"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secret permissions"
					},
					"response": [
						{
							"name": "Secret permissions search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions?filter.domainName=<string>&filter.groupId=<integer>&filter.groupName=<string>&filter.secretId=<integer>&filter.userId=<integer>&filter.userName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									],
									"query": [
										{
											"key": "filter.domainName",
											"value": "<string>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupName",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "filter.userName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"knownAs\": \"<string>\",\n   \"secretAccessRoleId\": \"<integer>\",\n   \"secretAccessRoleName\": \"<string>\",\n   \"secretId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"id\": \"<integer>\",\n   \"knownAs\": \"<string>\",\n   \"secretAccessRoleId\": \"<integer>\",\n   \"secretAccessRoleName\": \"<string>\",\n   \"secretId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions?filter.domainName=<string>&filter.groupId=<integer>&filter.groupName=<string>&filter.secretId=<integer>&filter.userId=<integer>&filter.userName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									],
									"query": [
										{
											"key": "filter.domainName",
											"value": "<string>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupName",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "filter.userName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions?filter.domainName=<string>&filter.groupId=<integer>&filter.groupName=<string>&filter.secretId=<integer>&filter.userId=<integer>&filter.userName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									],
									"query": [
										{
											"key": "filter.domainName",
											"value": "<string>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupName",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "filter.userName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions?filter.domainName=<string>&filter.groupId=<integer>&filter.groupName=<string>&filter.secretId=<integer>&filter.userId=<integer>&filter.userName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									],
									"query": [
										{
											"key": "filter.domainName",
											"value": "<string>"
										},
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupName",
											"value": "<string>"
										},
										{
											"key": "filter.secretId",
											"value": "<integer>"
										},
										{
											"key": "filter.userId",
											"value": "<integer>"
										},
										{
											"key": "filter.userName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret Permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domainName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions"
							]
						},
						"description": "Create a new secret permission"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret permission object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"knownAs\": \"<string>\",\n \"secretAccessRoleId\": \"<integer>\",\n \"secretAccessRoleName\": \"<string>\",\n \"secretId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"secretAccessRoleName\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Permission",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-permissions/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive permissions in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret permission ID"
								}
							]
						},
						"description": "Get a single secret permission by ID"
					},
					"response": [
						{
							"name": "Secret permission object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"knownAs\": \"<string>\",\n \"secretAccessRoleId\": \"<integer>\",\n \"secretAccessRoleName\": \"<string>\",\n \"secretId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Permission",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-permissions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret permission ID"
								}
							]
						},
						"description": "Update a single secret permission by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret permission object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretAccessRoleName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"knownAs\": \"<string>\",\n \"secretAccessRoleId\": \"<integer>\",\n \"secretAccessRoleName\": \"<string>\",\n \"secretId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Secret Permission",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-permissions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret permission ID"
								}
							]
						},
						"description": "Delete a secret permission by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Permission Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-permissions/stub?secretId=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-permissions",
								"stub"
							],
							"query": [
								{
									"key": "secretId",
									"value": "<integer>",
									"description": "(Required) Options for generating a secret permission stub"
								}
							]
						},
						"description": "Return the default values for a new secret permission"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/stub?secretId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										"stub"
									],
									"query": [
										{
											"key": "secretId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/stub?secretId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										"stub"
									],
									"query": [
										{
											"key": "secretId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/stub?secretId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										"stub"
									],
									"query": [
										{
											"key": "secretId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret permission object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-permissions/stub?secretId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-permissions",
										"stub"
									],
									"query": [
										{
											"key": "secretId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groupId\": \"<integer>\",\n \"groupName\": \"<string>\",\n \"id\": \"<integer>\",\n \"knownAs\": \"<string>\",\n \"secretAccessRoleId\": \"<integer>\",\n \"secretAccessRoleName\": \"<string>\",\n \"secretId\": \"<integer>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain secret permissions"
		},
		{
			"name": "Secrets",
			"item": [
				{
					"name": "Search Secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets"
							],
							"query": [
								{
									"key": "filter.allowDoubleLocks",
									"value": "<boolean>",
									"description": "Whether to allow DoubleLocks as part of the search. True by default"
								},
								{
									"key": "filter.doNotCalculateTotal",
									"value": "<boolean>",
									"description": "Whether to return the total number of secrets matching the filters. False by default"
								},
								{
									"key": "filter.doubleLockId",
									"value": "<integer>",
									"description": "Only include Secrets with this DoubleLock ID assigned in the search results"
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedTypeId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain extended type"
								},
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "Return only secrets within a certain folder"
								},
								{
									"key": "filter.heartbeatStatus",
									"value": "<string>",
									"description": "Return only secrets with a certain heartbeat status"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "Whether to include active secrets in results (when excluded equals true)"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secrets in results"
								},
								{
									"key": "filter.includeRestricted",
									"value": "<boolean>",
									"description": "Whether to include restricted secrets in results"
								},
								{
									"key": "filter.includeSubFolders",
									"value": "<boolean>",
									"description": "Whether to include secrets in subfolders of the specified folder"
								},
								{
									"key": "filter.isExactMatch",
									"value": "<boolean>",
									"description": "Whether to do an exact match of the search text or a partial match"
								},
								{
									"key": "filter.onlyRPCEnabled",
									"value": "<boolean>",
									"description": "Whether to only include secrets whose template has Remote Password Changing enabled"
								},
								{
									"key": "filter.onlySharedWithMe",
									"value": "<boolean>",
									"description": "When true only Secrets where you are not the owner and the Secret was shared explicitly with your user id will be returned."
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.permissionRequired",
									"value": "<string>",
									"description": "Specify whether to filter by List, View, Edit, or Owner permission. Default is List. (List = 1, View = 2, Edit = 3, Owner = 4"
								},
								{
									"key": "filter.scope",
									"value": "<string>",
									"description": "Specify whether to search AllSecrets, Recent, or Favorites (All = 1, Recent = 2,Favorites = 3"
								},
								{
									"key": "filter.searchField",
									"value": "<string>",
									"description": "Field to search"
								},
								{
									"key": "filter.searchFieldSlug",
									"value": "<string>",
									"description": "Field-slug to search. This will override SearchField."
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "filter.secretTemplateId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain template"
								},
								{
									"key": "filter.siteId",
									"value": "<integer>",
									"description": "Return only secrets within a certain site"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secrets"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"AccountLockedOut\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"Disabled\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"secretTemplateId\": \"<integer>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets"
							]
						},
						"description": "Create a new secret"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"secretTemplateId\": \"<integer>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"secretTemplateId\": \"<integer>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"secretTemplateId\": \"<integer>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"active\": \"<boolean>\",\n \"allowOwnersUnrestrictedSshCommands\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"autoChangeNextPassword\": \"<string>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutChangePasswordEnabled\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"checkOutIntervalMinutes\": \"<integer>\",\n \"checkOutMinutesRemaining\": \"<integer>\",\n \"checkOutUserDisplayName\": \"<string>\",\n \"checkOutUserId\": \"<integer>\",\n \"doubleLockId\": \"<integer>\",\n \"enableInheritPermissions\": \"<boolean>\",\n \"enableInheritSecretPolicy\": \"<boolean>\",\n \"failedPasswordChangeAttempts\": \"<integer>\",\n \"folderId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isDoubleLock\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"items\": [\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  },\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  }\n ],\n \"lastHeartBeatCheck\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"launcherConnectAsSecretId\": \"<integer>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"passwordTypeWebScriptId\": \"<integer>\",\n \"proxyEnabled\": \"<boolean>\",\n \"requiresApprovalForAccess\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"restrictSshCommands\": \"<boolean>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"sessionRecordingEnabled\": \"<boolean>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"secretTemplateId\": \"<integer>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secrets in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get a single secret by ID"
					},
					"response": [
						{
							"name": "Secret object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"active\": \"<boolean>\",\n \"allowOwnersUnrestrictedSshCommands\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"autoChangeNextPassword\": \"<string>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutChangePasswordEnabled\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"checkOutIntervalMinutes\": \"<integer>\",\n \"checkOutMinutesRemaining\": \"<integer>\",\n \"checkOutUserDisplayName\": \"<string>\",\n \"checkOutUserId\": \"<integer>\",\n \"doubleLockId\": \"<integer>\",\n \"enableInheritPermissions\": \"<boolean>\",\n \"enableInheritSecretPolicy\": \"<boolean>\",\n \"failedPasswordChangeAttempts\": \"<integer>\",\n \"folderId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isDoubleLock\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"items\": [\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  },\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  }\n ],\n \"lastHeartBeatCheck\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"AccountLockedOut\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"launcherConnectAsSecretId\": \"<integer>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"passwordTypeWebScriptId\": \"<integer>\",\n \"proxyEnabled\": \"<boolean>\",\n \"requiresApprovalForAccess\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"restrictSshCommands\": \"<boolean>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"sessionRecordingEnabled\": \"<boolean>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"accessRequestWorkflowMapId\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"autoChangeNextPassword\": \"<string>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"newPassword\": \"<string>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Update a single secret by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"accessRequestWorkflowMapId\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"autoChangeNextPassword\": \"<string>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"newPassword\": \"<string>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"accessRequestWorkflowMapId\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"autoChangeNextPassword\": \"<string>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"newPassword\": \"<string>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"accessRequestWorkflowMapId\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"autoChangeNextPassword\": \"<string>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"newPassword\": \"<string>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"active\": \"<boolean>\",\n \"allowOwnersUnrestrictedSshCommands\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"autoChangeNextPassword\": \"<string>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutChangePasswordEnabled\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"checkOutIntervalMinutes\": \"<integer>\",\n \"checkOutMinutesRemaining\": \"<integer>\",\n \"checkOutUserDisplayName\": \"<string>\",\n \"checkOutUserId\": \"<integer>\",\n \"doubleLockId\": \"<integer>\",\n \"enableInheritPermissions\": \"<boolean>\",\n \"enableInheritSecretPolicy\": \"<boolean>\",\n \"failedPasswordChangeAttempts\": \"<integer>\",\n \"folderId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isDoubleLock\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"items\": [\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  },\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  }\n ],\n \"lastHeartBeatCheck\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"AccountLockedOut\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"launcherConnectAsSecretId\": \"<integer>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"passwordTypeWebScriptId\": \"<integer>\",\n \"proxyEnabled\": \"<boolean>\",\n \"requiresApprovalForAccess\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"restrictSshCommands\": \"<boolean>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"sessionRecordingEnabled\": \"<boolean>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"items\": [\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        },\n        {\n            \"fieldDescription\": \"<string>\",\n            \"fieldId\": \"<integer>\",\n            \"fieldName\": \"<string>\",\n            \"fileAttachmentId\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"isFile\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"itemId\": \"<integer>\",\n            \"itemValue\": \"<string>\",\n            \"slug\": \"<string>\"\n        }\n    ],\n    \"accessRequestWorkflowMapId\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"autoChangeEnabled\": \"<boolean>\",\n    \"autoChangeNextPassword\": \"<string>\",\n    \"checkOutChangePasswordEnabled\": \"<boolean>\",\n    \"checkOutEnabled\": \"<boolean>\",\n    \"checkOutIntervalMinutes\": \"<integer>\",\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"enableInheritPermissions\": \"<boolean>\",\n    \"enableInheritSecretPolicy\": \"<boolean>\",\n    \"folderId\": \"<integer>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"launcherConnectAsSecretId\": \"<integer>\",\n    \"newPassword\": \"<string>\",\n    \"passwordTypeWebScriptId\": \"<integer>\",\n    \"proxyEnabled\": \"<boolean>\",\n    \"requiresComment\": \"<boolean>\",\n    \"secretPolicyId\": \"<integer>\",\n    \"sessionRecordingEnabled\": \"<boolean>\",\n    \"siteId\": \"<integer>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Secret",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Delete a secret by ID"
					},
					"response": [
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Change Secret Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\",\n        \"passphrase\": \"<string>\",\n        \"privateKey\": \"<string>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"change-password"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Change a secret's password"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\",\n        \"passphrase\": \"<string>\",\n        \"privateKey\": \"<string>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"change-password"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\",\n        \"passphrase\": \"<string>\",\n        \"privateKey\": \"<string>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"change-password"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret summary object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\",\n        \"passphrase\": \"<string>\",\n        \"privateKey\": \"<string>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"change-password"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"createDate\": \"<dateTime>\",\n \"daysUntilExpiration\": \"<integer>\",\n \"doubleLockEnabled\": \"<boolean>\",\n \"extendedFields\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folderId\": \"<integer>\",\n \"hidePassword\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"inheritsPermissions\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"lastAccessed\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"requiresApproval\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"sshKeyArgs\": {\n        \"generatePassphrase\": \"<boolean>\",\n        \"generateSshKeys\": \"<boolean>\",\n        \"passphrase\": \"<string>\",\n        \"privateKey\": \"<string>\"\n    },\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"change-password"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Check In Secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/check-in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"check-in"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Check in a secret"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-in"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-in"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-in"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret summary object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-in"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"createDate\": \"<dateTime>\",\n \"daysUntilExpiration\": \"<integer>\",\n \"doubleLockEnabled\": \"<boolean>\",\n \"extendedFields\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folderId\": \"<integer>\",\n \"hidePassword\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"inheritsPermissions\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"lastAccessed\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"requiresApproval\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"siteId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Check Out Secret",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/check-out",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"check-out"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Check Out a secret"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-out",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-out"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret Response Code Model object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-out",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-out"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-out",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-out"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/check-out",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"check-out"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update User Secret Email Settings",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"sendEmailWhenChanged\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenHeartbeatFails\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenViewed\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"email"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update User Secret Email Settings"
					},
					"response": [
						{
							"name": "SecretDetailSettingsViewModel",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"sendEmailWhenChanged\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenHeartbeatFails\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenViewed\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"email"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"autoChangePassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"canGenerateSshKey\": \"<boolean>\",\n \"enableInheritSecretPolicy\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"expiration\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"fields\": [\n  {\n   \"description\": \"<string>\",\n   \"dropDownOptions\": [\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    },\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    }\n   ],\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"type\": \"Notes\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"dropDownOptions\": [\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    },\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    }\n   ],\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"type\": \"DropDown\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"heartbeatEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"id\": \"<integer>\",\n \"isFavorite\": \"<boolean>\",\n \"isOutOfSync\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"isTotpEnabled\": \"<boolean>\",\n \"lastHeartBeatCheck\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastHeartBeatStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Pending\"\n },\n \"launchers\": [\n  {\n   \"imagePath\": \"<string>\",\n   \"isRecorded\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"typeId\": \"<integer>\"\n  },\n  {\n   \"imagePath\": \"<string>\",\n   \"isRecorded\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"typeId\": \"<integer>\"\n  }\n ],\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"outOfSyncReason\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"secretPolicy\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"site\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"slugPrivateKey\": \"<string>\",\n \"slugPublicKey\": \"<string>\",\n \"template\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"totpPasswordSlug\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"sendEmailWhenChanged\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenHeartbeatFails\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenViewed\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"email"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"sendEmailWhenChanged\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenHeartbeatFails\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenViewed\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"email"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"sendEmailWhenChanged\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenHeartbeatFails\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sendEmailWhenViewed\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"email"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Expire Secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/expire",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"expire"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Expire a secret"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"expire"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"expire"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"expire"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret summary object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"expire"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"createDate\": \"<dateTime>\",\n \"daysUntilExpiration\": \"<integer>\",\n \"doubleLockEnabled\": \"<boolean>\",\n \"extendedFields\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folderId\": \"<integer>\",\n \"hidePassword\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"inheritsPermissions\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"lastAccessed\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"requiresApproval\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"siteId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Field",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/fields/:slug?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"fields",
								":slug"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secrets in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								},
								{
									"key": "slug",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Secret field name"
								}
							]
						},
						"description": "Get a secret data field"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret field value. If the field is a file attachment, the content type will be `application/octet-stream` and the response body will be the file contents.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Field",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"fileAttachment\": \"<binary>\",\n    \"fileName\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\",\n    \"value\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/fields/:slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"fields",
								":slug"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								},
								{
									"key": "slug",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Secret field name"
								}
							]
						},
						"description": "Update a secret data field"
					},
					"response": [
						{
							"name": "The updated value, or 'true' if the field is a file attachment",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"fileAttachment\": \"<binary>\",\n    \"fileName\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\",\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"fileAttachment\": \"<binary>\",\n    \"fileName\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\",\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"fileAttachment\": \"<binary>\",\n    \"fileName\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\",\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"fileAttachment\": \"<binary>\",\n    \"fileName\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\",\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret General Information",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"generateSshKeys\": \"<boolean>\",\n        \"heartbeatEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"isOutOfSync\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"secretFields\": [\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"site\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"template\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/general",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"general"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update Secret General Information"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"generateSshKeys\": \"<boolean>\",\n        \"heartbeatEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"isOutOfSync\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"secretFields\": [\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"site\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"template\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"generateSshKeys\": \"<boolean>\",\n        \"heartbeatEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"isOutOfSync\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"secretFields\": [\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"site\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"template\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"generateSshKeys\": \"<boolean>\",\n        \"heartbeatEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"isOutOfSync\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"secretFields\": [\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"site\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"template\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret General Information",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"enableInheritSecretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"folder\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"generateSshKeys\": \"<boolean>\",\n        \"heartbeatEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"isOutOfSync\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"secretFields\": [\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            },\n            {\n                \"dirty\": \"<boolean>\",\n                \"slug\": \"<string>\",\n                \"value\": \"<string>\"\n            }\n        ],\n        \"secretPolicy\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"site\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"template\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"autoChangePassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"canGenerateSshKey\": \"<boolean>\",\n \"enableInheritSecretPolicy\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"expiration\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"fields\": [\n  {\n   \"description\": \"<string>\",\n   \"dropDownOptions\": [\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    },\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    }\n   ],\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"type\": \"DropDown\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"dropDownOptions\": [\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    },\n    {\n     \"fieldValue\": \"<string>\",\n     \"id\": \"<integer>\"\n    }\n   ],\n   \"hasHistory\": \"<boolean>\",\n   \"helpLink\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"hideOnView\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"label\": \"<string>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"placeholder\": \"<string>\",\n   \"readOnly\": \"<boolean>\",\n   \"readOnlyReason\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"type\": \"DropDown\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folder\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"heartbeatEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"id\": \"<integer>\",\n \"isFavorite\": \"<boolean>\",\n \"isOutOfSync\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"isTotpEnabled\": \"<boolean>\",\n \"lastHeartBeatCheck\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<dateTime>\"\n },\n \"lastHeartBeatStatus\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"Failed\"\n },\n \"launchers\": [\n  {\n   \"imagePath\": \"<string>\",\n   \"isRecorded\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"typeId\": \"<integer>\"\n  },\n  {\n   \"imagePath\": \"<string>\",\n   \"isRecorded\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"typeId\": \"<integer>\"\n  }\n ],\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"outOfSyncReason\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"secretPolicy\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"site\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"slugPrivateKey\": \"<string>\",\n \"slugPublicKey\": \"<string>\",\n \"template\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"totpPasswordSlug\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Run Secret Heartbeat",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/heartbeat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"heartbeat"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Check if secret is still valid"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/heartbeat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"heartbeat"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/heartbeat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"heartbeat"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/heartbeat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"heartbeat"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret summary object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/heartbeat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"heartbeat"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"createDate\": \"<dateTime>\",\n \"daysUntilExpiration\": \"<integer>\",\n \"doubleLockEnabled\": \"<boolean>\",\n \"extendedFields\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folderId\": \"<integer>\",\n \"hidePassword\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"inheritsPermissions\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"lastAccessed\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"requiresApproval\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"siteId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Restricted Secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/restricted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"restricted"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get a restricted secret"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"active\": \"<boolean>\",\n \"allowOwnersUnrestrictedSshCommands\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"autoChangeNextPassword\": \"<string>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutChangePasswordEnabled\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"checkOutIntervalMinutes\": \"<integer>\",\n \"checkOutMinutesRemaining\": \"<integer>\",\n \"checkOutUserDisplayName\": \"<string>\",\n \"checkOutUserId\": \"<integer>\",\n \"doubleLockId\": \"<integer>\",\n \"enableInheritPermissions\": \"<boolean>\",\n \"enableInheritSecretPolicy\": \"<boolean>\",\n \"failedPasswordChangeAttempts\": \"<integer>\",\n \"folderId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isDoubleLock\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"items\": [\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  },\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  }\n ],\n \"lastHeartBeatCheck\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"AccountLockedOut\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"launcherConnectAsSecretId\": \"<integer>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"passwordTypeWebScriptId\": \"<integer>\",\n \"proxyEnabled\": \"<boolean>\",\n \"requiresApprovalForAccess\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"restrictSshCommands\": \"<boolean>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"sessionRecordingEnabled\": \"<boolean>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Restricted Secret Field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"<string>\",\n    \"doubleLockPassword\": \"<string>\",\n    \"forceCheckIn\": \"<boolean>\",\n    \"includeInactive\": \"<boolean>\",\n    \"newPassword\": \"<string>\",\n    \"ticketNumber\": \"<string>\",\n    \"ticketSystemId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/restricted/fields/:slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"restricted",
								"fields",
								":slug"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								},
								{
									"key": "slug",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Secret field name"
								}
							]
						},
						"description": "Get a restricted secret data field"
					},
					"response": [
						{
							"name": "Secret field value. If the field is a file attachment, the content type will be `application/octet-stream` and the response body will be the file contents.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/restricted/fields/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"restricted",
										"fields",
										":slug"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "slug"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update which Secrets are available for RPC scripts",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"resetSecretIds\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/rpc-script-secrets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"rpc-script-secrets"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update which Secrets are available for RPC scripts"
					},
					"response": [
						{
							"name": "SecretDetailRpcViewModel",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"resetSecretIds\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/rpc-script-secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"rpc-script-secrets"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"autoChangeEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"autoChangeSchedule\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": {\n   \"changeEveryMonths\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"changeEveryMonthsDayNumber\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"changeEveryMonthsInstance\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"changeEveryMonthsInstanceTarget\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<string>\"\n   },\n   \"days\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"friday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"monday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"monthScheduleType\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"Date\"\n   },\n   \"numberMonthlyDay\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   },\n   \"onlyChangeIfExpired\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"saturday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"scheduleType\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"Weekly\"\n   },\n   \"startingOn\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<dateTime>\"\n   },\n   \"sunday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"thursday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"tuesday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"wednesday\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<boolean>\"\n   },\n   \"weeks\": {\n    \"description\": \"<string>\",\n    \"hasHistory\": \"<boolean>\",\n    \"helpLink\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"hideOnView\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"name\": \"<string>\",\n    \"placeholder\": \"<string>\",\n    \"readOnly\": \"<boolean>\",\n    \"readOnlyReason\": \"<string>\",\n    \"value\": \"<integer>\"\n   }\n  }\n },\n \"canEnterNextPassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"expireText\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hasNextPassphrase\": \"<boolean>\",\n \"hasNextPassword\": \"<boolean>\",\n \"hasNextPrivateKey\": \"<boolean>\",\n \"isValidForSshKeyRpc\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"passwordStatus\": {\n  \"failedAttempts\": \"<integer>\",\n  \"lastRpcDate\": \"<dateTime>\",\n  \"nextRpcDate\": \"<dateTime>\",\n  \"rpcMessage\": \"<string>\",\n  \"status\": \"Success\"\n },\n \"passwordTypeId\": \"<integer>\",\n \"passwordTypeWebScriptId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"privilegedAccountSecretId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"privilegedAccountSecretName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"resetSecrets\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"folderName\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"secretTemplateName\": \"<string>\"\n   },\n   {\n    \"folderName\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"secretId\": \"<integer>\",\n    \"secretName\": \"<string>\",\n    \"secretTemplateName\": \"<string>\"\n   }\n  ]\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"resetSecretIds\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/rpc-script-secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"rpc-script-secrets"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"resetSecretIds\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/rpc-script-secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"rpc-script-secrets"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"resetSecretIds\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/rpc-script-secrets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"rpc-script-secrets"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Security Approval Options",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"approvers\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        },\n        \"requireApprovalType\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"workflowTemplateId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/security-approval",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"security-approval"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update Secret Security Approval Options"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"approvers\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        },\n        \"requireApprovalType\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"workflowTemplateId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-approval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-approval"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"approvers\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        },\n        \"requireApprovalType\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"workflowTemplateId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-approval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-approval"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "SecretDetailSecurityViewModel",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"approvers\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        },\n        \"requireApprovalType\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"workflowTemplateId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-approval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-approval"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowOwnersUnrestrictedSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"approvalWorkflow\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": {\n   \"active\": \"<boolean>\",\n   \"configurationJson\": \"<string>\",\n   \"description\": \"<string>\",\n   \"expirationMinutes\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"reusable\": \"<boolean>\",\n   \"typeName\": \"<string>\",\n   \"workflowTemplateId\": \"<integer>\",\n   \"workflowType\": \"AccessRequest\"\n  }\n },\n \"approvalWorkflowOptions\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   },\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   }\n  ]\n },\n \"approvers\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   },\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   }\n  ]\n },\n \"availableDoubleLocks\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   },\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   }\n  ]\n },\n \"availableRequireApprovalTypes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   \"None\",\n   \"RequireApproval\"\n  ]\n },\n \"checkOutChangePasswordEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutDefaultIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutIntervalMinutes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hideLauncherPassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"isDoubleLock\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"passwordRequirements\": {\n  \"requirements\": [\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   },\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   }\n  ],\n  \"validateOnCreate\": \"<boolean>\",\n  \"validateOnEdit\": \"<boolean>\"\n },\n \"proxyEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"requireApprovalType\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"None\"\n },\n \"requiresComment\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"restrictedSshCommandCount\": \"<integer>\",\n \"restrictSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"sessionRecordingEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"approvers\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": [\n                \"<integer>\",\n                \"<integer>\"\n            ]\n        },\n        \"requireApprovalType\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"workflowTemplateId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-approval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-approval"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Security Checkout Options",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"checkOutChangePasswordEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutIntervalMinutes\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/security-checkout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"security-checkout"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update Secret Security Checkout Options"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"checkOutChangePasswordEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutIntervalMinutes\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-checkout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-checkout"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"checkOutChangePasswordEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutIntervalMinutes\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-checkout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-checkout"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"checkOutChangePasswordEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutIntervalMinutes\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-checkout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-checkout"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SecretDetailSecurityViewModel",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"checkOutChangePasswordEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"checkOutIntervalMinutes\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-checkout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-checkout"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowOwnersUnrestrictedSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"approvalWorkflow\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": {\n   \"active\": \"<boolean>\",\n   \"configurationJson\": \"<string>\",\n   \"description\": \"<string>\",\n   \"expirationMinutes\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"reusable\": \"<boolean>\",\n   \"typeName\": \"<string>\",\n   \"workflowTemplateId\": \"<integer>\",\n   \"workflowType\": \"AccessRequest\"\n  }\n },\n \"approvalWorkflowOptions\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   },\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   }\n  ]\n },\n \"approvers\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   },\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   }\n  ]\n },\n \"availableDoubleLocks\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   },\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   }\n  ]\n },\n \"availableRequireApprovalTypes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   \"None\",\n   \"RequireApproval\"\n  ]\n },\n \"checkOutChangePasswordEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutDefaultIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutIntervalMinutes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hideLauncherPassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"isDoubleLock\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"passwordRequirements\": {\n  \"requirements\": [\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   },\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   }\n  ],\n  \"validateOnCreate\": \"<boolean>\",\n  \"validateOnEdit\": \"<boolean>\"\n },\n \"proxyEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"requireApprovalType\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"None\"\n },\n \"requiresComment\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"restrictedSshCommandCount\": \"<integer>\",\n \"restrictSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"sessionRecordingEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						}
					]
				},
				{
					"name": "Update Secret Security General Options",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"doubleLockId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"enableDoubleLock\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"hideLauncherPassword\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"proxyEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"requiresComment\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sessionRecordingEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/security-general",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"security-general"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Update Secret Security General Options"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"doubleLockId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"enableDoubleLock\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"hideLauncherPassword\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"proxyEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"requiresComment\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sessionRecordingEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SecretDetailSecurityViewModel",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"doubleLockId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"enableDoubleLock\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"hideLauncherPassword\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"proxyEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"requiresComment\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sessionRecordingEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"allowOwnersUnrestrictedSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"approvalWorkflow\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": {\n   \"active\": \"<boolean>\",\n   \"configurationJson\": \"<string>\",\n   \"description\": \"<string>\",\n   \"expirationMinutes\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"reusable\": \"<boolean>\",\n   \"typeName\": \"<string>\",\n   \"workflowTemplateId\": \"<integer>\",\n   \"workflowType\": \"AccessRequest\"\n  }\n },\n \"approvalWorkflowOptions\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   },\n   {\n    \"active\": \"<boolean>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"reusable\": \"<boolean>\",\n    \"typeName\": \"<string>\",\n    \"workflowTemplateId\": \"<integer>\",\n    \"workflowType\": \"AccessRequest\"\n   }\n  ]\n },\n \"approvers\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   },\n   {\n    \"displayName\": \"<string>\",\n    \"groupId\": \"<integer>\",\n    \"isGroup\": \"<boolean>\"\n   }\n  ]\n },\n \"availableDoubleLocks\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   },\n   {\n    \"fieldValue\": \"<string>\",\n    \"id\": \"<integer>\"\n   }\n  ]\n },\n \"availableRequireApprovalTypes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": [\n   \"None\",\n   \"RequireApproval\"\n  ]\n },\n \"checkOutChangePasswordEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutDefaultIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"checkOutIntervalDisplay\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"checkOutIntervalMinutes\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockId\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<integer>\"\n },\n \"doubleLockName\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"hideLauncherPassword\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"isDoubleLock\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"passwordRequirements\": {\n  \"requirements\": [\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   },\n   {\n    \"fieldDisplayName\": \"<string>\",\n    \"fieldName\": \"<string>\",\n    \"isCustom\": \"<boolean>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordRequirementName\": \"<string>\"\n   }\n  ],\n  \"validateOnCreate\": \"<boolean>\",\n  \"validateOnEdit\": \"<boolean>\"\n },\n \"proxyEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"requireApprovalType\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"None\"\n },\n \"requiresComment\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"restrictedSshCommandCount\": \"<integer>\",\n \"restrictSshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"sessionRecordingEnabled\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"doubleLockId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"enableDoubleLock\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"hideLauncherPassword\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"proxyEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"requiresComment\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sessionRecordingEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"doubleLockId\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<integer>\"\n        },\n        \"enableDoubleLock\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"hideLauncherPassword\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"proxyEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"requiresComment\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"sessionRecordingEnabled\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/security-general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"security-general"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/:id/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":id",
								"summary"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Get the summary for a secret"
					},
					"response": [
						{
							"name": "Secret summary object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"createDate\": \"<dateTime>\",\n \"daysUntilExpiration\": \"<integer>\",\n \"doubleLockEnabled\": \"<boolean>\",\n \"extendedFields\": [\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"folderId\": \"<integer>\",\n \"hidePassword\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"inheritsPermissions\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"lastAccessed\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"Success\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"requiresApproval\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Favorite a Secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isFavorite\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/:secretId/favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								":secretId",
								"favorite"
							],
							"variable": [
								{
									"key": "secretId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) The secret to favorite or unfavorite."
								}
							]
						},
						"description": "Used to favorite or unfavorite an individual Secret"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isFavorite\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:secretId/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":secretId",
										"favorite"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Whether or not the secret is now favorited by the user.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isFavorite\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:secretId/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":secretId",
										"favorite"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isFavorite\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:secretId/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":secretId",
										"favorite"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isFavorite\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/:secretId/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										":secretId",
										"favorite"
									],
									"variable": [
										{
											"key": "secretId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List a User's Favorite Secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"favorite"
							]
						},
						"description": "Returns a list of secrets which the user has favorited."
					},
					"response": [
						{
							"name": "Identifying information for each secret favorited",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"favorite"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"folderId\": \"<integer>\",\n  \"folderPath\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"secretName\": \"<string>\"\n },\n {\n  \"folderId\": \"<integer>\",\n  \"folderPath\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"secretName\": \"<string>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"favorite"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"favorite"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/favorite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"favorite"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/lookup?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"lookup"
							],
							"query": [
								{
									"key": "filter.allowDoubleLocks",
									"value": "<boolean>",
									"description": "Whether to allow DoubleLocks as part of the search. True by default"
								},
								{
									"key": "filter.doNotCalculateTotal",
									"value": "<boolean>",
									"description": "Whether to return the total number of secrets matching the filters. False by default"
								},
								{
									"key": "filter.doubleLockId",
									"value": "<integer>",
									"description": "Only include Secrets with this DoubleLock ID assigned in the search results"
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedTypeId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain extended type"
								},
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "Return only secrets within a certain folder"
								},
								{
									"key": "filter.heartbeatStatus",
									"value": "<string>",
									"description": "Return only secrets with a certain heartbeat status"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "Whether to include active secrets in results (when excluded equals true)"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secrets in results"
								},
								{
									"key": "filter.includeRestricted",
									"value": "<boolean>",
									"description": "Whether to include restricted secrets in results"
								},
								{
									"key": "filter.includeSubFolders",
									"value": "<boolean>",
									"description": "Whether to include secrets in subfolders of the specified folder"
								},
								{
									"key": "filter.isExactMatch",
									"value": "<boolean>",
									"description": "Whether to do an exact match of the search text or a partial match"
								},
								{
									"key": "filter.onlyRPCEnabled",
									"value": "<boolean>",
									"description": "Whether to only include secrets whose template has Remote Password Changing enabled"
								},
								{
									"key": "filter.onlySharedWithMe",
									"value": "<boolean>",
									"description": "When true only Secrets where you are not the owner and the Secret was shared explicitly with your user id will be returned."
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.permissionRequired",
									"value": "<string>",
									"description": "Specify whether to filter by List, View, Edit, or Owner permission. Default is List. (List = 1, View = 2, Edit = 3, Owner = 4"
								},
								{
									"key": "filter.scope",
									"value": "<string>",
									"description": "Specify whether to search AllSecrets, Recent, or Favorites (All = 1, Recent = 2,Favorites = 3"
								},
								{
									"key": "filter.searchField",
									"value": "<string>",
									"description": "Field to search"
								},
								{
									"key": "filter.searchFieldSlug",
									"value": "<string>",
									"description": "Field-slug to search. This will override SearchField."
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "filter.secretTemplateId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain template"
								},
								{
									"key": "filter.siteId",
									"value": "<integer>",
									"description": "Return only secrets within a certain site"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secrets, returning only secret ID and name"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/lookup/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"lookup",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret ID"
								}
							]
						},
						"description": "Look up secret by ID and return secret name and ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"value\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/lookup/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"lookup",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get RDP Proxy Information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"launcherType\": \"<integer>\",\n    \"machine\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/rdpproxy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"rdpproxy"
							]
						},
						"description": "Get RDP Proxy Information"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/rdpproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"rdpproxy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "RDP Proxy Information",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/rdpproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"rdpproxy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"UnknownError\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"Processing\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/rdpproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"rdpproxy"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/rdpproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"rdpproxy"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Search Total",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/search-total?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"search-total"
							],
							"query": [
								{
									"key": "filter.allowDoubleLocks",
									"value": "<boolean>",
									"description": "Whether to allow DoubleLocks as part of the search. True by default"
								},
								{
									"key": "filter.doNotCalculateTotal",
									"value": "<boolean>",
									"description": "Whether to return the total number of secrets matching the filters. False by default"
								},
								{
									"key": "filter.doubleLockId",
									"value": "<integer>",
									"description": "Only include Secrets with this DoubleLock ID assigned in the search results"
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedFields",
									"value": "<string>",
									"description": "Names of Secret Template fields to return.  Only exposed fields can be returned."
								},
								{
									"key": "filter.extendedTypeId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain extended type"
								},
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "Return only secrets within a certain folder"
								},
								{
									"key": "filter.heartbeatStatus",
									"value": "<string>",
									"description": "Return only secrets with a certain heartbeat status"
								},
								{
									"key": "filter.includeActive",
									"value": "<boolean>",
									"description": "Whether to include active secrets in results (when excluded equals true)"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secrets in results"
								},
								{
									"key": "filter.includeRestricted",
									"value": "<boolean>",
									"description": "Whether to include restricted secrets in results"
								},
								{
									"key": "filter.includeSubFolders",
									"value": "<boolean>",
									"description": "Whether to include secrets in subfolders of the specified folder"
								},
								{
									"key": "filter.isExactMatch",
									"value": "<boolean>",
									"description": "Whether to do an exact match of the search text or a partial match"
								},
								{
									"key": "filter.onlyRPCEnabled",
									"value": "<boolean>",
									"description": "Whether to only include secrets whose template has Remote Password Changing enabled"
								},
								{
									"key": "filter.onlySharedWithMe",
									"value": "<boolean>",
									"description": "When true only Secrets where you are not the owner and the Secret was shared explicitly with your user id will be returned."
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.passwordTypeIds",
									"value": "<integer>",
									"description": "Return only secrets matching certain password types"
								},
								{
									"key": "filter.permissionRequired",
									"value": "<string>",
									"description": "Specify whether to filter by List, View, Edit, or Owner permission. Default is List. (List = 1, View = 2, Edit = 3, Owner = 4"
								},
								{
									"key": "filter.scope",
									"value": "<string>",
									"description": "Specify whether to search AllSecrets, Recent, or Favorites (All = 1, Recent = 2,Favorites = 3"
								},
								{
									"key": "filter.searchField",
									"value": "<string>",
									"description": "Field to search"
								},
								{
									"key": "filter.searchFieldSlug",
									"value": "<string>",
									"description": "Field-slug to search. This will override SearchField."
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "filter.secretTemplateId",
									"value": "<integer>",
									"description": "Return only secrets matching a certain template"
								},
								{
									"key": "filter.siteId",
									"value": "<integer>",
									"description": "Return only secrets within a certain site"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Gets the total number of secrets matching the secret search filter"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/search-total?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"search-total"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Integer number of matching secrets",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/search-total?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"search-total"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/search-total?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"search-total"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/search-total?filter.allowDoubleLocks=<boolean>&filter.doNotCalculateTotal=<boolean>&filter.doubleLockId=<integer>&filter.extendedFields=<string>&filter.extendedFields=<string>&filter.extendedTypeId=<integer>&filter.folderId=<integer>&filter.heartbeatStatus=<string>&filter.includeActive=<boolean>&filter.includeInactive=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.isExactMatch=<boolean>&filter.onlyRPCEnabled=<boolean>&filter.onlySharedWithMe=<boolean>&filter.passwordTypeIds=<integer>&filter.passwordTypeIds=<integer>&filter.permissionRequired=<string>&filter.scope=<string>&filter.searchField=<string>&filter.searchFieldSlug=<string>&filter.searchText=<string>&filter.secretTemplateId=<integer>&filter.siteId=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"search-total"
									],
									"query": [
										{
											"key": "filter.allowDoubleLocks",
											"value": "<boolean>"
										},
										{
											"key": "filter.doNotCalculateTotal",
											"value": "<boolean>"
										},
										{
											"key": "filter.doubleLockId",
											"value": "<integer>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedFields",
											"value": "<string>"
										},
										{
											"key": "filter.extendedTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.heartbeatStatus",
											"value": "<string>"
										},
										{
											"key": "filter.includeActive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.isExactMatch",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlyRPCEnabled",
											"value": "<boolean>"
										},
										{
											"key": "filter.onlySharedWithMe",
											"value": "<boolean>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.passwordTypeIds",
											"value": "<integer>"
										},
										{
											"key": "filter.permissionRequired",
											"value": "<string>"
										},
										{
											"key": "filter.scope",
											"value": "<string>"
										},
										{
											"key": "filter.searchField",
											"value": "<string>"
										},
										{
											"key": "filter.searchFieldSlug",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.secretTemplateId",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get SSH Proxy Information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"launcherType\": \"<integer>\",\n    \"machine\": \"<string>\",\n    \"secretId\": \"<integer>\",\n    \"siteId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/sshproxy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"sshproxy"
							]
						},
						"description": "Get SSH Proxy Information"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/sshproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshproxy"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "SSH Proxy Information",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/sshproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshproxy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"UnknownError\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"autoChangeEnabled\": \"<boolean>\",\n   \"checkedOut\": \"<boolean>\",\n   \"checkOutEnabled\": \"<boolean>\",\n   \"createDate\": \"<dateTime>\",\n   \"daysUntilExpiration\": \"<integer>\",\n   \"doubleLockEnabled\": \"<boolean>\",\n   \"extendedFields\": [\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"value\": \"<string>\"\n    }\n   ],\n   \"folderId\": \"<integer>\",\n   \"hidePassword\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"inheritsPermissions\": \"<boolean>\",\n   \"isOutOfSync\": \"<boolean>\",\n   \"isRestricted\": \"<boolean>\",\n   \"lastAccessed\": \"<dateTime>\",\n   \"lastHeartBeatStatus\": \"Processing\",\n   \"lastPasswordChangeAttempt\": \"<dateTime>\",\n   \"name\": \"<string>\",\n   \"outOfSyncReason\": \"<string>\",\n   \"requiresApproval\": \"<boolean>\",\n   \"requiresComment\": \"<boolean>\",\n   \"responseCodes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"secretTemplateId\": \"<integer>\",\n   \"secretTemplateName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/sshproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshproxy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/sshproxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshproxy"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get SSH Terminal Details",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secretId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secrets/sshterminal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"sshterminal"
							]
						},
						"description": "Get SSH Terminal Details"
					},
					"response": [
						{
							"name": "SSH Terminal Details",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/sshterminal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshterminal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/sshterminal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshterminal"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/sshterminal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshterminal"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secrets/sshterminal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"sshterminal"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secrets/stub?folderId=<integer>&secretTemplateId=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secrets",
								"stub"
							],
							"query": [
								{
									"key": "folderId",
									"value": "<integer>",
									"description": "Containing folder ID. May be null unless secrets are required to be in folders."
								},
								{
									"key": "secretTemplateId",
									"value": "<integer>",
									"description": "(Required) Secret template ID"
								}
							]
						},
						"description": "Return the default values for a new secret"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/stub?folderId=<integer>&secretTemplateId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										},
										{
											"key": "secretTemplateId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/stub?folderId=<integer>&secretTemplateId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										},
										{
											"key": "secretTemplateId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/stub?folderId=<integer>&secretTemplateId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										},
										{
											"key": "secretTemplateId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessRequestWorkflowMapId\": \"<integer>\",\n \"active\": \"<boolean>\",\n \"allowOwnersUnrestrictedSshCommands\": \"<boolean>\",\n \"autoChangeEnabled\": \"<boolean>\",\n \"autoChangeNextPassword\": \"<string>\",\n \"checkedOut\": \"<boolean>\",\n \"checkOutChangePasswordEnabled\": \"<boolean>\",\n \"checkOutEnabled\": \"<boolean>\",\n \"checkOutIntervalMinutes\": \"<integer>\",\n \"checkOutMinutesRemaining\": \"<integer>\",\n \"checkOutUserDisplayName\": \"<string>\",\n \"checkOutUserId\": \"<integer>\",\n \"doubleLockId\": \"<integer>\",\n \"enableInheritPermissions\": \"<boolean>\",\n \"enableInheritSecretPolicy\": \"<boolean>\",\n \"failedPasswordChangeAttempts\": \"<integer>\",\n \"folderId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isDoubleLock\": \"<boolean>\",\n \"isOutOfSync\": \"<boolean>\",\n \"isRestricted\": \"<boolean>\",\n \"items\": [\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  },\n  {\n   \"fieldDescription\": \"<string>\",\n   \"fieldId\": \"<integer>\",\n   \"fieldName\": \"<string>\",\n   \"fileAttachmentId\": \"<integer>\",\n   \"filename\": \"<string>\",\n   \"isFile\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"itemId\": \"<integer>\",\n   \"itemValue\": \"<string>\",\n   \"slug\": \"<string>\"\n  }\n ],\n \"lastHeartBeatCheck\": \"<dateTime>\",\n \"lastHeartBeatStatus\": \"AccountLockedOut\",\n \"lastPasswordChangeAttempt\": \"<dateTime>\",\n \"launcherConnectAsSecretId\": \"<integer>\",\n \"name\": \"<string>\",\n \"outOfSyncReason\": \"<string>\",\n \"passwordTypeWebScriptId\": \"<integer>\",\n \"proxyEnabled\": \"<boolean>\",\n \"requiresApprovalForAccess\": \"<boolean>\",\n \"requiresComment\": \"<boolean>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"restrictSshCommands\": \"<boolean>\",\n \"secretPolicyId\": \"<integer>\",\n \"secretTemplateId\": \"<integer>\",\n \"secretTemplateName\": \"<string>\",\n \"sessionRecordingEnabled\": \"<boolean>\",\n \"siteId\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secrets/stub?folderId=<integer>&secretTemplateId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secrets",
										"stub"
									],
									"query": [
										{
											"key": "folderId",
											"value": "<integer>"
										},
										{
											"key": "secretTemplateId",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Secrets"
		},
		{
			"name": "SecretSessions",
			"item": [
				{
					"name": "Search Recorded Sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions?filter.active=<boolean>&filter.dateRange=<time-span>&filter.endDate=<dateTime>&filter.endTime=<string>&filter.folderId=<integer>&filter.groupIds=<integer>&filter.groupIds=<integer>&filter.includeNonSecretServerSessions=<boolean>&filter.includeOnlyLaunchedSuccessfully=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.launcherTypeId=<integer>&filter.searchText=<string>&filter.searchTypes=<string>&filter.searchTypes=<string>&filter.secretIds=<integer>&filter.secretIds=<integer>&filter.siteId=<integer>&filter.startDate=<dateTime>&filter.startTime=<string>&filter.userIds=<integer>&filter.userIds=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions"
							],
							"query": [
								{
									"key": "filter.active",
									"value": "<boolean>",
									"description": "Filter by active or inactive status"
								},
								{
									"key": "filter.dateRange",
									"value": "<time-span>",
									"description": "Return sessions within a certain number of days"
								},
								{
									"key": "filter.endDate",
									"value": "<dateTime>",
									"description": "EndDate"
								},
								{
									"key": "filter.endTime",
									"value": "<string>",
									"description": "EndTime"
								},
								{
									"key": "filter.folderId",
									"value": "<integer>",
									"description": "Filter by folder"
								},
								{
									"key": "filter.groupIds",
									"value": "<integer>",
									"description": "Return sessions for specific groups"
								},
								{
									"key": "filter.groupIds",
									"value": "<integer>",
									"description": "Return sessions for specific groups"
								},
								{
									"key": "filter.includeNonSecretServerSessions",
									"value": "<boolean>",
									"description": "IncludeNonSecretServerSessions"
								},
								{
									"key": "filter.includeOnlyLaunchedSuccessfully",
									"value": "<boolean>",
									"description": "Return only sessions that launched successfully"
								},
								{
									"key": "filter.includeRestricted",
									"value": "<boolean>",
									"description": "Whether to include restricted secret sessions"
								},
								{
									"key": "filter.includeSubFolders",
									"value": "<boolean>",
									"description": "Whether to include subfolders in a folder search"
								},
								{
									"key": "filter.launcherTypeId",
									"value": "<integer>",
									"description": "Filter by launcher type"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "filter.searchTypes",
									"value": "<string>",
									"description": "Specifies the sources of information you want to search across, can be many of (SecretItems, Username, Hostname, Domain, RdpKeystroke, RdpApplication, ProxyClient)"
								},
								{
									"key": "filter.searchTypes",
									"value": "<string>",
									"description": "Specifies the sources of information you want to search across, can be many of (SecretItems, Username, Hostname, Domain, RdpKeystroke, RdpApplication, ProxyClient)"
								},
								{
									"key": "filter.secretIds",
									"value": "<integer>",
									"description": "Return sessions for specific secrets"
								},
								{
									"key": "filter.secretIds",
									"value": "<integer>",
									"description": "Return sessions for specific secrets"
								},
								{
									"key": "filter.siteId",
									"value": "<integer>",
									"description": "SiteId"
								},
								{
									"key": "filter.startDate",
									"value": "<dateTime>",
									"description": "StartDate"
								},
								{
									"key": "filter.startTime",
									"value": "<string>",
									"description": "StartTime"
								},
								{
									"key": "filter.userIds",
									"value": "<integer>",
									"description": "Return sessions for specific users"
								},
								{
									"key": "filter.userIds",
									"value": "<integer>",
									"description": "Return sessions for specific users"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page recorded sessions"
					},
					"response": [
						{
							"name": "Recorded session search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions?filter.active=<boolean>&filter.dateRange=<time-span>&filter.endDate=<dateTime>&filter.endTime=<string>&filter.folderId=<integer>&filter.groupIds=<integer>&filter.groupIds=<integer>&filter.includeNonSecretServerSessions=<boolean>&filter.includeOnlyLaunchedSuccessfully=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.launcherTypeId=<integer>&filter.searchText=<string>&filter.searchTypes=<string>&filter.searchTypes=<string>&filter.secretIds=<integer>&filter.secretIds=<integer>&filter.siteId=<integer>&filter.startDate=<dateTime>&filter.startTime=<string>&filter.userIds=<integer>&filter.userIds=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions"
									],
									"query": [
										{
											"key": "filter.active",
											"value": "<boolean>"
										},
										{
											"key": "filter.dateRange",
											"value": "<time-span>"
										},
										{
											"key": "filter.endDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.endTime",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.includeNonSecretServerSessions",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeOnlyLaunchedSuccessfully",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "filter.startDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.startTime",
											"value": "<string>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"accessedByName\": \"<string>\",\n   \"active\": \"<boolean>\",\n   \"auditSecretId\": \"<integer>\",\n   \"duration\": \"<integer>\",\n   \"endDate\": \"<dateTime>\",\n   \"endDateDisplay\": \"<string>\",\n   \"errorMessage\": \"<string>\",\n   \"fileExtension\": \"<string>\",\n   \"hasKeyStrokes\": \"<boolean>\",\n   \"hasProcesses\": \"<boolean>\",\n   \"hasProcessingError\": \"<boolean>\",\n   \"isDeleted\": \"<boolean>\",\n   \"isLauncher\": \"<boolean>\",\n   \"launchedSuccessfully\": \"<boolean>\",\n   \"launcherName\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"launcherSessionStatus\": \"<integer>\",\n   \"launcherTypeId\": \"<integer>\",\n   \"machineName\": \"<string>\",\n   \"matchingSearchTypes\": \"<string>\",\n   \"pbaId\": \"<long>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"secretSessionId\": \"<integer>\",\n   \"secretSessionUserName\": \"<string>\",\n   \"sessionMovieProcessComplete\": \"<boolean>\",\n   \"startDate\": \"<dateTime>\",\n   \"startDateDisplay\": \"<string>\",\n   \"userDomainName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\",\n   \"userNameForDisplay\": \"<string>\"\n  },\n  {\n   \"accessedByName\": \"<string>\",\n   \"active\": \"<boolean>\",\n   \"auditSecretId\": \"<integer>\",\n   \"duration\": \"<integer>\",\n   \"endDate\": \"<dateTime>\",\n   \"endDateDisplay\": \"<string>\",\n   \"errorMessage\": \"<string>\",\n   \"fileExtension\": \"<string>\",\n   \"hasKeyStrokes\": \"<boolean>\",\n   \"hasProcesses\": \"<boolean>\",\n   \"hasProcessingError\": \"<boolean>\",\n   \"isDeleted\": \"<boolean>\",\n   \"isLauncher\": \"<boolean>\",\n   \"launchedSuccessfully\": \"<boolean>\",\n   \"launcherName\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"launcherSessionStatus\": \"<integer>\",\n   \"launcherTypeId\": \"<integer>\",\n   \"machineName\": \"<string>\",\n   \"matchingSearchTypes\": \"<string>\",\n   \"pbaId\": \"<long>\",\n   \"secretId\": \"<integer>\",\n   \"secretName\": \"<string>\",\n   \"secretSessionId\": \"<integer>\",\n   \"secretSessionUserName\": \"<string>\",\n   \"sessionMovieProcessComplete\": \"<boolean>\",\n   \"startDate\": \"<dateTime>\",\n   \"startDateDisplay\": \"<string>\",\n   \"userDomainName\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\",\n   \"userNameForDisplay\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions?filter.active=<boolean>&filter.dateRange=<time-span>&filter.endDate=<dateTime>&filter.endTime=<string>&filter.folderId=<integer>&filter.groupIds=<integer>&filter.groupIds=<integer>&filter.includeNonSecretServerSessions=<boolean>&filter.includeOnlyLaunchedSuccessfully=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.launcherTypeId=<integer>&filter.searchText=<string>&filter.searchTypes=<string>&filter.searchTypes=<string>&filter.secretIds=<integer>&filter.secretIds=<integer>&filter.siteId=<integer>&filter.startDate=<dateTime>&filter.startTime=<string>&filter.userIds=<integer>&filter.userIds=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions"
									],
									"query": [
										{
											"key": "filter.active",
											"value": "<boolean>"
										},
										{
											"key": "filter.dateRange",
											"value": "<time-span>"
										},
										{
											"key": "filter.endDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.endTime",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.includeNonSecretServerSessions",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeOnlyLaunchedSuccessfully",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "filter.startDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.startTime",
											"value": "<string>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions?filter.active=<boolean>&filter.dateRange=<time-span>&filter.endDate=<dateTime>&filter.endTime=<string>&filter.folderId=<integer>&filter.groupIds=<integer>&filter.groupIds=<integer>&filter.includeNonSecretServerSessions=<boolean>&filter.includeOnlyLaunchedSuccessfully=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.launcherTypeId=<integer>&filter.searchText=<string>&filter.searchTypes=<string>&filter.searchTypes=<string>&filter.secretIds=<integer>&filter.secretIds=<integer>&filter.siteId=<integer>&filter.startDate=<dateTime>&filter.startTime=<string>&filter.userIds=<integer>&filter.userIds=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions"
									],
									"query": [
										{
											"key": "filter.active",
											"value": "<boolean>"
										},
										{
											"key": "filter.dateRange",
											"value": "<time-span>"
										},
										{
											"key": "filter.endDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.endTime",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.includeNonSecretServerSessions",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeOnlyLaunchedSuccessfully",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "filter.startDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.startTime",
											"value": "<string>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions?filter.active=<boolean>&filter.dateRange=<time-span>&filter.endDate=<dateTime>&filter.endTime=<string>&filter.folderId=<integer>&filter.groupIds=<integer>&filter.groupIds=<integer>&filter.includeNonSecretServerSessions=<boolean>&filter.includeOnlyLaunchedSuccessfully=<boolean>&filter.includeRestricted=<boolean>&filter.includeSubFolders=<boolean>&filter.launcherTypeId=<integer>&filter.searchText=<string>&filter.searchTypes=<string>&filter.searchTypes=<string>&filter.secretIds=<integer>&filter.secretIds=<integer>&filter.siteId=<integer>&filter.startDate=<dateTime>&filter.startTime=<string>&filter.userIds=<integer>&filter.userIds=<integer>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions"
									],
									"query": [
										{
											"key": "filter.active",
											"value": "<boolean>"
										},
										{
											"key": "filter.dateRange",
											"value": "<time-span>"
										},
										{
											"key": "filter.endDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.endTime",
											"value": "<string>"
										},
										{
											"key": "filter.folderId",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.groupIds",
											"value": "<integer>"
										},
										{
											"key": "filter.includeNonSecretServerSessions",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeOnlyLaunchedSuccessfully",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeRestricted",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSubFolders",
											"value": "<boolean>"
										},
										{
											"key": "filter.launcherTypeId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.searchTypes",
											"value": "<string>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.secretIds",
											"value": "<integer>"
										},
										{
											"key": "filter.siteId",
											"value": "<integer>"
										},
										{
											"key": "filter.startDate",
											"value": "<dateTime>"
										},
										{
											"key": "filter.startTime",
											"value": "<string>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "filter.userIds",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Recorded Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Get a single recorded session by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Recorded session object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessedByName\": \"<string>\",\n \"active\": \"<boolean>\",\n \"auditSecretId\": \"<integer>\",\n \"duration\": \"<integer>\",\n \"endDate\": \"<dateTime>\",\n \"endDateDisplay\": \"<string>\",\n \"errorMessage\": \"<string>\",\n \"fileExtension\": \"<string>\",\n \"hasKeyStrokes\": \"<boolean>\",\n \"hasProcesses\": \"<boolean>\",\n \"hasProcessingError\": \"<boolean>\",\n \"isDeleted\": \"<boolean>\",\n \"isLauncher\": \"<boolean>\",\n \"launchedSuccessfully\": \"<boolean>\",\n \"launcherName\": \"<string>\",\n \"launcherSessionGuid\": \"<uuid>\",\n \"launcherSessionStatus\": \"<integer>\",\n \"launcherTypeId\": \"<integer>\",\n \"machineName\": \"<string>\",\n \"matchingSearchTypes\": \"<string>\",\n \"pbaId\": \"<long>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"secretSessionId\": \"<integer>\",\n \"secretSessionUserName\": \"<string>\",\n \"sessionMovieProcessComplete\": \"<boolean>\",\n \"startDate\": \"<dateTime>\",\n \"startDateDisplay\": \"<string>\",\n \"userDomainName\": \"<string>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\",\n \"userNameForDisplay\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Recorded Session Points of Interest",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id",
								"points-of-interest"
							],
							"query": [
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Get the points of interest for a recorded session"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Recorded session points of interest",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"activityDetails\": \"<string>\",\n   \"activityTitle\": \"<string>\",\n   \"activityType\": \"Image\",\n   \"activityTypeDisplayName\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"secretId\": \"<integer>\",\n   \"secretSessionId\": \"<integer>\",\n   \"timestamp\": \"<dateTime>\",\n   \"timestampOffset\": \"<time-span>\",\n   \"timestampOffsetDisplay\": \"<string>\"\n  },\n  {\n   \"activityDetails\": \"<string>\",\n   \"activityTitle\": \"<string>\",\n   \"activityType\": \"ApplicationMadeActive\",\n   \"activityTypeDisplayName\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"secretId\": \"<integer>\",\n   \"secretSessionId\": \"<integer>\",\n   \"timestamp\": \"<dateTime>\",\n   \"timestampOffset\": \"<time-span>\",\n   \"timestampOffsetDisplay\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Recorded Session Points of Interest Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest-summary?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id",
								"points-of-interest-summary"
							],
							"query": [
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Get the points of interest summary for a recorded session"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest-summary?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest-summary"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Recorded session points of interest summary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest-summary?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest-summary"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"activityTypeGroup\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"score\": \"<integer>\",\n   \"secondsFromStart\": \"<long>\",\n   \"timestampOffset\": \"<time-span>\"\n  },\n  {\n   \"activityTypeGroup\": \"<string>\",\n   \"launcherSessionGuid\": \"<uuid>\",\n   \"score\": \"<integer>\",\n   \"secondsFromStart\": \"<long>\",\n   \"timestampOffset\": \"<time-span>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest-summary?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest-summary"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/points-of-interest-summary?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"points-of-interest-summary"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Request Immediate Session Processing",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id/request-processing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id",
								"request-processing"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Issues a request for the immediate processing of a session video"
					},
					"response": [
						{
							"name": "Unknown or empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/request-processing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"request-processing"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/request-processing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"request-processing"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/request-processing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"request-processing"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/request-processing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"request-processing"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Recorded Session Video Stream",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id/session-recordings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id",
								"session-recordings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Get the video stream for a recorded session"
					},
					"response": [
						{
							"name": "Recorded session video stream",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/session-recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"session-recordings"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/session-recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"session-recordings"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/session-recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"session-recordings"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/session-recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"session-recordings"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Recorded Session Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recorded-sessions/:id/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recorded-sessions",
								":id",
								"summary"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Recorded session ID"
								}
							]
						},
						"description": "Get the summary for a recorded session"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Recorded session summary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accessedByName\": \"<string>\",\n \"active\": \"<boolean>\",\n \"auditSecretId\": \"<integer>\",\n \"duration\": \"<integer>\",\n \"endDate\": \"<dateTime>\",\n \"endDateDisplay\": \"<string>\",\n \"errorMessage\": \"<string>\",\n \"fileExtension\": \"<string>\",\n \"hasKeyStrokes\": \"<boolean>\",\n \"hasProcesses\": \"<boolean>\",\n \"hasProcessingError\": \"<boolean>\",\n \"isDeleted\": \"<boolean>\",\n \"isLauncher\": \"<boolean>\",\n \"launchedSuccessfully\": \"<boolean>\",\n \"launcherName\": \"<string>\",\n \"launcherSessionGuid\": \"<uuid>\",\n \"launcherSessionStatus\": \"<integer>\",\n \"launcherTypeId\": \"<integer>\",\n \"machineName\": \"<string>\",\n \"matchingSearchTypes\": \"<string>\",\n \"pbaId\": \"<long>\",\n \"secretId\": \"<integer>\",\n \"secretName\": \"<string>\",\n \"secretSessionId\": \"<integer>\",\n \"secretSessionUserName\": \"<string>\",\n \"sessionMovieProcessComplete\": \"<boolean>\",\n \"startDate\": \"<dateTime>\",\n \"startDateDisplay\": \"<string>\",\n \"userDomainName\": \"<string>\",\n \"userId\": \"<integer>\",\n \"userName\": \"<string>\",\n \"userNameForDisplay\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recorded-sessions/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recorded-sessions",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View recorded sessions"
		},
		{
			"name": "SecretTemplatePermissions",
			"item": [
				{
					"name": "Search Secret Template Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-template-permissions?filter.groupId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-template-permissions"
							],
							"query": [
								{
									"key": "filter.groupId",
									"value": "<integer>",
									"description": "GroupId"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secret template permissions"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions?filter.groupId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions?filter.groupId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions?filter.groupId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret template permission search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions?filter.groupId=<integer>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									],
									"query": [
										{
											"key": "filter.groupId",
											"value": "<integer>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"displayName\": \"<string>\",\n   \"displayNameWithDomain\": \"<string>\",\n   \"domainName\": \"<string>\",\n   \"groupId\": \"<integer>\",\n   \"isPersonal\": \"<boolean>\",\n   \"secretTypeAccessRoleId\": \"<integer>\",\n   \"secretTypeId\": \"<integer>\",\n   \"secretTypeName\": \"<string>\"\n  },\n  {\n   \"displayName\": \"<string>\",\n   \"displayNameWithDomain\": \"<string>\",\n   \"domainName\": \"<string>\",\n   \"groupId\": \"<integer>\",\n   \"isPersonal\": \"<boolean>\",\n   \"secretTypeAccessRoleId\": \"<integer>\",\n   \"secretTypeId\": \"<integer>\",\n   \"secretTypeName\": \"<string>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Templates Permissions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groupId\": \"<integer>\",\n    \"permissions\": [\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        },\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-template-permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-template-permissions"
							]
						},
						"description": "Change permissions"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"permissions\": [\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        },\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret permission object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"permissions\": [\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        },\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"permissions\": [\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        },\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"permissions\": [\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        },\n        {\n            \"roleId\": \"<integer>\",\n            \"secretTypeId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-template-permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-template-permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Secret Template Permissions"
		},
		{
			"name": "SecretTemplates",
			"item": [
				{
					"name": "Search Secret Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-templates?filter.includeInactive=<boolean>&filter.includeSecretCount=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive secret templates in the results"
								},
								{
									"key": "filter.includeSecretCount",
									"value": "<boolean>",
									"description": "Whether to populate Secret count in the results"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page secret templates"
					},
					"response": [
						{
							"name": "Secret template search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates?filter.includeInactive=<boolean>&filter.includeSecretCount=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSecretCount",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"secretCount\": \"<integer>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates?filter.includeInactive=<boolean>&filter.includeSecretCount=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSecretCount",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates?filter.includeInactive=<boolean>&filter.includeSecretCount=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSecretCount",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates?filter.includeInactive=<boolean>&filter.includeSecretCount=<boolean>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.includeSecretCount",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fields\": [\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Edit\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        },\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Owner\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        }\n    ],\n    \"name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates"
							]
						},
						"description": "Create a new Secret Template"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fields\": [\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Owner\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        },\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"NotEditable\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        }\n    ],\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fields\": [\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Owner\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        },\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"NotEditable\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        }\n    ],\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Secret Template object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fields\": [\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Owner\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        },\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"NotEditable\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        }\n    ],\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fields\": [\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"NotEditable\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"Edit\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  }\n ],\n \"id\": \"<integer>\",\n \"name\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fields\": [\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"Owner\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        },\n        {\n            \"description\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"editablePermission\": \"<integer>\",\n            \"editRequires\": \"NotEditable\",\n            \"fieldSlugName\": \"<string>\",\n            \"generatePasswordCharacterSet\": \"<string>\",\n            \"generatePasswordLength\": \"<integer>\",\n            \"hideOnView\": \"<boolean>\",\n            \"historyLength\": \"<integer>\",\n            \"isExpirationField\": \"<boolean>\",\n            \"isFile\": \"<boolean>\",\n            \"isIndexable\": \"<boolean>\",\n            \"isNotes\": \"<boolean>\",\n            \"isPassword\": \"<boolean>\",\n            \"isRequired\": \"<boolean>\",\n            \"isUrl\": \"<boolean>\",\n            \"mustEncrypt\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"passwordRequirementId\": \"<integer>\",\n            \"passwordTypeFieldId\": \"<integer>\",\n            \"sortOrder\": \"<integer>\"\n        }\n    ],\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Secret Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret template ID"
								}
							]
						},
						"description": "Get a single secret template by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret template object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fields\": [\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"Owner\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"displayName\": \"<string>\",\n   \"editablePermission\": \"<integer>\",\n   \"editRequires\": \"NotEditable\",\n   \"fieldSlugName\": \"<string>\",\n   \"generatePasswordCharacterSet\": \"<string>\",\n   \"generatePasswordLength\": \"<integer>\",\n   \"hideOnView\": \"<boolean>\",\n   \"historyLength\": \"<integer>\",\n   \"isExpirationField\": \"<boolean>\",\n   \"isFile\": \"<boolean>\",\n   \"isIndexable\": \"<boolean>\",\n   \"isNotes\": \"<boolean>\",\n   \"isPassword\": \"<boolean>\",\n   \"isRequired\": \"<boolean>\",\n   \"isUrl\": \"<boolean>\",\n   \"mustEncrypt\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"passwordRequirementId\": \"<integer>\",\n   \"passwordTypeFieldId\": \"<integer>\",\n   \"secretTemplateFieldId\": \"<integer>\",\n   \"sortOrder\": \"<integer>\"\n  }\n ],\n \"id\": \"<integer>\",\n \"name\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Secret Template Field",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Template ID"
								}
							]
						},
						"description": "Update a Secret Template Field"
					},
					"response": [
						{
							"name": "Secret Template Field",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"<string>\",\n \"displayName\": \"<string>\",\n \"editablePermission\": \"<integer>\",\n \"editRequires\": \"NotEditable\",\n \"fieldSlugName\": \"<string>\",\n \"generatePasswordCharacterSet\": \"<string>\",\n \"generatePasswordLength\": \"<integer>\",\n \"hideOnView\": \"<boolean>\",\n \"historyLength\": \"<integer>\",\n \"isExpirationField\": \"<boolean>\",\n \"isFile\": \"<boolean>\",\n \"isIndexable\": \"<boolean>\",\n \"isNotes\": \"<boolean>\",\n \"isPassword\": \"<boolean>\",\n \"isRequired\": \"<boolean>\",\n \"isUrl\": \"<boolean>\",\n \"mustEncrypt\": \"<boolean>\",\n \"name\": \"<string>\",\n \"passwordRequirementId\": \"<integer>\",\n \"passwordTypeFieldId\": \"<integer>\",\n \"secretTemplateFieldId\": \"<integer>\",\n \"sortOrder\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"secretTemplateFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Secret Template Field For Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) templateId"
								}
							]
						},
						"description": "Create a new Secret Template Field For Template"
					},
					"response": [
						{
							"name": "Secret Template Field object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"<string>\",\n \"displayName\": \"<string>\",\n \"editablePermission\": \"<integer>\",\n \"editRequires\": \"NotEditable\",\n \"fieldSlugName\": \"<string>\",\n \"generatePasswordCharacterSet\": \"<string>\",\n \"generatePasswordLength\": \"<integer>\",\n \"hideOnView\": \"<boolean>\",\n \"historyLength\": \"<integer>\",\n \"isExpirationField\": \"<boolean>\",\n \"isFile\": \"<boolean>\",\n \"isIndexable\": \"<boolean>\",\n \"isNotes\": \"<boolean>\",\n \"isPassword\": \"<boolean>\",\n \"isRequired\": \"<boolean>\",\n \"isUrl\": \"<boolean>\",\n \"mustEncrypt\": \"<boolean>\",\n \"name\": \"<string>\",\n \"passwordRequirementId\": \"<integer>\",\n \"passwordTypeFieldId\": \"<integer>\",\n \"secretTemplateFieldId\": \"<integer>\",\n \"sortOrder\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"editablePermission\": \"<integer>\",\n    \"editRequires\": \"Owner\",\n    \"fieldSlugName\": \"<string>\",\n    \"generatePasswordCharacterSet\": \"<string>\",\n    \"generatePasswordLength\": \"<integer>\",\n    \"hideOnView\": \"<boolean>\",\n    \"historyLength\": \"<integer>\",\n    \"isExpirationField\": \"<boolean>\",\n    \"isFile\": \"<boolean>\",\n    \"isIndexable\": \"<boolean>\",\n    \"isNotes\": \"<boolean>\",\n    \"isPassword\": \"<boolean>\",\n    \"isRequired\": \"<boolean>\",\n    \"isUrl\": \"<boolean>\",\n    \"mustEncrypt\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"passwordRequirementId\": \"<integer>\",\n    \"passwordTypeFieldId\": \"<integer>\",\n    \"sortOrder\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Patch Secret Template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) templateId"
								}
							]
						},
						"description": "Patch secret templates"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Secret template object",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"secretCount\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret-templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Disable a Secret Template Field For Template",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-templates/fields/:templateFieldId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								"fields",
								":templateFieldId"
							],
							"variable": [
								{
									"key": "templateFieldId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret Template Field to disable"
								}
							]
						},
						"description": "Disable a Secret Template Field For Template"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/fields/:templateFieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"fields",
										":templateFieldId"
									],
									"variable": [
										{
											"key": "templateFieldId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Secret Template Field object",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/fields/:templateFieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"fields",
										":templateFieldId"
									],
									"variable": [
										{
											"key": "templateFieldId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"<string>\",\n \"displayName\": \"<string>\",\n \"editablePermission\": \"<integer>\",\n \"editRequires\": \"NotEditable\",\n \"fieldSlugName\": \"<string>\",\n \"generatePasswordCharacterSet\": \"<string>\",\n \"generatePasswordLength\": \"<integer>\",\n \"hideOnView\": \"<boolean>\",\n \"historyLength\": \"<integer>\",\n \"isExpirationField\": \"<boolean>\",\n \"isFile\": \"<boolean>\",\n \"isIndexable\": \"<boolean>\",\n \"isNotes\": \"<boolean>\",\n \"isPassword\": \"<boolean>\",\n \"isRequired\": \"<boolean>\",\n \"isUrl\": \"<boolean>\",\n \"mustEncrypt\": \"<boolean>\",\n \"name\": \"<string>\",\n \"passwordRequirementId\": \"<integer>\",\n \"passwordTypeFieldId\": \"<integer>\",\n \"secretTemplateFieldId\": \"<integer>\",\n \"sortOrder\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/fields/:templateFieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"fields",
										":templateFieldId"
									],
									"variable": [
										{
											"key": "templateFieldId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/fields/:templateFieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"fields",
										":templateFieldId"
									],
									"variable": [
										{
											"key": "templateFieldId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Generate Password",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-templates/generate-password/:secretfieldId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-templates",
								"generate-password",
								":secretfieldId"
							],
							"variable": [
								{
									"key": "secretfieldId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Secret field Id"
								}
							]
						},
						"description": "Generates a new password matching the Secret Field requirements"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/generate-password/:secretfieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"generate-password",
										":secretfieldId"
									],
									"variable": [
										{
											"key": "secretfieldId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/generate-password/:secretfieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"generate-password",
										":secretfieldId"
									],
									"variable": [
										{
											"key": "secretfieldId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/generate-password/:secretfieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"generate-password",
										":secretfieldId"
									],
									"variable": [
										{
											"key": "secretfieldId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Generate Password result",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret-templates/generate-password/:secretfieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret-templates",
										"generate-password",
										":secretfieldId"
									],
									"variable": [
										{
											"key": "secretfieldId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				}
			],
			"description": "View secret templates"
		},
		{
			"name": "SecurityAuditLogs",
			"item": [
				{
					"name": "Search Security Audit Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/security-audit-logs?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security-audit-logs"
							],
							"query": [
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "SearchText"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page security audit logs"
					},
					"response": [
						{
							"name": "Security audit log search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/security-audit-logs?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-audit-logs"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"filter\": {\n  \"searchText\": \"<string>\"\n },\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"byUserDisplayName\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"dateRecordedDisplay\": \"<string>\",\n   \"eventEntityType\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"logSourceName\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"byUserDisplayName\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"dateRecordedDisplay\": \"<string>\",\n   \"eventEntityType\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"logSourceName\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/security-audit-logs?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-audit-logs"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/security-audit-logs?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-audit-logs"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/security-audit-logs?filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-audit-logs"
									],
									"query": [
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View Security Audit Logs"
		},
		{
			"name": "ServerNodes",
			"item": [
				{
					"name": "Get Server Nodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes"
							]
						},
						"description": "Get Server Nodes"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Server Node List",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"binaryVersion\": \"<string>\",\n  \"database\": \"<string>\",\n  \"enableBackgroundWorker\": \"<boolean>\",\n  \"enableEngineWorker\": \"<boolean>\",\n  \"enableSessionRecordingWorker\": \"<boolean>\",\n  \"errorMessage\": \"<string>\",\n  \"inCluster\": \"<boolean>\",\n  \"isCurrentNode\": \"<boolean>\",\n  \"lastConnected\": \"<string>\",\n  \"machineName\": \"<string>\",\n  \"nodeId\": \"<integer>\",\n  \"readonlyModeEnabled\": \"<boolean>\",\n  \"readonlyModeStatus\": \"<string>\"\n },\n {\n  \"binaryVersion\": \"<string>\",\n  \"database\": \"<string>\",\n  \"enableBackgroundWorker\": \"<boolean>\",\n  \"enableEngineWorker\": \"<boolean>\",\n  \"enableSessionRecordingWorker\": \"<boolean>\",\n  \"errorMessage\": \"<string>\",\n  \"inCluster\": \"<boolean>\",\n  \"isCurrentNode\": \"<boolean>\",\n  \"lastConnected\": \"<string>\",\n  \"machineName\": \"<string>\",\n  \"nodeId\": \"<integer>\",\n  \"readonlyModeEnabled\": \"<boolean>\",\n  \"readonlyModeStatus\": \"<string>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Server Node",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodes/:nodeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":nodeId"
							],
							"variable": [
								{
									"key": "nodeId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) nodeId"
								}
							]
						},
						"description": "Get Server Node"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Server Node List",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"binaryVersion\": \"<string>\",\n \"database\": \"<string>\",\n \"enableBackgroundWorker\": \"<boolean>\",\n \"enableEngineWorker\": \"<boolean>\",\n \"enableSessionRecordingWorker\": \"<boolean>\",\n \"errorMessage\": \"<string>\",\n \"inCluster\": \"<boolean>\",\n \"isCurrentNode\": \"<boolean>\",\n \"lastConnected\": \"<string>\",\n \"machineName\": \"<string>\",\n \"nodeId\": \"<integer>\",\n \"readonlyModeEnabled\": \"<boolean>\",\n \"readonlyModeStatus\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Server Node Configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enableBackgroundWorker\": \"<boolean>\",\n    \"enableEngineWorker\": \"<boolean>\",\n    \"enableSessionRecordingWorker\": \"<boolean>\",\n    \"inCluster\": \"<boolean>\",\n    \"readonlyModeEnabled\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodes/:nodeId/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":nodeId",
								"configuration"
							],
							"variable": [
								{
									"key": "nodeId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) nodeId"
								}
							]
						},
						"description": "Update Server Node Configuration"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableBackgroundWorker\": \"<boolean>\",\n    \"enableEngineWorker\": \"<boolean>\",\n    \"enableSessionRecordingWorker\": \"<boolean>\",\n    \"inCluster\": \"<boolean>\",\n    \"readonlyModeEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId",
										"configuration"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableBackgroundWorker\": \"<boolean>\",\n    \"enableEngineWorker\": \"<boolean>\",\n    \"enableSessionRecordingWorker\": \"<boolean>\",\n    \"inCluster\": \"<boolean>\",\n    \"readonlyModeEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId",
										"configuration"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unknown or empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableBackgroundWorker\": \"<boolean>\",\n    \"enableEngineWorker\": \"<boolean>\",\n    \"enableSessionRecordingWorker\": \"<boolean>\",\n    \"inCluster\": \"<boolean>\",\n    \"readonlyModeEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId",
										"configuration"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enableBackgroundWorker\": \"<boolean>\",\n    \"enableEngineWorker\": \"<boolean>\",\n    \"enableSessionRecordingWorker\": \"<boolean>\",\n    \"inCluster\": \"<boolean>\",\n    \"readonlyModeEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:nodeId/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":nodeId",
										"configuration"
									],
									"variable": [
										{
											"key": "nodeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View nodes and update roles or readonly mode"
		},
		{
			"name": "SshCommandMenu",
			"item": [
				{
					"name": "Add an SSH Command Menu",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"sshCommands\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ssh-command-menu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-command-menu"
							]
						},
						"description": "Add an SSH Command Menu"
					},
					"response": [
						{
							"name": "SSH Command Menu",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"sshCommands\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sshCommandMenuId\": \"<integer>\",\n \"sshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"sshCommands\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"sshCommands\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"sshCommands\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Search Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-command-menu",
								":sshCommandMenuId"
							],
							"variable": [
								{
									"key": "sshCommandMenuId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) sshCommandMenuId"
								}
							]
						},
						"description": "Search, filter, sort, and page teams"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Team search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sshCommandMenuId\": \"<integer>\",\n \"sshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an SSH Command Menu",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sshCommands\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-command-menu",
								":sshCommandMenuId"
							],
							"variable": [
								{
									"key": "sshCommandMenuId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) sshCommandMenuId"
								}
							]
						},
						"description": "Update an SSH Command Menu"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sshCommands\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sshCommands\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "SSH Command Menu",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sshCommands\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<boolean>\"\n },\n \"description\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"name\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"sshCommandMenuId\": \"<integer>\",\n \"sshCommands\": {\n  \"description\": \"<string>\",\n  \"hasHistory\": \"<boolean>\",\n  \"helpLink\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"hideOnView\": \"<boolean>\",\n  \"isRequired\": \"<boolean>\",\n  \"label\": \"<string>\",\n  \"name\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"readOnly\": \"<boolean>\",\n  \"readOnlyReason\": \"<string>\",\n  \"value\": \"<string>\"\n }\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"active\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<boolean>\"\n        },\n        \"description\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"name\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        },\n        \"sshCommands\": {\n            \"dirty\": \"<boolean>\",\n            \"value\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/:sshCommandMenuId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										":sshCommandMenuId"
									],
									"variable": [
										{
											"key": "sshCommandMenuId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-command-menu/audit/search?filter.sshCommandMenuName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-command-menu",
								"audit",
								"search"
							],
							"query": [
								{
									"key": "filter.sshCommandMenuName",
									"value": "<string>",
									"description": "SshCommandMenuName"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page teams"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/audit/search?filter.sshCommandMenuName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"audit",
										"search"
									],
									"query": [
										{
											"key": "filter.sshCommandMenuName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Team search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/audit/search?filter.sshCommandMenuName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"audit",
										"search"
									],
									"query": [
										{
											"key": "filter.sshCommandMenuName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"newCommands\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"oldCommands\": \"<string>\",\n   \"sshCommandMenuName\": \"<string>\",\n   \"userDisplayName\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"newCommands\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"oldCommands\": \"<string>\",\n   \"sshCommandMenuName\": \"<string>\",\n   \"userDisplayName\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/audit/search?filter.sshCommandMenuName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"audit",
										"search"
									],
									"query": [
										{
											"key": "filter.sshCommandMenuName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/audit/search?filter.sshCommandMenuName=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"audit",
										"search"
									],
									"query": [
										{
											"key": "filter.sshCommandMenuName",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-command-menu/search?filter.includeDisabled=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-command-menu",
								"search"
							],
							"query": [
								{
									"key": "filter.includeDisabled",
									"value": "<boolean>",
									"description": "IncludeDisabled"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page teams"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/search?filter.includeDisabled=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"search"
									],
									"query": [
										{
											"key": "filter.includeDisabled",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/search?filter.includeDisabled=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"search"
									],
									"query": [
										{
											"key": "filter.includeDisabled",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Team search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/search?filter.includeDisabled=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"search"
									],
									"query": [
										{
											"key": "filter.includeDisabled",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sshCommandMenuId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sshCommandMenuId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssh-command-menu/search?filter.includeDisabled=<boolean>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-command-menu",
										"search"
									],
									"query": [
										{
											"key": "filter.includeDisabled",
											"value": "<boolean>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain SSH Command Menus"
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Search Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "filter.searchTerm",
									"value": "<string>",
									"description": "SearchTerm"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page teams"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Team search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams?filter.includeInactive=<boolean>&filter.searchTerm=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"domainId\": \"<integer>\",\n   \"shouldRestrictSites\": \"<boolean>\",\n   \"teamDescription\": \"<string>\",\n   \"teamId\": \"<integer>\",\n   \"teamName\": \"<string>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"domainId\": \"<integer>\",\n   \"shouldRestrictSites\": \"<boolean>\",\n   \"teamDescription\": \"<string>\",\n   \"teamId\": \"<integer>\",\n   \"teamName\": \"<string>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create Team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"teamName\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"teamDescription\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams"
							]
						},
						"description": "Create a new team"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"teamDescription\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "New Team Id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"teamDescription\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"teamDescription\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teamName\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"teamDescription\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Get a single team by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Team object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"domainId\": \"<integer>\",\n \"shouldRestrictSites\": \"<boolean>\",\n \"teamDescription\": \"<string>\",\n \"teamId\": \"<integer>\",\n \"teamName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"teamDescription\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"teamName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Update a single team by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"teamDescription\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"teamName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"teamDescription\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"teamName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Team object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"teamDescription\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"teamName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"domainId\": \"<integer>\",\n \"shouldRestrictSites\": \"<boolean>\",\n \"teamDescription\": \"<string>\",\n \"teamId\": \"<integer>\",\n \"teamName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"teamDescription\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"teamName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Team Audits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id",
								"audits"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Search, filter, sort, and page team audits"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Team Audit search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"delegatedUserId\": \"<integer>\",\n   \"displayName\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"teamAuditId\": \"<integer>\",\n   \"teamId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"delegatedUserId\": \"<integer>\",\n   \"displayName\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"teamAuditId\": \"<integer>\",\n   \"teamId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"Warn\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Users In Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:id/members?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id",
								"members"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Get members in a team"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Get Team membership. Includes Groups and Users. User will be their personal GroupId.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"groupDisplayName\": \"<string>\",\n  \"groupId\": \"<integer>\",\n  \"teamGroupMembershipId\": \"<integer>\",\n  \"teamId\": \"<integer>\",\n  \"type\": \"<string>\"\n },\n {\n  \"groupDisplayName\": \"<string>\",\n  \"groupId\": \"<integer>\",\n  \"teamGroupMembershipId\": \"<integer>\",\n  \"teamId\": \"<integer>\",\n  \"type\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Update Team Members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"groupIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:id/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id",
								"members"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Save members of the team by GroupId"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"groupIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"groupIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Get Team membership. Includes Groups and Users. User will be their personal GroupId.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"groupIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"groupDisplayName\": \"<string>\",\n  \"groupId\": \"<integer>\",\n  \"teamGroupMembershipId\": \"<integer>\",\n  \"teamId\": \"<integer>\",\n  \"type\": \"<string>\"\n },\n {\n  \"groupDisplayName\": \"<string>\",\n  \"groupId\": \"<integer>\",\n  \"teamGroupMembershipId\": \"<integer>\",\n  \"teamId\": \"<integer>\",\n  \"type\": \"<string>\"\n }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domainId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"groupIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"members"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get Sites for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:id/sites?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id",
								"sites"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "(Required) includeInactive"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Get sites a team has associated"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Get Team Sites.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"siteId\": \"<integer>\",\n  \"siteName\": \"<string>\",\n  \"teamId\": \"<integer>\",\n  \"teamSiteMapId\": \"<integer>\"\n },\n {\n  \"siteId\": \"<integer>\",\n  \"siteName\": \"<string>\",\n  \"teamId\": \"<integer>\",\n  \"teamSiteMapId\": \"<integer>\"\n }\n]"
						}
					]
				},
				{
					"name": "Update Team Sites",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shouldRestrictSites\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"siteIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:id/sites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":id",
								"sites"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Team ID"
								}
							]
						},
						"description": "Save sites of the team by SiteId"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldRestrictSites\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"siteIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldRestrictSites\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"siteIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Get Team Sites.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldRestrictSites\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"siteIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"siteId\": \"<integer>\",\n  \"siteName\": \"<string>\",\n  \"teamId\": \"<integer>\",\n  \"teamSiteMapId\": \"<integer>\"\n },\n {\n  \"siteId\": \"<integer>\",\n  \"siteName\": \"<string>\",\n  \"teamId\": \"<integer>\",\n  \"teamSiteMapId\": \"<integer>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldRestrictSites\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"siteIds\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:id/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":id",
										"sites"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Team Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								"stub"
							]
						},
						"description": "Return the default values for a new team"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Team object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"domainId\": \"<integer>\",\n \"shouldRestrictSites\": \"<boolean>\",\n \"teamDescription\": \"<string>\",\n \"teamId\": \"<integer>\",\n \"teamName\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain user security teams"
		},
		{
			"name": "TicketSystems",
			"item": [
				{
					"name": "Gets all ticket systems",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ticket-systems?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-systems"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "includeInactive"
								}
							]
						},
						"description": "Gets all ticket systems."
					},
					"response": [
						{
							"name": "Ticket System Models",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"active\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"displayMessage\": \"<string>\",\n  \"forceRequireTicketNumber\": \"<integer>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ticketSystemId\": \"<integer>\",\n  \"ticketSystemTypeId\": \"<integer>\",\n  \"viewTicketUrl\": \"<string>\"\n },\n {\n  \"active\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"displayMessage\": \"<string>\",\n  \"forceRequireTicketNumber\": \"<integer>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ticketSystemId\": \"<integer>\",\n  \"ticketSystemTypeId\": \"<integer>\",\n  \"viewTicketUrl\": \"<string>\"\n }\n]"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Gets a ticket system by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ticket-systems/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-systems",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Ticket System ID"
								}
							]
						},
						"description": "Gets a ticket system by ID."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Ticket System Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket-systems/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket-systems",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"description\": \"<string>\",\n \"displayMessage\": \"<string>\",\n \"forceRequireTicketNumber\": \"<integer>\",\n \"isDefault\": \"<boolean>\",\n \"name\": \"<string>\",\n \"ticketSystemId\": \"<integer>\",\n \"ticketSystemTypeId\": \"<integer>\",\n \"viewTicketUrl\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "TicketSystemsController"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Domains",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Get Domains"
					},
					"response": [
						{
							"name": "Domain summary list",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"distinguishedName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"friendlyName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"concurrencyId\": \"<string>\",\n   \"distinguishedName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"domainName\": \"<string>\",\n   \"friendlyName\": \"<string>\",\n   \"siteId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "filter.domainId",
									"value": "<integer>",
									"description": "Filter users by Active Directory domain"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive users in the results"
								},
								{
									"key": "filter.searchFields",
									"value": "<string>",
									"description": "Fields to search"
								},
								{
									"key": "filter.searchFields",
									"value": "<string>",
									"description": "Fields to search"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page users"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"created\": \"<dateTime>\",\n   \"displayName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"emailAddress\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"isApplicationAccount\": \"<boolean>\",\n   \"isLockedOut\": \"<boolean>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"loginFailures\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"created\": \"<dateTime>\",\n   \"displayName\": \"<string>\",\n   \"domainId\": \"<integer>\",\n   \"emailAddress\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"id\": \"<integer>\",\n   \"isApplicationAccount\": \"<boolean>\",\n   \"isLockedOut\": \"<boolean>\",\n   \"lastLogin\": \"<dateTime>\",\n   \"loginFailures\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"twoFactor\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new user"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "User object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"adGuid\": \"<string>\",\n    \"domainId\": \"<integer>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id?includeInactive=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"query": [
								{
									"key": "includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive users in the results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Get a single user by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "User object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id?includeInactive=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "includeInactive",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dateOptionId\": \"<integer>\",\n    \"displayName\": \"<string>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": \"<boolean>\",\n    \"loginFailures\": \"<integer>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"timeOptionId\": \"<integer>\",\n    \"twoFactor\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Update a single user by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": \"<integer>\",\n    \"displayName\": \"<string>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": \"<boolean>\",\n    \"loginFailures\": \"<integer>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"timeOptionId\": \"<integer>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": \"<integer>\",\n    \"displayName\": \"<string>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": \"<boolean>\",\n    \"loginFailures\": \"<integer>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"timeOptionId\": \"<integer>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User object",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": \"<integer>\",\n    \"displayName\": \"<string>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": \"<boolean>\",\n    \"loginFailures\": \"<integer>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"timeOptionId\": \"<integer>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": \"<integer>\",\n    \"displayName\": \"<string>\",\n    \"duoTwoFactor\": \"<boolean>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"fido2TwoFactor\": \"<boolean>\",\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": \"<boolean>\",\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": \"<boolean>\",\n    \"loginFailures\": \"<integer>\",\n    \"oathTwoFactor\": \"<boolean>\",\n    \"password\": \"<string>\",\n    \"radiusTwoFactor\": \"<boolean>\",\n    \"radiusUserName\": \"<string>\",\n    \"timeOptionId\": \"<integer>\",\n    \"twoFactor\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Delete a user by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get configuration for current user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dateOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"displayName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"duoTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"emailAddress\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"enabled\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"fido2TwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"loginFailures\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"oathTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"password\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"radiusTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"radiusUserName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"timeOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"twoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Get configuration for current user"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"displayName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"duoTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"emailAddress\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"enabled\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"fido2TwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"loginFailures\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"oathTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"password\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"radiusTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"radiusUserName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"timeOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"twoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "User Configuration",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"displayName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"duoTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"emailAddress\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"enabled\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"fido2TwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"loginFailures\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"oathTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"password\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"radiusTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"radiusUserName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"timeOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"twoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"displayName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"duoTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"emailAddress\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"enabled\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"fido2TwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"loginFailures\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"oathTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"password\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"radiusTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"radiusUserName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"timeOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"twoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"displayName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"duoTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"emailAddress\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"enabled\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"fido2TwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"groupOwners\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"id\": \"<integer>\",\n    \"isApplicationAccount\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"isGroupOwnerUpdate\": \"<boolean>\",\n    \"isLockedOut\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"loginFailures\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"oathTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"password\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"radiusTwoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"radiusUserName\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"timeOptionId\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"twoFactor\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get User Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"groups"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Get the groups for a user by ID"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Group membership results",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"groupDomainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"userDomainId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  },\n  {\n   \"groupDomainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"groupName\": \"<string>\",\n   \"userDomainId\": \"<integer>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/groups?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get User Owners",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id/owners?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"owners"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Get the owners for a user by ID"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User owner results",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"domainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"isUser\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"userId\": \"<integer>\"\n  },\n  {\n   \"domainId\": \"<integer>\",\n   \"groupId\": \"<integer>\",\n   \"id\": \"<integer>\",\n   \"isUser\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"userId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Retry\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Add User Owner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"owners"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								}
							]
						},
						"description": "Add an owner to a single user"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User owner object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domainId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isUser\": \"<boolean>\",\n \"name\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"<integer>\",\n    \"groupName\": \"<string>\",\n    \"userId\": \"<integer>\",\n    \"userName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get User Owner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								},
								{
									"key": "ownerId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Owner ID"
								}
							]
						},
						"description": "Get a single owner for a user"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "User owner object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domainId\": \"<integer>\",\n \"groupId\": \"<integer>\",\n \"id\": \"<integer>\",\n \"isUser\": \"<boolean>\",\n \"name\": \"<string>\",\n \"userId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Remove User Owner",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) User ID"
								},
								{
									"key": "ownerId",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Owner ID"
								}
							]
						},
						"description": "Remove an owner from a single user"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Object deletion result",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"objectType\": \"<string>\",\n \"responseCodes\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Change User Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"change-password"
							]
						},
						"description": "Change a user's password"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"change-password"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"change-password"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"change-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "User object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"change-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"current"
							]
						},
						"description": "Gets the current user"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"current"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Current user result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"current"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adminLinks\": [\n  {\n   \"link\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"link\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"emailAddress\": \"<string>\",\n \"id\": \"<integer>\",\n \"permissions\": [\n  {\n   \"name\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\"\n  }\n ],\n \"profileLinks\": [\n  {\n   \"link\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"link\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"timeOptionId\": \"<integer>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"userTheme\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"current"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"current"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a user's personally identifiable info",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/delete-pii/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"delete-pii",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) id"
								}
							]
						},
						"description": "Delete a user's personally identifiable info"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/delete-pii/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"delete-pii",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/delete-pii/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"delete-pii",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Success / Fail",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/delete-pii/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"delete-pii",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<boolean>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/delete-pii/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"delete-pii",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Lookup Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"lookup"
							],
							"query": [
								{
									"key": "filter.domainId",
									"value": "<integer>",
									"description": "Filter users by Active Directory domain"
								},
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "Whether to include inactive users in the results"
								},
								{
									"key": "filter.searchFields",
									"value": "<string>",
									"description": "Fields to search"
								},
								{
									"key": "filter.searchFields",
									"value": "<string>",
									"description": "Fields to search"
								},
								{
									"key": "filter.searchText",
									"value": "<string>",
									"description": "Search text"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page users, returning only user ID and name"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "User search result object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"value\": \"<string>\"\n  }\n ],\n \"severity\": \"Critical\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/lookup?filter.domainId=<integer>&filter.includeInactive=<boolean>&filter.searchFields=<string>&filter.searchFields=<string>&filter.searchText=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"lookup"
									],
									"query": [
										{
											"key": "filter.domainId",
											"value": "<integer>"
										},
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchFields",
											"value": "<string>"
										},
										{
											"key": "filter.searchText",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get User Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"stub"
							]
						},
						"description": "Return the default values for a new user"
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "User object",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"adAccountExpires\": \"<dateTime>\",\n \"adGuid\": \"<string>\",\n \"created\": \"<dateTime>\",\n \"dateOptionId\": \"<integer>\",\n \"displayName\": \"<string>\",\n \"domainId\": \"<integer>\",\n \"duoTwoFactor\": \"<boolean>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\",\n \"fido2TwoFactor\": \"<boolean>\",\n \"id\": \"<integer>\",\n \"isApplicationAccount\": \"<boolean>\",\n \"isEmailCopiedFromAD\": \"<boolean>\",\n \"isEmailVerified\": \"<boolean>\",\n \"isLockedOut\": \"<boolean>\",\n \"lastLogin\": \"<dateTime>\",\n \"lastSessionActivity\": \"<dateTime>\",\n \"loginFailures\": \"<integer>\",\n \"mustVerifyEmail\": \"<boolean>\",\n \"oathTwoFactor\": \"<boolean>\",\n \"oathVerified\": \"<boolean>\",\n \"organizationUnitId\": \"<integer>\",\n \"passwordLastChanged\": \"<dateTime>\",\n \"radiusTwoFactor\": \"<boolean>\",\n \"radiusUserName\": \"<string>\",\n \"resetSessionStarted\": \"<dateTime>\",\n \"timeOptionId\": \"<integer>\",\n \"twoFactor\": \"<boolean>\",\n \"userLcid\": \"<integer>\",\n \"userName\": \"<string>\",\n \"verifyEmailSentDate\": \"<dateTime>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain users"
		},
		{
			"name": "Version",
			"item": [
				{
					"name": "Secret Server Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						},
						"description": "Retrieve Secret Server Version"
					},
					"response": [
						{
							"name": "Unknown or empty response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "Secret Server Version"
		},
		{
			"name": "WorkflowInstances",
			"item": [
				{
					"name": "Get Workflow Instances By Workflow Template Id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/instances/template/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"instances",
								"template",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template ID"
								}
							]
						},
						"description": "Get active workflow instances that use the given workflow template"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/instances/template/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"instances",
										"template",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/instances/template/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"instances",
										"template",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/instances/template/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"instances",
										"template",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "The active workflow instances that use the Workflow Template",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/instances/template/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"instances",
										"template",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"configurationJson\": \"<string>\",\n  \"currentState\": \"<string>\",\n  \"currentStateInfoJson\": \"<string>\",\n  \"currentStepId\": \"<integer>\",\n  \"currentStepState\": \"WaitingForRequest\",\n  \"endTime\": \"<dateTime>\",\n  \"entityWorkflowMapId\": \"<integer>\",\n  \"expirationTime\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"pendingTransaction\": \"<boolean>\",\n  \"startTime\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"workflowTemplateId\": \"<integer>\"\n },\n {\n  \"configurationJson\": \"<string>\",\n  \"currentState\": \"<string>\",\n  \"currentStateInfoJson\": \"<string>\",\n  \"currentStepId\": \"<integer>\",\n  \"currentStepState\": \"WaitingForRequest\",\n  \"endTime\": \"<dateTime>\",\n  \"entityWorkflowMapId\": \"<integer>\",\n  \"expirationTime\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"pendingTransaction\": \"<boolean>\",\n  \"startTime\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"workflowTemplateId\": \"<integer>\"\n }\n]"
						}
					]
				}
			],
			"description": "View and maintain Workflow Instances"
		},
		{
			"name": "WorkflowStepTemplates",
			"item": [
				{
					"name": "Get Workflow Template Steps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/steps?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"steps"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template ID"
								}
							]
						},
						"description": "Get all the steps for a workflow template"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "A list of workflow step models",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"configuration\": {},\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"workflowStepTemplateId\": \"<integer>\",\n   \"workflowTemplateId\": \"<integer>\"\n  },\n  {\n   \"configuration\": {},\n   \"name\": \"<string>\",\n   \"order\": \"<integer>\",\n   \"workflowStepTemplateId\": \"<integer>\",\n   \"workflowTemplateId\": \"<integer>\"\n  }\n ],\n \"severity\": \"None\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Desc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update Workflow Template Steps",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workflowStepTemplates\": [\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        },\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/steps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"steps"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template ID"
								}
							]
						},
						"description": "Update the steps for a workflow template"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowStepTemplates\": [\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        },\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "The workflow template steps",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowStepTemplates\": [\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        },\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"configuration\": {},\n  \"name\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"workflowStepTemplateId\": \"<integer>\",\n  \"workflowTemplateId\": \"<integer>\"\n },\n {\n  \"configuration\": {},\n  \"name\": \"<string>\",\n  \"order\": \"<integer>\",\n  \"workflowStepTemplateId\": \"<integer>\",\n  \"workflowTemplateId\": \"<integer>\"\n }\n]"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowStepTemplates\": [\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        },\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowStepTemplates\": [\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        },\n        {\n            \"configuration\": {},\n            \"name\": \"<string>\",\n            \"order\": \"<integer>\",\n            \"workflowStepTemplateId\": \"<integer>\",\n            \"workflowTemplateId\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Workflow Step",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowTemplateId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/steps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"steps"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								}
							]
						},
						"description": "Create a step for a Workflow Template"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "New Workflow Template Steps ID",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						}
					]
				},
				{
					"name": "Get a Workflow Template Step",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"steps",
								":stepNum"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								},
								{
									"key": "stepNum",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Step Number"
								}
							]
						},
						"description": "Get a step for a workflow template"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "A workflow step model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"configuration\": {},\n \"name\": \"<string>\",\n \"order\": \"<integer>\",\n \"workflowStepTemplateId\": \"<integer>\",\n \"workflowTemplateId\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a Workflow Template Step",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowStepTemplateId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"steps",
								":stepNum"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template ID"
								},
								{
									"key": "stepNum",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Step Number"
								}
							]
						},
						"description": "Updates a single Workflow Template Step by ID"
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowStepTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowStepTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowStepTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Workflow Template Step",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {},\n    \"name\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"workflowStepTemplateId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/steps/:stepNum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"steps",
										":stepNum"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "stepNum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"configuration\": {},\n \"name\": \"<string>\",\n \"order\": \"<integer>\",\n \"workflowStepTemplateId\": \"<integer>\",\n \"workflowTemplateId\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get a Workflow Template Step Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/steps/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								"steps",
								"stub"
							]
						},
						"description": "Get an empty Workflow Template Step"
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/steps/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"steps",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "An empty workflow step",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/steps/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"steps",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"configurationJson\": \"<string>\",\n \"description\": \"<string>\",\n \"expirationMinutes\": \"<integer>\",\n \"name\": \"<string>\",\n \"reusable\": \"<boolean>\",\n \"typeName\": \"<string>\",\n \"workflowTemplateId\": \"<integer>\",\n \"workflowType\": \"AccessRequest\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/steps/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"steps",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/steps/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"steps",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Workflow Template Steps"
		},
		{
			"name": "WorkflowTemplates",
			"item": [
				{
					"name": "Get a Workflow Template List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates?filter.includeInactive=<boolean>&filter.workflowType=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates"
							],
							"query": [
								{
									"key": "filter.includeInactive",
									"value": "<boolean>",
									"description": "IncludeInactive"
								},
								{
									"key": "filter.workflowType",
									"value": "<string>",
									"description": "WorkflowType"
								},
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							]
						},
						"description": "Search, filter, sort, and page Workflow Templates."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates?filter.includeInactive=<boolean>&filter.workflowType=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.workflowType",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates?filter.includeInactive=<boolean>&filter.workflowType=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.workflowType",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "A paginated list of Workflow Templates.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates?filter.includeInactive=<boolean>&filter.workflowType=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.workflowType",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"active\": \"<boolean>\",\n   \"configurationJson\": \"<string>\",\n   \"description\": \"<string>\",\n   \"expirationMinutes\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"reusable\": \"<boolean>\",\n   \"typeName\": \"<string>\",\n   \"workflowTemplateId\": \"<integer>\",\n   \"workflowType\": \"AccessRequest\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"configurationJson\": \"<string>\",\n   \"description\": \"<string>\",\n   \"expirationMinutes\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"reusable\": \"<boolean>\",\n   \"typeName\": \"<string>\",\n   \"workflowTemplateId\": \"<integer>\",\n   \"workflowType\": \"AccessRequest\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"Asc\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates?filter.includeInactive=<boolean>&filter.workflowType=<string>&skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									],
									"query": [
										{
											"key": "filter.includeInactive",
											"value": "<boolean>"
										},
										{
											"key": "filter.workflowType",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a Workflow Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workflowType\": \"AccessRequest\",\n    \"name\": \"<string>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/workflows/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates"
							]
						},
						"description": "Create a new Workflow Template."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowType\": \"AccessRequest\",\n    \"name\": \"<string>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowType\": \"AccessRequest\",\n    \"name\": \"<string>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "The new Workflow Template's ID.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowType\": \"AccessRequest\",\n    \"name\": \"<string>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workflowType\": \"AccessRequest\",\n    \"name\": \"<string>\",\n    \"configurationJson\": \"<string>\",\n    \"description\": \"<string>\",\n    \"expirationMinutes\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get a Workflow Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								}
							]
						},
						"description": "Request a specific Workflow Template by ID."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "The requested Workflow Template.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"configurationJson\": \"<string>\",\n \"description\": \"<string>\",\n \"expirationMinutes\": \"<integer>\",\n \"name\": \"<string>\",\n \"reusable\": \"<boolean>\",\n \"typeName\": \"<string>\",\n \"workflowTemplateId\": \"<integer>\",\n \"workflowType\": \"AccessRequest\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a Workflow Template",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"configurationJson\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"description\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"expirationMinutes\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"isCopy\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"name\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template ID"
								}
							]
						},
						"description": "Update a single Workflow Template by ID."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"configurationJson\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"description\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"expirationMinutes\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"isCopy\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"name\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "The updated Workflow Template.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"configurationJson\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"description\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"expirationMinutes\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"isCopy\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"name\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"configurationJson\": \"<string>\",\n \"description\": \"<string>\",\n \"expirationMinutes\": \"<integer>\",\n \"name\": \"<string>\",\n \"reusable\": \"<boolean>\",\n \"typeName\": \"<string>\",\n \"workflowTemplateId\": \"<integer>\",\n \"workflowType\": \"AccessRequest\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"configurationJson\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"description\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"expirationMinutes\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"isCopy\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"name\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"configurationJson\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"description\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    },\n    \"expirationMinutes\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<integer>\"\n    },\n    \"isCopy\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<boolean>\"\n    },\n    \"name\": {\n        \"dirty\": \"<boolean>\",\n        \"value\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get a Workflow Template Audit List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"audits"
							],
							"query": [
								{
									"key": "skip",
									"value": "<integer>",
									"description": "Number of records to skip before taking results"
								},
								{
									"key": "sortBy[0].direction",
									"value": "<string>",
									"description": "Sort direction"
								},
								{
									"key": "sortBy[0].name",
									"value": "<string>",
									"description": "Sort field name"
								},
								{
									"key": "sortBy[0].priority",
									"value": "<integer>",
									"description": "Priority index. Sorts with lower values are executed earlier"
								},
								{
									"key": "take",
									"value": "<integer>",
									"description": "Maximum number of records to include in results"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								}
							]
						},
						"description": "Search, filter, sort, and page Workflow Template Audits."
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "A paginated list of Workflow Template Audits.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batchCount\": \"<integer>\",\n \"currentPage\": \"<integer>\",\n \"hasNext\": \"<boolean>\",\n \"hasPrev\": \"<boolean>\",\n \"nextSkip\": \"<integer>\",\n \"pageCount\": \"<integer>\",\n \"prevSkip\": \"<integer>\",\n \"records\": [\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"delegatedUserName\": \"<string>\",\n   \"delegateUserId\": \"<integer>\",\n   \"displayName\": \"<string>\",\n   \"formattedDate\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\",\n   \"workflowTemplateAuditId\": \"<integer>\",\n   \"workflowTemplateId\": \"<integer>\"\n  },\n  {\n   \"action\": \"<string>\",\n   \"databaseName\": \"<string>\",\n   \"dateRecorded\": \"<dateTime>\",\n   \"delegatedUserName\": \"<string>\",\n   \"delegateUserId\": \"<integer>\",\n   \"displayName\": \"<string>\",\n   \"formattedDate\": \"<string>\",\n   \"ipAddress\": \"<string>\",\n   \"machineName\": \"<string>\",\n   \"notes\": \"<string>\",\n   \"userId\": \"<integer>\",\n   \"userName\": \"<string>\",\n   \"workflowTemplateAuditId\": \"<integer>\",\n   \"workflowTemplateId\": \"<integer>\"\n  }\n ],\n \"severity\": \"Fatal\",\n \"skip\": \"<integer>\",\n \"sortBy\": [\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"direction\": \"None\",\n   \"priority\": \"<integer>\"\n  }\n ],\n \"success\": \"<boolean>\",\n \"take\": \"<integer>\",\n \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/audits?skip=<integer>&sortBy[0].direction=<string>&sortBy[0].name=<string>&sortBy[0].priority=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"audits"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "sortBy[0].direction",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].name",
											"value": "<string>"
										},
										{
											"key": "sortBy[0].priority",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Cancel Workflow Requests",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/cancel-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"cancel-requests"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								}
							]
						},
						"description": "Cancel all Workflow Requests that are using the provided Workflow Template."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/cancel-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"cancel-requests"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/cancel-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"cancel-requests"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/cancel-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"cancel-requests"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Confirmation of cancellation.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/cancel-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"cancel-requests"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Count of Entities using a Workflow Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/:id/entities/:includeAll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								":id",
								"entities",
								":includeAll"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) Workflow Template Id"
								},
								{
									"key": "includeAll",
									"value": "<boolean>",
									"type": "string",
									"description": "(Required) includeAll"
								}
							]
						},
						"description": "Request the number of entities that use the Workflow Template."
					},
					"response": [
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/entities/:includeAll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"entities",
										":includeAll"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "includeAll"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/entities/:includeAll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"entities",
										":includeAll"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "includeAll"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "The number of entities that use the workflow template.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/entities/:includeAll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"entities",
										":includeAll"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "includeAll"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<integer>\""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/:id/entities/:includeAll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										":id",
										"entities",
										":includeAll"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "includeAll"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "Get a Workflow Template Stub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflows/templates/stub",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows",
								"templates",
								"stub"
							]
						},
						"description": "Get an empty Workflow Template."
					},
					"response": [
						{
							"name": "An Workflow Template.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"stub"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": \"<boolean>\",\n \"configurationJson\": \"<string>\",\n \"description\": \"<string>\",\n \"expirationMinutes\": \"<integer>\",\n \"name\": \"<string>\",\n \"reusable\": \"<boolean>\",\n \"typeName\": \"<string>\",\n \"workflowTemplateId\": \"<integer>\",\n \"workflowType\": \"AccessRequest\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"stub"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"messageDetail\": \"<string>\",\n \"errorCode\": \"<string>\",\n \"modelState\": \"<object>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"stub"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\",\n \"exceptionMessage\": \"<string>\",\n \"exceptionType\": \"<string>\",\n \"stackTrace\": \"<string>\"\n}"
						},
						{
							"name": "Authentication failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflows/templates/stub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflows",
										"templates",
										"stub"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "View and maintain Workflow Templates"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//visualizer code",
					"var template = `",
					"    <style type=\"text/css\">",
					"        .tftable {font-size:14px;color:#333333;width:50%;border-width: 1px;border-color: #3CC4E5;border-collapse: collapse;}",
					"        .tftable th {font-size:14px;background-color:#81bc00;border-width: 1px;padding: 1px;border-style: solid;border-color: #87ceeb;text-align:left;}",
					"        .tftable tr {background-color:#ffffff;}",
					"        .tftable td {font-size:12px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
					"        .tftable tr:hover {background-color:#F1C400;}",
					"    </style>",
					"    <table class=\"tftable\" border=\"1\">",
					"          <tr>",
					"            {{#each response.records.[0]}}",
					"                <th>{{@key}}</th>",
					"            {{/each}}",
					"          </tr>",
					"        ",
					"        {{#each response.records}}",
					"            <tr>",
					"                {{#each this}}",
					"                    <td>{{this}}</td>",
					"                {{/each}}",
					"            </tr>",
					"        {{/each}}",
					"    ",
					"    </table>",
					"",
					"`;",
					"",
					"pm.visualizer.set(template, {",
					"    response: pm.response.json()",
					"});",
					""
				]
			}
		}
	]
}